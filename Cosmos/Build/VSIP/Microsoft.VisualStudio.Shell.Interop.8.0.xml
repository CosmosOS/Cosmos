<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualStudio.Shell.Interop.8.0</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.SBindHost">
      <summary>Passed to the <see cref="M:Microsoft.VisualStudio.OLE.Interop.IServiceProvider.QueryService(System.Guid@,System.Guid@,System.IntPtr@)" /> method to return a reference to the <see cref="T:Microsoft.VisualStudio.OLE.Interop.IBindHost" /> interface.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.SContainerDispatch">
      <summary>Passed to the <see cref="M:Microsoft.VisualStudio.OLE.Interop.IServiceProvider.QueryService(System.Guid@,System.Guid@,System.IntPtr@)" /> method to return a reference to the IDispatch Interface [Automation].</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.OLE.Interop.SOleUndoManager">
      <summary>Passed to the <see cref="M:Microsoft.VisualStudio.OLE.Interop.IServiceProvider.QueryService(System.Guid@,System.Guid@,System.IntPtr@)" /> method to return a reference to the <see cref="T:Microsoft.VisualStudio.OLE.Interop.IOleUndoManager" /> interface.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.IOleMenuCommand">
      <summary>Represents an OLE menu command. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.IOleMenuCommand.DynamicItemMatch(System.Int32)">
      <summary>Allows a dynamic item command to match the subsequent items in its list. </summary>
      <returns>true if there was a match, otherwise false.</returns>
      <param name="cmdId">The command ID.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.IOleMenuCommand.Invoke(System.Object,System.IntPtr)">
      <summary>Invokes the command.</summary>
      <param name="inArg">The in parameters.</param>
      <param name="outArg">The out parameter.</param>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.IOleMenuCommand.ParametersDescription">
      <summary>Gets or sets the parameter description.</summary>
      <returns>The parameter description.</returns>
    </member>
    <member name="P:Microsoft.VisualStudio.Shell.IOleMenuCommand.Text">
      <summary>Gets or sets the text.</summary>
      <returns>The text.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__ACTIVITYLOG_ENTRYTYPE">
      <summary>Specifies the type of an entry in an activity log.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__ACTIVITYLOG_ENTRYTYPE.ALE_ERROR">
      <summary>Specifies an error entry.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__ACTIVITYLOG_ENTRYTYPE.ALE_INFORMATION">
      <summary>Specifies an informational entry.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__ACTIVITYLOG_ENTRYTYPE.ALE_WARNING">
      <summary>Specifies a warning entry. </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__BUILDOUTOFDATEPROJECTS">
      <summary>Specifies options for rebuilding out-of-date projects.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__BUILDOUTOFDATEPROJECTS.BUILDOUTOFDATEPROJECTS_MAX">
      <summary>Automatically rebuild out-of-date projects if they do not exceed a specified count. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__BUILDOUTOFDATEPROJECTS.BUILDOUTOFDATEPROJECTS_NO">
      <summary>Do not automatically rebuild out-of-date projects.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__BUILDOUTOFDATEPROJECTS.BUILDOUTOFDATEPROJECTS_PROMPT">
      <summary>Prompt before rebuilding out-of-date projects.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__BUILDOUTOFDATEPROJECTS.BUILDOUTOFDATEPROJECTS_YES">
      <summary>Automatically rebuild out-of-date projects.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__BWI_IMAGE_POS">
      <summary>Specifies where an image is placed on a button.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__BWI_IMAGE_POS.BWI_IMAGE_ONLY">
      <summary>Only the image is drawn on the button. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__BWI_IMAGE_POS.BWI_IMAGE_POS_LEFT">
      <summary>The image is drawn to the left of the text on the button.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__BWI_IMAGE_POS.BWI_IMAGE_POS_RIGHT">
      <summary>The image is drawn to the right of the text on the button.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__COMMANDWINDOWMODE2">
      <summary>Defines additional values for the <see cref="T:Microsoft.VisualStudio.Shell.Interop.COMMANDWINDOWMODE" /> enumeration.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__COMMANDWINDOWMODE2.CWM_DEFAULT">
      <summary>Default mode (specified in user options).</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__FRAMESHOW2">
      <summary>Adds members to <see cref="T:Microsoft.VisualStudio.Shell.Interop.__FRAMESHOW" /> enumeration, which specifies the state of a window frame.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__FRAMESHOW2.FRAMESHOW_AutoHideSlideEnd">
      <summary>Auto-hidden window is finished sliding into view. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__FRAMESHOW2.FRAMESHOW_BeforeWinHidden">
      <summary>A window is about to be hidden.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__GRADIENTTYPE">
      <summary>Specifies different types of gradients that can be used as backgrounds in VSPackages.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__GRADIENTTYPE.VSGRADIENT_FILETAB">
      <summary>File Tab. Typically a vertical gradient with a light gray at the top and a medium gray at the bottom. Usually is the active tab on the Solution Explorer.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__GRADIENTTYPE.VSGRADIENT_PANEL_BACKGROUND">
      <summary>Panel Background. Typically a horizontal gradient with light gray at the left and a medium gray at the right. Usually is the background of the Visual Basic error list window.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__GRADIENTTYPE.VSGRADIENT_SHELLBACKGROUND">
      <summary>Shell background. Typically a horizontal gradient of light gray at the left to a slightly lighter gray at the right. Usually is the background of the tabs on a docked window, the color of a splitter window frame, and the auto-hide space for the Toolbox and Server Explorer panels.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__GRADIENTTYPE.VSGRADIENT_TOOLBOX_HEADING">
      <summary>Toolbox Heading. Typically a single medium gray color with no actual gradient. Usually is the background of the Toolbox heading.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__GRADIENTTYPE.VSGRADIENT_TOOLTAB">
      <summary>Tool tab. Typically a vertical gradient with a medium gray at the top and a light gray at the bottom. Usually is the background of any tab that is not selected.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__GRADIENTTYPE.VSGRADIENT_TOOLWIN_ACTIVE_TITLE_BAR">
      <summary>Tool window active title bar. Typically a vertical gradient with a light blue at the top and a medium blue at the bottom. Usually is the background of an active tool window title bar.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__GRADIENTTYPE.VSGRADIENT_TOOLWIN_BACKGROUND">
      <summary>Tool window default background. Typically a horizontal gradient with a light gray at the left and a medium gray at the right. Usually is the background of the Toolbox.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__GRADIENTTYPE.VSGRADIENT_TOOLWIN_INACTIVE_TITLE_BAR">
      <summary>Tool window inactive title bar. Typically a solid medium gray with no gradient. Typically seen as the background of a tool window when it is docked and does not currently have focus (undocked tool windows use standard Windows title bar colors).</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__HANDSOFFMODE">
      <summary>Flags for HandsOn/Off functions of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsTrackProjectDocuments3" /> interface.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__HANDSOFFMODE.HANDSOFFMODE_AsyncOperation">
      <summary>Caller must have access to the file for an extended period of time. Caller guarantees to call <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsTrackProjectDocuments3.HandsOnFiles(System.Int32,System.String[])" /> to tell parties when they can access the file. Incompatible <paramref name="AsyncOperations" /> do not nest. HandsOffFiles returns E_ACCESSDENIED if there is a pending incompatible <paramref name="AsyncOperation" />. There can be multiple nested Async <paramref name="ReadAccess" /> operations but <paramref name="WriteAccess" /> and <paramref name="DeleteAccess" /> operations cannot be nested.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__HANDSOFFMODE.HANDSOFFMODE_DeleteAccess">
      <summary>Caller must have access to delete or rename.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__HANDSOFFMODE.HANDSOFFMODE_FullAccess">
      <summary>Caller must have  power to rename or delete the file.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__HANDSOFFMODE.HANDSOFFMODE_ReadAccess">
      <summary>Caller must have read-only access (shared read locks are OK to keep open).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__HANDSOFFMODE.HANDSOFFMODE_ReadWriteAccess">
      <summary>Caller must have both read and write.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__HANDSOFFMODE.HANDSOFFMODE_WriteAccess">
      <summary>Caller must have  write-only access (shared write locks are OK to keep open).</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__MENUEDITOR_TRANSACTION">
      <summary>Specifies Undo/Redo transactions.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__MENUEDITOR_TRANSACTION.MENUEDITOR_TRANSACTION_ALL">
      <summary>Forces a reset.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__MENUEDITOR_TRANSACTION.MENUEDITOR_TRANSACTION_COPY">
      <summary>Copy transaction.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__MENUEDITOR_TRANSACTION.MENUEDITOR_TRANSACTION_CUT">
      <summary>Cut transaction.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__MENUEDITOR_TRANSACTION.MENUEDITOR_TRANSACTION_DELETE">
      <summary>Delete transaction.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__MENUEDITOR_TRANSACTION.MENUEDITOR_TRANSACTION_DISCARD">
      <summary>Discards the current transaction.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__MENUEDITOR_TRANSACTION.MENUEDITOR_TRANSACTION_PASTE">
      <summary>Paste transaction.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__PREVIEWCHANGESITEMCHECKSTATE">
      <summary>Specifies the check-state of an item.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__PREVIEWCHANGESITEMCHECKSTATE.PCCS_Checked">
      <summary>Item and all its descendants are checked.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__PREVIEWCHANGESITEMCHECKSTATE.PCCS_None">
      <summary>Item doesn't have a check box channel.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__PREVIEWCHANGESITEMCHECKSTATE.PCCS_PartiallyChecked">
      <summary>Some descendants of this item are checked and others are unchecked.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__PREVIEWCHANGESITEMCHECKSTATE.PCCS_Unchecked">
      <summary>Item and all its descendants are unchecked.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__PREVIEWCHANGESWARNINGLEVEL">
      <summary>Provides preview changes warning levels.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__PREVIEWCHANGESWARNINGLEVEL.PCWL_Error">
      <summary>Error message</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__PREVIEWCHANGESWARNINGLEVEL.PCWL_Information">
      <summary>Informational message</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__PREVIEWCHANGESWARNINGLEVEL.PCWL_None">
      <summary>No message</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__PREVIEWCHANGESWARNINGLEVEL.PCWL_Warning">
      <summary>Warning message</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__PSFFILEID2">
      <summary>Adds Project Special Files members to <see cref="T:Microsoft.VisualStudio.Shell.Interop.__PSFFILEID" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__PSFFILEID2.PSFFILEID_AppDesigner">
      <summary>Get AppDesigner file.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__PSFFILEID2.PSFFILEID_AppManifest">
      <summary>Get AppManifest file.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__PSFFILEID2.PSFFILEID_AppSettings">
      <summary>Get App Settings.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__PSFFILEID2.PSFFILEID_AssemblyInfo">
      <summary>Get Assembly info.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__PSFFILEID2.PSFFILEID_AssemblyResource">
      <summary>Get Assembly Resource file.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__PSFFILEID2.PSFFILEID_FIRST2">
      <summary>Indicates the last PSFFIELDID2 defined.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__PSFFILEID2.PSFFILEID_WebSettings">
      <summary>Get WebSettings file.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__PSFFLAGS2">
      <summary>Defines additional members for <see cref="T:Microsoft.VisualStudio.Shell.Interop.__PSFFLAGS" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__PSFFLAGS2.PSFF_CheckoutIfExists">
      <summary>If the file exists, check it out of SCC.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__RUNAFTERBUILDERRORS">
      <summary>Specifies whether a target should be run after it builds with errors.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__RUNAFTERBUILDERRORS.RUNAFTERBUILDERRORS_MAX">
      <summary>Run the target if the number of errors is less than a specified limit.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__RUNAFTERBUILDERRORS.RUNAFTERBUILDERRORS_NO">
      <summary>Do not run the target.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__RUNAFTERBUILDERRORS.RUNAFTERBUILDERRORS_PROMPT">
      <summary>Prompt whether to run the target.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__RUNAFTERBUILDERRORS.RUNAFTERBUILDERRORS_YES">
      <summary>Run the target.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__SccToolsOptionsEnum">
      <summary>Options that can be viewed or updated for source control tools. Used exclusively by the methods on the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSccToolsOptions" /> interface.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__SccToolsOptionsEnum.ksctoAllowReadOnlyFilesNotUnderSccToBeEdited">
      <summary>Nonzero to allow files marked as read-only (but which are not under source control) to be edited.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__SccToolsOptionsEnum.ksctoBad">
      <summary>This value indicates an unrecognized option.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__SccToolsOptionsEnum.ksctoLast">
      <summary>This value is set to the last option in the enumeration. Do not use as an option.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__STOP_DEBUGGING_PROCESS_REASON">
      <summary>Indicates the reason that debugging was stoppe.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__STOP_DEBUGGING_PROCESS_REASON.SDPR_DETACH">
      <summary>Debugging was stopped because the debugger was detached.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__STOP_DEBUGGING_PROCESS_REASON.SDPR_TERMINATE">
      <summary>Debugging was stopped because the process was terminated.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__UPDATE_REFERENCE_REASON">
      <summary>Specifies reasons for updating project to project references.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__UPDATE_REFERENCE_REASON.URR_BUILD">
      <summary>Specifies that the project is being built. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__UPDATE_REFERENCE_REASON.URR_EXPLICIT_USER_ACTION">
      <summary>Specifies an explicit user action. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__UPDATE_REFERENCE_REASON.URR_PROJECT_OPEN">
      <summary>Specifies that a project is open. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__UPDATE_REFERENCE_REASON.URR_REFERENCE_ADDED">
      <summary>Specifies that a new reference has been added. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__UPDATE_REFERENCE_REASON.URR_REFERENCE_REMOVED">
      <summary>Specifies that a reference has been removed. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__UPDATE_REFERENCE_REASON.URR_REFERENCEPATH_CHANGED">
      <summary>Specifies that the path to the reference has changed. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__UPDATE_REFERENCE_REASON.URR_START_DEBUG">
      <summary>Specifies that the project is starting a debug operation. </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__UserSettingsFlags">
      <summary>Used by the integrated development environment (IDE) to define how imported settings are handled. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__UserSettingsFlags.USF_DisableOptimizations">
      <summary>Specifies that a VSPackage should disable optimizations.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__UserSettingsFlags.USF_None">
      <summary>Specifies that a VSPackage is free to either reset settings with valid imported values, or to treat settings import as an additive or merge operation.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__UserSettingsFlags.USF_ResetOnImport">
      <summary>Specifies that a VSPackage should overwrite any existing settings with valid imported settings.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSADDITEMFLAGS2">
      <summary>Specifies additional members of <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSADDITEMFLAGS" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSADDITEMFLAGS2.VSADDITEM_NoUserTemplateFeatures">
      <summary>Dialog does not have Standard Templates/User-defined Templates tabs or Online Template button.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSADDITEMFLAGS2.VSADDITEM_ShowOpenButtonDropDown">
      <summary>Shows drop-down menu under Open button on dialog box (default is not to have drop-down; see comment for <see cref="F:Microsoft.VisualStudio.Shell.Interop.__VSADDITEMFLAGS.VSADDITEM_NoOpenButtonDropDown" />).</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSADDNEWWEBITEMOPTIONS">
      <summary>Passed as an input parameter to the dialog box to preset these options.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSADDNEWWEBITEMOPTIONS.VSADDWEBITEM_IsValidMask">
      <summary>Masks the IsValid bits.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSADDNEWWEBITEMOPTIONS.VSADDWEBITEM_SelectMaster">
      <summary>Set if "Select master page" is checked.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSADDNEWWEBITEMOPTIONS.VSADDWEBITEM_SelectMasterIsValid">
      <summary>Set if the SelectMaster item is valid for the selected template.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSADDNEWWEBITEMOPTIONS.VSADDWEBITEM_SeparateCodeFile">
      <summary> Set if "Separate code file" is checked.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSADDNEWWEBITEMOPTIONS.VSADDWEBITEM_SeparateCodeFileIsValid">
      <summary>Set if the SeparateCodeFile item is valid for the selected template.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSASYNCHOPENPROJECTTYPE">
      <summary>Specifies how a project can be opened.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSASYNCHOPENPROJECTTYPE.AOPT_ASYNCHRONOUS">
      <summary>The project system supports the special "loading" state and needs only the project file to be successfully opened.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSASYNCHOPENPROJECTTYPE.AOPT_SYNCHRONOUS">
      <summary>None of the flags are set—the project can be opened only synchronously.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSBACKGROUNDTASKPRIORITY">
      <summary>Specifies background task priority.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSBACKGROUNDTASKPRIORITY.VSBACKGROUNDTASKPRIORITY_IMMEDIATE">
      <summary>Not implemented.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSBACKGROUNDTASKPRIORITY.VSBACKGROUNDTASKPRIORITY_OTHER">
      <summary>Placeholder for enum expansion.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSBACKGROUNDTASKPRIORITY.VSBACKGROUNDTASKPRIORITY_STANDARD">
      <summary>Standard priority.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSBLDCFGPROPID">
      <summary>Specifies property IDs for <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsBuildableProjectCfg2.GetBuildCfgProperty(System.Int32,System.Object@)" /> calls.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSBLDCFGPROPID.VSBLDCFGPROPID_FIRST">
      <summary>Specifies first VSBLDCFGPROPID_.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSBLDCFGPROPID.VSBLDCFGPROPID_LAST">
      <summary>Specifies last VSBLDCFGPROPID_.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSBLDCFGPROPID.VSBLDCFGPROPID_SupportsMTBuild">
      <summary>Specifies support for multi-threaded build.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSCALLBROWSERMODE">
      <summary> Specifies display options for the call browser.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCALLBROWSERMODE.CBM_CALLSFROM">
      <summary>Show call graph.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCALLBROWSERMODE.CBM_CALLSFROM_NEWWINDOW">
      <summary>Show call graph in a new window.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCALLBROWSERMODE.CBM_CALLSTO">
      <summary>Show callers graph.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCALLBROWSERMODE.CBM_CALLSTO_NEWWINDOW">
      <summary>Show callers graph in a new window.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSCFGPROPID2">
      <summary>Provides additional Property IDs for <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSCFGPROPID" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCFGPROPID2.VSCFGPROPID_FIRST2">
      <summary>Indicates the first VSCFGPROPID_</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCFGPROPID2.VSCFGPROPID_HideConfigurations">
      <summary>Configurations will be hidden when this project is the active selected project in the selection context.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSCOLORASPECT">
      <summary>Indicates if a color used in conjunction with the Visual Studio Font and Color service is a foreground or background color.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCOLORASPECT.CA_BACKGROUND">
      <summary>Indicates that a color value represents a background color.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCOLORASPECT.CA_FOREGROUND">
      <summary>Indicates that a color value represents a foreground color.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSCOLORTYPE">
      <summary>Contains the supported representation for a color values.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCOLORTYPE.CT_AUTOMATIC">
      <summary>The color tracks the Visual Studio session's automatic color.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCOLORTYPE.CT_COLORINDEX">
      <summary>The color value is a member of the enumeration.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCOLORTYPE.CT_INVALID">
      <summary>Color value is invalid.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCOLORTYPE.CT_RAW">
      <summary>The color value is a standard 32 bit RGB color value.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCOLORTYPE.CT_SYSCOLOR">
      <summary>The color value is one used with GetSyscolor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCOLORTYPE.CT_TRACK_BACKGROUND">
      <summary>The color tracks the Windows session's background color.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCOLORTYPE.CT_TRACK_FOREGROUND">
      <summary>The color tracks the Windows session's foreground color.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCOLORTYPE.CT_VSCOLOR">
      <summary>The color value is a member of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX" /> enumeration and can be used with <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsUIShell2.GetVSSysColorEx(System.Int32,System.UInt32@)" />.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSCOMPENUMEXFLAGS">
      <summary>Specifies component information.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCOMPENUMEXFLAGS.VSCOMPENUM_IncludeRuntimeInfo">
      <summary>Include run-time version information (for assemblies) as a BSTR in the <paramref name="lCustom" /> field of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA" /> structure.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSCOMPSELFLAGS2">
      <summary>Provides additional members for the VSCOMPSELFLAGS enum.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCOMPSELFLAGS2.VSCOMSEL2_MultiSelectMode">
      <summary>Allows selection of multiple components.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCOMPSELFLAGS2.VSCOMSEL2_ShowAllPagesOfSpecifiedTypes">
      <summary>Add pages, which are not specified in the rgcstiTabInitializers parameter of <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsComponentSelectorDlg2.ComponentSelectorDlg2(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsComponentUser,System.UInt32,System.IntPtr[],System.String,System.String,System.UInt32@,System.UInt32@,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORTABINIT[],System.Guid@,System.String,System.String@)" />, but produce the same components (have the same <paramref name="ComponentType" /> string value in the registry).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCOMPSELFLAGS2.VSCOMSEL2_ShowSelectedList">
      <summary>List of selected components is visible. Ignored in single-select mode.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSCREATEEDITORFLAGS2">
      <summary>Provides additional members of <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSCREATEEDITORFLAGS" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCREATEEDITORFLAGS2.CEF_OPENSPECIFIC">
      <summary>Editor factory must open document if possible (invoked via <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsUIShellOpenDocument.OpenSpecificEditor(System.UInt32,System.String,System.Guid@,System.String,System.Guid@,System.String,Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchy,System.UInt32,System.IntPtr,Microsoft.VisualStudio.OLE.Interop.IServiceProvider,Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame@)" />).</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSCREATENEWPROJVIADLGEXFLAGS">
      <summary>Specifies new project flags for <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolution3.CreateNewProjectViaDlgEx(System.String,System.String,System.String,System.String,System.String,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsBrowseProjectLocation)" /> calls.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCREATENEWPROJVIADLGEXFLAGS.VNPVDE_ADDNESTEDTOSELECTION">
      <summary>Project is added, nested to currently selected project, if supported.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCREATENEWPROJVIADLGEXFLAGS.VNPVDE_ALWAYSADDTOSOLUTION">
      <summary>Project is always added to solution (Add New Project dialog is used).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCREATENEWPROJVIADLGEXFLAGS.VNPVDE_ALWAYSNEWSOLUTION">
      <summary>New solution is always created (no Add to Solution and Close Solution radio buttons).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCREATENEWPROJVIADLGEXFLAGS.VNPVDE_OVERRIDEBROWSEBUTTON">
      <summary>Browse button functionality is overridden (requires IVsBrowseProjectLocation interface).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCREATENEWPROJVIADLGEXFLAGS.VNPVDE_USENEWWEBSITEDLG">
      <summary>Uses the New Web site flavor of the dialog.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSCREATEPROJFLAGS2">
      <summary>Controls how a project is created or opened. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCREATEPROJFLAGS2.CPF_DEFERREDSAVE">
      <summary>Project is "zero-impact": permanent save is performed explicitly via File.SaveAll.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCREATEPROJFLAGS2.CPF_OPEN_ASYNCHRONOUSLY">
      <summary>Project is being opened asynchronously, that is. it is possible that not all files are on disk yet.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCREATEPROJFLAGS2.CPF_OPEN_STANDALONE">
      <summary>Commands to open the project specified and not look for a solution containing the project. Valid only with <see cref="F:Microsoft.VisualStudio.Shell.Interop.__VSCREATEPROJFLAGS.CPF_OPENFILE" />.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSCREATESOLUTIONFLAGS2">
      <summary>Provides additional members for <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSCREATESOLUTIONFLAGS" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCREATESOLUTIONFLAGS2.CSF_DEFERREDSAVESOLUTION">
      <summary>Solution is "zero-impact": permanent save is performed explicitly via File.SaveAll.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCREATESOLUTIONFLAGS2.CSF_HIDESOLUTIONNODEALWAYS">
      <summary>Don't show the solution node.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSCREATEWEBBROWSER2">
      <summary>Specifies flags for creating a web browser with the methods of <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWebBrowsingService" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCREATEWEBBROWSER2.VSCWB_NavOptionMask2">
      <summary>Use navigation settings option mask.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCREATEWEBBROWSER2.VSCWB_NoHistoryThisPage">
      <summary>Do not add this page to history.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE">
      <summary>Specifies cursor types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_APPSTARTING">
      <summary>Application starting cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_COLUMNSPLIT_EW">
      <summary>Horizontal column split cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_COLUMNSPLIT_NS">
      <summary>Vertical column split cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_CONTROL_COPY">
      <summary>Copy cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_CONTROL_DELETE">
      <summary>Delete cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_CONTROL_MOVE">
      <summary>Move cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_CROSS">
      <summary>Crosshairs cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_DRAGDOCUMENT_MOVE">
      <summary>Document-drag- movement cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_DRAGDOCUMENT_NOEFFECT">
      <summary>Document-not-draggable cursor</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_DRAGSCRAP_COPY">
      <summary>Drag from scrap to copy cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_DRAGSCRAP_MOVE">
      <summary>Drag from scrap to move cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_DRAGSCRAP_SCROLL">
      <summary>Scroll while dragging from scrap cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_HAND">
      <summary>Hand cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_IBEAM">
      <summary>I-beam (text) cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_ISEARCH">
      <summary>Search cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_ISEARCH_UP">
      <summary>Search up cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_MACRO_RECORD_NO">
      <summary>Macro not recording cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_NO">
      <summary>Action not allowed cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_NOMOVE_2D">
      <summary>Flat movement not possible cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_NOMOVE_HORIZ">
      <summary>No horizontal movement cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_NOMOVE_VERT">
      <summary>No vertical movement cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_PAN_EAST">
      <summary>Right pan cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_PAN_NE">
      <summary>Upper-right pan cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_PAN_NORTH">
      <summary>Pan up cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_PAN_NW">
      <summary>Upper-left pan cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_PAN_SE">
      <summary>Lower-right pan cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_PAN_SOUTH">
      <summary>Pan down cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_PAN_SW">
      <summary>Lower-right pan cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_PAN_WEST">
      <summary>Pan left cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_POINTER">
      <summary>Pointer cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_POINTER_REVERSE">
      <summary>Reverse pointer cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_SIZE_ALL">
      <summary>Resize all cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_SIZE_EW">
      <summary>Resize horizontal cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_SIZE_NESW">
      <summary>Resize (clockwise) cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_SIZE_NS">
      <summary>Resize vertical cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_SIZE_NWSE">
      <summary>Resize (counterclockwise) cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_SPLIT_EW">
      <summary>Horizontal split cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_SPLIT_NS">
      <summary>Vertical split cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_UPARROW">
      <summary>Up arrow cursor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE.VSCURSOR_WAIT">
      <summary>Wait cursor.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSDBGLAUNCHFLAGS2">
      <summary>Adds members to VSDBGLAUNCHFLAGS.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDBGLAUNCHFLAGS2.DBGLAUNCH_CannotDebugAlone">
      <summary>This process cannot be debugged alone—stops debugging when only processes with this flag remain.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDBGLAUNCHFLAGS2.DBGLAUNCH_DesignTimeExprEval">
      <summary>Launched for design-time expression evaluation.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDBGLAUNCHFLAGS2.DBGLAUNCH_MergeEnv">
      <summary>Merge provided environment with system environment</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDBGLAUNCHFLAGS2.DBGLAUNCH_StopAtEntryPoint">
      <summary>Stops at the entrypoint (step-into).</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSDESIGNER_HIDDENCODEGENERATION">
      <summary>Specifies what code goes to the hidden designer file.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDESIGNER_HIDDENCODEGENERATION.VSDHCG_Declarations">
      <summary> Include declarations.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDESIGNER_HIDDENCODEGENERATION.VSDHCG_EventMethods">
      <summary> Include event methods.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDESIGNER_HIDDENCODEGENERATION.VSDHCG_InitMethods">
      <summary> Include member initialization methods.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSDIRFLAGS2">
      <summary>Provides additional members for the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSDIRFLAGS" /> enumeration.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDIRFLAGS2.VSDIRFLAG_DeferredSaveProject">
      <summary>Project can be "zero-impact": permanent save is performed explicitly via File.SaveAll.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDIRFLAGS2.VSDIRFLAG_DontShowNameLocInfo">
      <summary>Doesn't show the name field or the static project location info field (useful flag for webs).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDIRFLAGS2.VSDIRFLAG_EnableCodeSeparation">
      <summary>Enables the use code separation check box (NewWebItemDlg svc).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDIRFLAGS2.VSDIRFLAG_EnableLangDropdown">
      <summary>Enables the language drop-down list (NewWebItemDlg svc).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDIRFLAGS2.VSDIRFLAG_EnableMasterPage">
      <summary>Enables the master page check box (NewWebItemDlg svc).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDIRFLAGS2.VSDIRFLAG_RequiresNewFolder">
      <summary>New folder is required—creation in an existing folder is not allowed.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSDIRFLAGS2.VSDIRFLAG_SolutionTemplate">
      <summary>Template is for a solution rather than a project.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSEDITORTRUSTLEVEL">
      <summary>Specifies trust levels for the editor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSEDITORTRUSTLEVEL.ETL_AlwaysTrusted">
      <summary> Editor is always trusted.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSEDITORTRUSTLEVEL.ETL_HasUntrustedLogicalViews">
      <summary>Some logical views are not trusted.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSEDITORTRUSTLEVEL.ETL_NeverTrusted">
      <summary>Editor is never trusted.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSEDT_STYLE">
      <summary>Used with <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugger2.CreateDataTip(System.String,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsEnhancedDataTip@)" /> calls.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSEDT_STYLE.VSEDT_Reserved1">
      <summary>Reserved for future use.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSERRORCATEGORY">
      <summary>Describes the severity of error messages.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSERRORCATEGORY.EC_ERROR">
      <summary> Error message.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSERRORCATEGORY.EC_MESSAGE">
      <summary> Informational message.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSERRORCATEGORY.EC_WARNING">
      <summary> Warning message.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSFORMATINDEX">
      <summary>Represents file format encodings.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSFORMATINDEX.VSFORMATINDEX_MBCS">
      <summary>Multi-byte (such as ANSI)</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSFORMATINDEX.VSFORMATINDEX_UNICODE">
      <summary>Unicode</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSFORMATINDEX.VSFORMATINDEX_UTF8">
      <summary>UTF-8</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSFPROPID2">
      <summary>Provides additional members for the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSFPROPID" /> enumeration.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSFPROPID2.VSFPROPID_OLEDocObjectDocument">
      <summary>BOOL. Specifies whether pane is holding OLE doc object</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSFPROPID2.VSFPROPID_OverrideDirtyState">
      <summary>BOOL/EMPTY. Tri-state value of dirty star (*) in window caption</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSFPROPID2.VSFPROPID_ParentFrame">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame" /> of parent container for OwnerDocked window.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSFPROPID2.VSFPROPID_ParentHwnd">
      <summary>HWND parent of OwnerDocked window.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSFPROPID2.VSFPROPID_ToolWindowDocCookie">
      <summary>VT_INT_PTR value for <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsRunningDocumentTable" /> (RDT) key for document associated with a tool window (eg. Code Definition Window). Setting this property enables both caption dirty indicator (*) management and the firing of <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsRunningDocTableEvents.OnBeforeDocumentWindowShow(System.UInt32,System.Int32,Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame)" /> RDT events for the tool window. It is assumed that the frame caption is set correctly, without a dirty indicator (*), before this property is set, as setting this property will cause a caption dirty indicator (*) to be added, if the document is dirty. Also, when this property is set, the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsRunningDocTableEvents.OnBeforeDocumentWindowShow(System.UInt32,System.Int32,Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame)" /> RDT event is immediately fired to indicate that a new document has been show.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSHIERITEMATTRIBUTE">
      <summary>Specifies hierarchy item attributes. Used in <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchyWindow2.SetItemAttribute(Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchy,System.UInt32,System.UInt32,System.Object)" /> calls.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHIERITEMATTRIBUTE.VSHIERITEMATTRIBUTE_Bold">
      <summary>Hierarchy item is bold.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2">
      <summary>Adds members to <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID" /> enumeration.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_AddItemTemplatesGuid">
      <summary>GUID. Optional. Alternate project type GUID to use to get add item templates.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_AppTitleBarTopHierarchyName">
      <summary>BSTR. Optional. Enables the hierarchy to put its top-most name (solution or server) into the Title bar of the app, such as YourName part of "YourName - Microsoft Visual Studio."</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_BrowseObjectCATID">
      <summary>GUID. Optional. Intrinsic Extender CATID of the BrowseObject for the given <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> Itemid. For VSITEMID_ROOT, this corresponds to the object that is used to build the Project.Properties collection.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_CategoryGuid">
      <summary>GUID to identify the family/category of this non-solution based Hierarchy (for example,  Portfolio Project Hierarchy).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_CfgBrowseObjectCATID">
      <summary>GUID. Optional. Intrinsic Extender CATID of the configuration BrowseObject for the given <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> Itemid.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_CfgPropertyPagesCLSIDList">
      <summary>BSTR. Optional. Semicolon-delimited list of cslids of the configuration-dependent property pages.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_ChildrenEnumerated">
      <summary>BOOL. Optional. Returns true if children have been enumerated. Typically, this is of interest only for projects where enumerating children can be expensive, that is, Web projects.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_Container">
      <summary>BOOL. Optional. true if the item is a container (it may not be expandable, but it contains items). Support this property if your folder is not expandable but contains items that should be included in SCC operations.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_DebuggeeProcessId">
      <summary>Process ID of debugging target if known; otherwise, zero.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_DebuggerSourcePaths">
      <summary>BSTR. Optional. Semi-colon delimited list of paths where the debugger looks for source.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_DesignerHiddenCodeGeneration">
      <summary>I4 indicates which code is supposed to go to the hidden designer file. Bit flag values in <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSDESIGNER_HIDDENCODEGENERATION" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_DisableApplicationSettings">
      <summary>BOOL. Optional. Set this to true in your hierarchy to disable Application Settings design time support in your project.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_EnableDataSourceWindow">
      <summary>BOOL. Optional. Set this to true in your hierarchy to disable the Data Source Window for this project.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_ExcludeFromExportItemTemplate">
      <summary>BOOL. Optional. By default, is false. true if the project item cannot be exported through export item template.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_ExtObjectCATID">
      <summary>GUID. Optional. Intrinsic Extender CATID of the ExtObject (Automation Object) for the given <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> Itemid. For VSITEMID_ROOT this corresponds to the type of the 'Project' object.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_FIRST2">
      <summary>Indicates the first property ID.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_IntellisenseUnknown">
      <summary>IUnknown. Optional. Returns the IUnknown of the Intellisense compiler that is used by the project system.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_IsLinkFile">
      <summary>BOOL. Optional. true if the file is a link file. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_IsUpgradeRequired">
      <summary>BOOL. Optional. true if the item or any of its children are either already in the process of upgrading or must be upgraded.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_KeepAliveDocument">
      <summary>BOOL. Optional. true if the document should be kept alive in the project regardless of opened/closed state.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_NoDefaultNestedHierSorting">
      <summary>BOOL. Optional. true if the hierarchy does not want nested hierarchies sorted first and items after, and sorted alphabetically (like solution folders).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_PriorityPropertyPagesCLSIDList">
      <summary>BSTR. Optional. Semi-colon delimited ordered list of CLSIDs of the preferred property pages.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_ProjectDesignerEditor">
      <summary>GUID. Optional. GUID of the Project Designer Editor that the project uses to change project properties.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_PropertyPagesCLSIDList">
      <summary>BSTR. Optional. Semicolon-delimited list of clsids of the configuration-independent property pages.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_StatusBarClientText">
      <summary>BSTR. Hierarchy scoped text for Client Text field of status bar. This text is displayed while the given hierarchy is the active hierarchy. <see cref="F:Microsoft.VisualStudio.Package.Variant.VariantType.VT_EMPTY" /> clears hierarchy scoped text and resets to global text specified by the application.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_SupportedMyApplicationTypes">
      <summary>BSTR. Optional. semi-colon delimited list of application-types supported for project-systems that support My.Application. The property-page that exposes information about My.Application can use this list to determine which values are located  in the application-type drop-down menu as selectable choices for the user.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_SupportsProjectDesigner">
      <summary>BOOL. Optional. true if the project uses a Project Designer Editor instead of the property page frame to change project properties.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_SuppressOutOfDateMessageOnBuild">
      <summary>BOOL. Optional. true if the project does not want to participate in the "this configuration is out of date" message on Build/F5.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSHPROPID2.VSHPROPID_UseInnerHierarchyIconList">
      <summary>BOOL. Optional. Set this to true in the outer hierarchy if you want the icon for an inner (nested) hierarchy root to come from the inner hierarchy image list. By default, we are getting that icon from the outer hierarchy image list.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSMEINIT2">
      <summary>Provides additional members for the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSMEINIT" /> enumeration.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSMEINIT2.MD_ITEMICONSUPPORT">
      <summary>Supports icons for menu editor items.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSMEPROPID2">
      <summary>Adds additional property IDs to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSMEPROPID" /> enumeration. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSMEPROPID2.VSMEPROPID_ICON">
      <summary>Menu icon.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSMEPROPID2.VSMEPROPID_LAST2">
      <summary>Specifies the last VSMEPROPID_</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSOPENFROMSCCDLG">
      <summary>Indicates a specific kind of dialog box that is shown to the user. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSOPENFROMSCCDLG.VSOFSD_ADDEXISTINGITEM">
      <summary>Dialog box is used to add an existing item to a solution or project from source control. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSOPENFROMSCCDLG.VSOFSD_OPENSOLUTIONORPROJECT">
      <summary>Dialog box is used to open a solution or project from source control. </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSOSEFLAGS2">
      <summary>Adds additional property IDs to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSOSEFLAGS" /> enumeration. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSOSEFLAGS2.OSE_CheckTrustLevelOfWizard">
      <summary>Check the trust level of the wizard.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSOSPEFLAGS2">
      <summary>Adds additional property IDs to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSOSPEFLAGS" /> enumeration.  </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSOSPEFLAGS2.OSPE_CheckTrustLevelOfWizard">
      <summary>Check trust level of the wizard.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSOVERLAYICON2">
      <summary>Provides additional members for the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOVERLAYICON" /> enumeration.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSOVERLAYICON2.OVERLAYICON_EXCLUDED">
      <summary>Overlay icon is excluded.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSOVERLAYICON2.OVERLAYICON_MAXINDEX2">
      <summary>Indicates the last VSOVERLAYICON2.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSOVERLAYICON2.OVERLAYICON_NOTONDISK">
      <summary>Overlay icon is not on disk.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSPPPID">
      <summary>Extends the property page interface to retrieve properties on the page. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPPPID.VSPPPID_FIRST">
      <summary>First item</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPPPID.VSPPPID_LAST">
      <summary>Last item</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPPPID.VSPPPID_PAGENAME">
      <summary>Page name</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSPPROJECTUPGRADEVIAFACTORYFLAGS">
      <summary>Specifies action to take with <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEventsProjectUpgrade.OnAfterUpgradeProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.String,Microsoft.VisualStudio.Shell.Interop.SYSTEMTIME,Microsoft.VisualStudio.Shell.Interop.IVsUpgradeLogger)" /> calls. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPPROJECTUPGRADEVIAFACTORYFLAGS.PUVFF_BACKUPSUPPORTED">
      <summary>Backup is supported. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPPROJECTUPGRADEVIAFACTORYFLAGS.PUVFF_COPYBACKUP">
      <summary>Xcopy style backup supported.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPPROJECTUPGRADEVIAFACTORYFLAGS.PUVFF_SXSBACKUP">
      <summary>Side-by-side backup supported.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPPROJECTUPGRADEVIAFACTORYFLAGS.PUVFF_USE_ALT_BACKUP_LOCATION">
      <summary>By default, copy backup occurs in a subfolder of the solution. There are times where this is unwanted. In those cases UpgradeProject_CheckOnly can return <paramref name="PUVFF_USE_ALT_BACKUP_LOCATION" />.  This defaults to using a subfolder under the user's default project location folder. This alternate location should be avoided if it is possible, as it presents more limitations regarding backup file name length.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSPROFILECATEGORYSECURITY">
      <summary>Specifies the current user profile security level returned with calls to <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.GetSecurityLevel(System.UInt32@)" />. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILECATEGORYSECURITY.PCSEC_SAFE">
      <summary>The settings in this category are safe.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILECATEGORYSECURITY.PCSEC_THREAT_MACHINE">
      <summary>The settings in this category could threaten the machine, or user data.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILECATEGORYSECURITY.PCSEC_THREAT_VS">
      <summary>The settings in this category could threaten the Visual Studio user experience.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSPROFILECATEGORYSENSITIVITY">
      <summary>Specifies a sensitivity level to <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.GetSensitivityLevel(System.UInt32@)" /> calls. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILECATEGORYSENSITIVITY.PCSEN_PRIVACY">
      <summary>The settings in this category could compromise a user's privacy.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILECATEGORYSENSITIVITY.PCSEN_SAFE">
      <summary>The settings in this category contain no sensitive information.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSPROFILEGETFILENAME">
      <summary>Specifies profile file name settings. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILEGETFILENAME.PGFN_AUTOSAVE">
      <summary>Use the default Autosave root file name.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILEGETFILENAME.PGFN_EXPORT">
      <summary>Use the default export root file name.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILEGETFILENAME.PGFN_SAVECURRENT">
      <summary>Use the default current settings root file name.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSPROFILELOCATIONS">
      <summary>Specifies profile file location.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILELOCATIONS.PFL_All">
      <summary>Custom file that the user has browsed to.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILELOCATIONS.PFL_AutoSave">
      <summary>Add the current Autosave file.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILELOCATIONS.PFL_InstallDir">
      <summary>File resides in the installation directory.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILELOCATIONS.PFL_LocationNone">
      <summary>Used only for initialization.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILELOCATIONS.PFL_Other">
      <summary>Custom file that the user has browsed to. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILELOCATIONS.PFL_SettingsDir">
      <summary>File resides in the user's default settings directory.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSPROFILEPATHRESOLVERFLAGS">
      <summary>
        <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsPathVariableResolver" /> methods. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILEPATHRESOLVERFLAGS.VSPPR_None">
      <summary>Use the standard behavior.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILEPATHRESOLVERFLAGS.VSPPR_OnlyForProfiles">
      <summary>Copies the inparm to the outparm.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSPROFILETEAMSETTINGSCHANGEDFLAGS">
      <summary>Specifies how team profile settings have changed. Used with <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileDataManager.ReportTeamSettingsChanged(System.UInt32)" /> calls.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILETEAMSETTINGSCHANGEDFLAGS.PTSCF_TEAMFILE_CHANGED">
      <summary>The team file has been changed from its previous value.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILETEAMSETTINGSCHANGEDFLAGS.PTSCF_TEAMFILE_NOCHANGE">
      <summary>The team file setting has not been touched.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILETEAMSETTINGSCHANGEDFLAGS.PTSCF_TEAMFILE_SAME">
      <summary>The team file setting has been updated, but the value is the same as before.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSPROFILETEAMSETTINGSFLAGS">
      <summary>Specifies the action for <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileDataManager.CheckUpdateTeamSettings(System.UInt32)" /> calls.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILETEAMSETTINGSFLAGS.PTSF_CHECKFORUPDATE">
      <summary>Import from the teamsettings file if it is newer.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROFILETEAMSETTINGSFLAGS.PTSF_UPDATEALWAYS">
      <summary>Forces an import from the teamsettings file.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSPROJSLNDLGFLAGS">
      <summary>Specifies project and solution dialog flags for <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsOpenProjectOrSolutionDlg.OpenProjectOrSolutionViaDlg(System.UInt32,System.String,System.String,System.Guid@)" /> calls. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROJSLNDLGFLAGS.PSDF_AddExistingProjectDialog">
      <summary>Add existing project dialog.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROJSLNDLGFLAGS.PSDF_DefaultToAllProjectsFilter">
      <summary>Default to All Projects filter.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROJSLNDLGFLAGS.PSDF_DirectoryPicker">
      <summary>Puts the dialog in directory-picker mode. Used to open directory-based projects.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROJSLNDLGFLAGS.PSDF_OpenProjectDialog">
      <summary>Open project dialog.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROJSLNDLGFLAGS.PSDF_OpenSolutionDialog">
      <summary>Open solution dialog.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSPROPID2">
      <summary>Provides additional members for the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSPROPID" /> enumeration. Identifies property setting for a solution.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROPID2.VSPROPID_DeferredSaveSolution">
      <summary>BOOLEAN: is the Solution "zero-impact" (permanent save is performed explicitly through File.SaveAll).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROPID2.VSPROPID_FIRST2">
      <summary>Indicates the first VSPROPID_.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROPID2.VSPROPID_IsAProjectClosing">
      <summary>IUnknown interface for <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> of project being closed.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROPID2.VSPROPID_IsOpenNotificationPending">
      <summary>BOOLEAN: true if the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents.OnAfterOpenSolution(System.Object,System.Int32)" /> notification is pending. This occurs when a new project is being created by using a new solution.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROPID2.VSPROPID_IsSolutionClosing">
      <summary>BOOLEAN: true if a solution file being closed.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROPID2.VSPROPID_IsSolutionNodeHidden">
      <summary>BOOLEAN: true if the solution node is hidden in the integrated development environment (IDE).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROPID2.VSPROPID_IsSolutionOpeningDocs">
      <summary>BOOLEAN: true if the solution re-opening the documents that were open when the solution was last closed.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROPID2.VSPROPID_NewProjectDlgPreferredLanguage">
      <summary>BSTR: Preferred language for the New Project dialog; if there is no preferred language an empty length string is returned.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROPID2.VSPROPID_ProjectLoadSecurityDialogState">
      <summary>I4: State of the project load security dialog kept between different language packages.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROPID2.VSPROPID_SimplifiedConfigurations">
      <summary>BOOLEAN: true if the solution is in simplified configuration mode.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPROPID2.VSPROPID_SolutionUserFileCreatedOnThisComputer">
      <summary>BOOLEAN: true if the .suo file that accompanies the solution file was originally created on the same computer it is being opened on. See <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsPersistSolutionOpts.ReadUserOptions(Microsoft.VisualStudio.OLE.Interop.IStream,System.String)" />. Read only.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSPUBLISHOPTS">
      <summary>Specifies options for <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsPublishableProjectCfg.GetPublishProperty(System.UInt32,System.Object@)" /> calls.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSPUBLISHOPTS.PUBOPT_PUBLISHCONTEXT">
      <summary>Publish context </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSQueryEditFlags2">
      <summary>This enumeration is an extension of <see cref="T:Microsoft.VisualStudio.Shell.Interop.tagVSQueryEditFlags" />, and specifies additional flags. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSQueryEditFlags2.QEF_AllowUnopenedProjects">
      <summary>Allows calls to the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsQueryEditQuerySave2.QueryEditFiles(System.UInt32,System.Int32,System.String[],System.UInt32[],Microsoft.VisualStudio.Shell.Interop.VSQEQS_FILE_ATTRIBUTE_DATA[],System.UInt32@,System.UInt32@)" /> method for files of projects that are not loaded or that haven't finished loading.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSQueryEditFlags2.QEF_CheckoutLatestVersion">
      <summary>Attempts to check out latest version.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSQueryEditFlags2.QEF_CheckoutLocalVersion">
      <summary>Attempts to check out local version.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSQueryEditFlags2.QEF_DetectAnyChangedFile">
      <summary>Enables the detection of content changes for files that are not currently open in the IDE (editor buffer or project/solution file). If such changes occur, QER_Changed will be returned in <paramref name="prgfMoreInfo" />.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSRDTSAVEOPTIONS2">
      <summary>Specifies additional save options for a document in the running document table (RDT). </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSRDTSAVEOPTIONS2.RDTSAVEOPT_FSaveAs">
      <summary>Indicates that the save is a result of a document close. Determines if Visual Studio should display a Save As dialog box.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSRDTSAVEOPTIONS2.RDTSAVEOPT_SaveAllButThis">
      <summary>The supplied document token indicates the exception and everything but it will be saved normally.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSRDTSAVEOPTIONS2.RDTSAVEOPT_SkipNewUnsaved">
      <summary>Activates the editor window of a document, if a save operation causes an error. Indicates that new unsaved files (created via File.New File) should be skipped.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSSAVEDEFERREDSAVEFLAGS">
      <summary>Used with <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolution3.CheckForAndSaveDeferredSaveSolution(System.Int32,System.String,System.String,System.UInt32)" /> calls.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSAVEDEFERREDSAVEFLAGS.VSDSF_HIDEADDTOSOURCECONTROL">
      <summary>Hides the Add Solution to Source Control check box in the Save dialog box.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSSCCENLISTMENTFACTORYOPTIONS">
      <summary>Options used by the enlistment choice user interface (part of the source control support). </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSCCENLISTMENTFACTORYOPTIONS.VSSCC_EFO_CANBROWSEDEBUGGINGPATH">
      <summary>The project supports an additional debugging path, and the user should be allowed to set the debugging path through a browse dialog box. If this option is not specified, then the user can change the debugging path only by manually editing the path field.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSCCENLISTMENTFACTORYOPTIONS.VSSCC_EFO_CANBROWSEENLISTMENTPATH">
      <summary>The user should be allowed to edit the enlistment path field through the use of a browse dialog box. If this option is not specified, then the user can change the enlistment path only by manually editing the path field.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSCCENLISTMENTFACTORYOPTIONS.VSSCC_EFO_CANEDITDEBUGGINGPATH">
      <summary>The project supports an additional debugging path, and the user should be allowed to edit the debugging path field manually. If this option is not specified, then the debugging path is read-only and can be changed only with a browse dialog box.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSCCENLISTMENTFACTORYOPTIONS.VSSCC_EFO_CANEDITENLISTMENTPATH">
      <summary>The user should be allowed to edit the enlistment path field manually. If this option is not set, then the field is read-only and can be changed only with a browse dialog box.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSSCCPROVIDERBINDINGOPTIONS">
      <summary>Indicating whether it can deal with browsing for a source control server. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSCCPROVIDERBINDINGOPTIONS.VSSCC_PBO_CANBROWSESERVERPATH">
      <summary>The project supports a browse dialog box used to find a source control server. If this is not set, then Visual Studio relies on a default server browse dialog box.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSCCPROVIDERBINDINGOPTIONS.VSSCC_PBO_CANDISPLAYSERVERPATH">
      <summary>Shows the server path when the user is given a choice of source control servers. If not set, then the user sees only the source control package's name.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSCCPROVIDERBINDINGOPTIONS.VSSCC_PBO_CANEDITSERVERPATH">
      <summary>The project server path can be manually edited by the user and validated.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSSETTINGSCOMPLETIONSTATUS">
      <summary>Specifies additional information about errors that occurred during a profile import, export, or reset process.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSETTINGSCOMPLETIONSTATUS.vsSettingsCompletionStatusComplete">
      <summary>Specifies the profile process was completed.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSETTINGSCOMPLETIONSTATUS.vsSettingsCompletionStatusErrors">
      <summary>Specifies the profile process contained errors.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSETTINGSCOMPLETIONSTATUS.vsSettingsCompletionStatusIncomplete">
      <summary>Specifies the profile process was incomplete.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSETTINGSCOMPLETIONSTATUS.vsSettingsCompletionStatusNotStarted">
      <summary>Specifies the profile process was not started.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSETTINGSCOMPLETIONSTATUS.vsSettingsCompletionStatusStateMask">
      <summary>Specifies a mask that can be used to get or set only the state information.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSETTINGSCOMPLETIONSTATUS.vsSettingsCompletionStatusSuccess">
      <summary>Specifies the profile process was successful.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSETTINGSCOMPLETIONSTATUS.vsSettingsCompletionStatusSuccessMask">
      <summary>Specifies a mask that can be used to get or set only the status information.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSETTINGSCOMPLETIONSTATUS.vsSettingsCompletionStatusWarnings">
      <summary>Specifies the profile process contained warnings.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSSETTINGSERRORTYPES">
      <summary>Specifies the error types of the settings.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSETTINGSERRORTYPES.vsSettingsErrorTypeError">
      <summary>Specifies an error-style settings error.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSETTINGSERRORTYPES.vsSettingsErrorTypeMask">
      <summary>Specifies a mask-type settings error.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSETTINGSERRORTYPES.vsSettingsErrorTypeNotInstalled">
      <summary>Specifies a not installed type settings error.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSETTINGSERRORTYPES.vsSettingsErrorTypeRestart">
      <summary>Specifies a restart-type settings error.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSETTINGSERRORTYPES.vsSettingsErrorTypeSuccess">
      <summary>Specifies that the settings were successful.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSETTINGSERRORTYPES.vsSettingsErrorTypeWarning">
      <summary>Specifies a warning-type settings error.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSSHOWCONTEXTMENUOPTS">
      <summary>Specifies options for display of context menus. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSHOWCONTEXTMENUOPTS.VSCTXMENU_SELECTFIRSTITEM">
      <summary>Automatically select the first item.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSHOWCONTEXTMENUOPTS.VSCTXMENU_SHOWUNDERLINES">
      <summary>Show keyboard mnemonic underlines.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSHOWCONTEXTMENUOPTS.VSCTXMENU_SUPPORTSTYPEAHEAD">
      <summary>Supports typeahead, and should also be a sorted dynamic item list.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSSLNOPENOPTIONS2">
      <summary>Provides additional members for the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSSLNOPENOPTIONS" /> enumeration. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSLNOPENOPTIONS2.SLNOPENOPT_LoadingAsync">
      <summary>Loads solution asynchronously--marks nonexistent projects as "loading" rather than "unavailable."</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2">
      <summary>Provides additional members for the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID" /> enumeration. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2.VSFPROPID_ToolWindowUsesDocSelection">
      <summary>BOOL - when selected. the tool window attempts to restore active document selection.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2.VSSPROPID_AutohideToolFrame">
      <summary>IVsWinodwFrame of the window that is the visible tool window in the autohide frame. Non NULL only when fully extended.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2.VSSPROPID_BuildOutOfDateProjects">
      <summary>DWORD: see <see cref="T:Microsoft.VisualStudio.Shell.Interop.__BUILDOUTOFDATEPROJECTS" /> for valid values.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2.VSSPROPID_FIRST2">
      <summary>Indicates first VSSPROPID_.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2.VSSPROPID_InstallRootDir">
      <summary>BSTR: full path of root location of installation (for example, drive&gt;:\Program Files\Microsoft Visual Studio &lt;version&gt;\).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2.VSSPROPID_IsAcademic">
      <summary>Academic Edition property.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2.VSSPROPID_IsAppThemed">
      <summary>BOOLEAN: VARIANT_TRUE if IDE is themed (using a manifest containing Microsoft.Windows.Common-Controls 6.0).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2.VSSPROPID_MainWindowPos">
      <summary>VT_UI4, Read-only. The top-left coordinate of the appid main window encoded as left in LOWORD, top=HIWORD</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2.VSSPROPID_MainWindowSize">
      <summary>VT_UI4, Read-only. The current size of the appid main window encoded as width in LOWORD, height in HIWORD</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2.VSSPROPID_MainWindowVisibility">
      <summary>VT_BOOL, Read-only. VARIANT_TRUE if main window is visible, VARIANT_FALSE if invisible.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2.VSSPROPID_RunAfterBuildErrors">
      <summary>DWORD, see __RUNAFTERBUILDERRORS <see cref="T:Microsoft.VisualStudio.Shell.Interop.__RUNAFTERBUILDERRORS" /> for valid values.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2.VSSPROPID_SccProviderChanged">
      <summary>BOOLEAN: (set-only) Set to true when the SCC provider changes.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2.VSSPROPID_SKUEdition">
      <summary>Either a VSASKUEdition value or a string. VSASKUEdition if it is a standard version, or a BSTR if a custom version.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2.VSSPROPID_SolutionExplorerSortingEnabled">
      <summary>VT_BOOL. Read/write. Enables/disables sorting of Solution Explorer nodes.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2.VSSPROPID_SqmRegistryRoot">
      <summary>BSTR, Read-only. Registry path to the root of the SQM hive used by the AppId.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2.VSSPROPID_SubSKUEdition">
      <summary>I4 - some combination of the bits defined in VSASubSKUEdition or zero (if none).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2.VSSPROPID_VisualStudioDir">
      <summary>BSTR: full path of location of Visual Studio directory (under My Documents).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2.VSSPROPID_VsTemplateUserZipItemFolder">
      <summary>VT_BSTR: read-only. Full path of location for user supplied New Project .vstemplate files (such as \My Documents\Visual Studio\ItemTemplates\)</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2.VSSPROPID_VsTemplateUserZipProjectFolder">
      <summary>VT_BSTR: read-only. Full path of location for user supplied Project AddItem .vstemplate files (such as \My Documents\Visual Studio\ItemTemplates\)</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSPROPID2.VSSPROPID_WaitingForSecondKeyChord">
      <summary>VT_BOOL Waiting for the second key of a two-key shortcut.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX">
      <summary>Specifies a Visual Studio system color to be used with a particular visual component or use case. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_ACCENT_BORDER">
      <summary>Accent border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_ACCENT_DARK">
      <summary>Accent dark</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_ACCENT_LIGHT">
      <summary>Accent light</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_ACCENT_MEDIUM">
      <summary>Accent medium</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_ACCENT_PALE">
      <summary>Accent pale</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_COMMANDBAR_BORDER">
      <summary>Command bar border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_COMMANDBAR_DRAGHANDLE">
      <summary>Command bar drag handle</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_COMMANDBAR_DRAGHANDLE_SHADOW">
      <summary>Command bar drag handle shadow</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_COMMANDBAR_GRADIENT_BEGIN">
      <summary>Command bar gradient begin</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_COMMANDBAR_GRADIENT_END">
      <summary>Command bar gradient end</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_COMMANDBAR_GRADIENT_MIDDLE">
      <summary>Command bar gradient middle</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_COMMANDBAR_HOVER">
      <summary>Hover over command bar</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_COMMANDBAR_HOVEROVERSELECTED">
      <summary>Hover over selected command bar</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_COMMANDBAR_HOVEROVERSELECTEDICON">
      <summary>Hover over selected command bar icon</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_COMMANDBAR_HOVEROVERSELECTEDICON_BORDER">
      <summary>Command bar hover over selected icon border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_COMMANDBAR_SELECTED">
      <summary>Selected command bar</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_COMMANDBAR_SHADOW">
      <summary>Command bar shadow</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_COMMANDBAR_TEXT_ACTIVE">
      <summary>Active command bar text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_COMMANDBAR_TEXT_HOVER">
      <summary>Command bar text hover</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_COMMANDBAR_TEXT_INACTIVE">
      <summary>Inactive command bar text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_COMMANDBAR_TEXT_SELECTED">
      <summary>Command bar text selected</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_CONTROL_EDIT_HINTTEXT">
      <summary>Control edit hint text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_CONTROL_EDIT_REQUIRED_BACKGROUND">
      <summary>Control edit required field background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_CONTROL_EDIT_REQUIRED_HINTTEXT">
      <summary>Control edit required field hint text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_CONTROL_LINK_TEXT">
      <summary>Control link text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_CONTROL_LINK_TEXT_HOVER">
      <summary>Control link hover</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_CONTROL_LINK_TEXT_PRESSED">
      <summary>Control pressed text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_CONTROL_OUTLINE">
      <summary>Control outline</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_DEBUGGER_DATATIP_ACTIVE_BACKGROUND">
      <summary>Debugger: active data tip background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_DEBUGGER_DATATIP_ACTIVE_BORDER">
      <summary>Debugger: active data tip border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_DEBUGGER_DATATIP_ACTIVE_HIGHLIGHT">
      <summary>Debugger: active data tip highlight</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_DEBUGGER_DATATIP_ACTIVE_HIGHLIGHTTEXT">
      <summary>Debugger: active data tip highlight text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_DEBUGGER_DATATIP_ACTIVE_SEPARATOR">
      <summary>Debugger: active data tip separator</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_DEBUGGER_DATATIP_ACTIVE_TEXT">
      <summary>Debugger: active data tip text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_DEBUGGER_DATATIP_INACTIVE_BACKGROUND">
      <summary>Debugger: inactive data tip background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_DEBUGGER_DATATIP_INACTIVE_BORDER">
      <summary>Debugger: inactive data tip border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_DEBUGGER_DATATIP_INACTIVE_HIGHLIGHT">
      <summary>Debugger: inactive data tip highlight</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_DEBUGGER_DATATIP_INACTIVE_HIGHLIGHTTEXT">
      <summary>Debugger: inactive data tip highlight text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_DEBUGGER_DATATIP_INACTIVE_SEPARATOR">
      <summary>Debugger: inactive data tip separator</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_DEBUGGER_DATATIP_INACTIVE_TEXT">
      <summary>Debugger: inactive data tip text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_DESIGNER_BACKGROUND">
      <summary>Designer background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_DESIGNER_SELECTIONDOTS">
      <summary>Designer selection dots</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_DESIGNER_TRAY">
      <summary>Designer tray</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_DESIGNER_WATERMARK">
      <summary>Designer watermark</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_EDITOR_EXPANSION_BORDER">
      <summary>Editor expansion border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_EDITOR_EXPANSION_FILL">
      <summary>Editor expansion fill</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_EDITOR_EXPANSION_LINK">
      <summary>Editor expansion link</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_EDITOR_EXPANSION_TEXT">
      <summary>Editor expansion text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_ENVIRONMENT_BACKGROUND">
      <summary>Environment background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_ENVIRONMENT_BACKGROUND_GRADIENTBEGIN">
      <summary>Environment gradient begin</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_ENVIRONMENT_BACKGROUND_GRADIENTEND">
      <summary>Environment gradient end</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_FILETAB_BORDER">
      <summary>File tab border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_FILETAB_CHANNELBACKGROUND">
      <summary>File tab channel background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_FILETAB_GRADIENTDARK">
      <summary>File tab dark gradient</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_FILETAB_GRADIENTLIGHT">
      <summary>File tab light gradient</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_FILETAB_SELECTEDBACKGROUND">
      <summary>File tab selected background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_FILETAB_SELECTEDBORDER">
      <summary>File tab selected border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_FILETAB_SELECTEDTEXT">
      <summary>File tab selected text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_FILETAB_TEXT">
      <summary>File tab text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_FORMSMARTTAG_ACTIONTAG_BORDER">
      <summary>Form smart tag action tag border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_FORMSMARTTAG_ACTIONTAG_FILL">
      <summary>Form smart tag action tag fill</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_FORMSMARTTAG_OBJECTTAG_BORDER">
      <summary>Form smart tag object tag border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_FORMSMARTTAG_OBJECTTAG_FILL">
      <summary>Form smart tag object tag fill</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_GRID_HEADING_BACKGROUND">
      <summary>Grid heading background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_GRID_HEADING_TEXT">
      <summary>Grid heading text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_GRID_LINE">
      <summary>Grid line</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_HOWDOI_PANE_BACKGROUND">
      <summary>Help HowDoI pane background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_HOWDOI_PANE_LINK">
      <summary>Help HowDoI pane link</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_HOWDOI_PANE_TEXT">
      <summary>Help HowDoI pane text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_HOWDOI_TASK_BACKGROUND">
      <summary>Help HowDoI task background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_HOWDOI_TASK_LINK">
      <summary>Help HowDoI task link</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_HOWDOI_TASK_TEXT">
      <summary>Help HowDoI task text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_SEARCH_BACKGROUND">
      <summary>Help search background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_SEARCH_BORDER">
      <summary>Help search border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_SEARCH_FITLER_BACKGROUND">
      <summary>Help search filter background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_SEARCH_FITLER_BORDER">
      <summary>Help search filter border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_SEARCH_FITLER_TEXT">
      <summary>Help search filter text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_SEARCH_FRAME_BACKGROUND">
      <summary>Help search frame background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_SEARCH_FRAME_TEXT">
      <summary>Help search frame text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_SEARCH_PANEL_RULES">
      <summary>Help search panel rules</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_SEARCH_PROVIDER_ICON">
      <summary>Help search provider icon</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_SEARCH_PROVIDER_SELECTED_BACKGROUND">
      <summary>Help search provider selected background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_SEARCH_PROVIDER_SELECTED_TEXT">
      <summary>Help search provider selected text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_SEARCH_PROVIDER_UNSELECTED_BACKGROUND">
      <summary>Help search provider unselected background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_SEARCH_PROVIDER_UNSELECTED_TEXT">
      <summary>Help search provider unselected text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_SEARCH_RESULT_LINK_SELECTED">
      <summary>Help search result link selected</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_SEARCH_RESULT_LINK_UNSELECTED">
      <summary>Help search result link unselected</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_SEARCH_RESULT_SELECTED_BACKGROUND">
      <summary>Help search result selected background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_SEARCH_RESULT_SELECTED_TEXT">
      <summary>Help search result selected text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_HELP_SEARCH_TEXT">
      <summary>Help search text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_LASTEX">
      <summary>Lastex</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_MDICLIENT_BORDER">
      <summary>MDI client border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PANEL_BORDER">
      <summary>Panel border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PANEL_GRADIENTDARK">
      <summary>Panel gradient dark</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PANEL_GRADIENTLIGHT">
      <summary>Panel gradient light</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PANEL_HOVEROVERCLOSE_BORDER">
      <summary>Panel hover over close border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PANEL_HOVEROVERCLOSE_FILL">
      <summary>Panel hover over close fill</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PANEL_HYPERLINK">
      <summary>Panel hyperlink</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PANEL_HYPERLINK_HOVER">
      <summary>Panel hyperlink hover</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PANEL_HYPERLINK_PRESSED">
      <summary>Panel hyperlink pressed</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PANEL_SEPARATOR">
      <summary>Panel separator</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PANEL_SUBGROUPSEPARATOR">
      <summary>Panel subgroup separator</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PANEL_TEXT">
      <summary>Panel text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PANEL_TITLEBAR">
      <summary>Panel title bar</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PANEL_TITLEBAR_TEXT">
      <summary>Panel title bar text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PANEL_TITLEBAR_UNSELECTED">
      <summary>Panel title bar unselected</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PROJECTDESIGNER_BACKGROUND_GRADIENTBEGIN">
      <summary>Project designer background gradient begin</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PROJECTDESIGNER_BACKGROUND_GRADIENTEND">
      <summary>Project designer background gradient end</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PROJECTDESIGNER_BORDER_INSIDE">
      <summary>Project designer border inside</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PROJECTDESIGNER_BORDER_OUTSIDE">
      <summary>Project designer border outside</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PROJECTDESIGNER_CONTENTS_BACKGROUND">
      <summary>Project designer contents background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PROJECTDESIGNER_TAB_BACKGROUND_GRADIENTBEGIN">
      <summary>Project designer tab background gradient begin</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PROJECTDESIGNER_TAB_BACKGROUND_GRADIENTEND">
      <summary>Project designer tab background gradient end</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PROJECTDESIGNER_TAB_SELECTED_BACKGROUND">
      <summary>Project designer tab selected background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PROJECTDESIGNER_TAB_SELECTED_BORDER">
      <summary>Project designer tab selected border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PROJECTDESIGNER_TAB_SELECTED_HIGHLIGHT1">
      <summary>Project designer tab selected highlight1</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PROJECTDESIGNER_TAB_SELECTED_HIGHLIGHT2">
      <summary>Project designer tab selected highlight2</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PROJECTDESIGNER_TAB_SELECTED_INSIDEBORDER">
      <summary>Project designer tab selected inside border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PROJECTDESIGNER_TAB_SEP_BOTTOM_GRADIENTBEGIN">
      <summary>Project designer tab separator bottom gradient begin</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PROJECTDESIGNER_TAB_SEP_BOTTOM_GRADIENTEND">
      <summary>Project designer tab separator bottom gradient end</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PROJECTDESIGNER_TAB_SEP_TOP_GRADIENTBEGIN">
      <summary>Project designer tab separator top gradient begin</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_PROJECTDESIGNER_TAB_SEP_TOP_GRADIENTEND">
      <summary>Project designer tab separator top gradient end</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_SCREENTIP_BACKGROUND">
      <summary>Screentip background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_SCREENTIP_BORDER">
      <summary>Screentip border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_SCREENTIP_TEXT">
      <summary>Screentip text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_SIDEBAR_BACKGROUND">
      <summary>Sidebar background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_SIDEBAR_GRADIENTDARK">
      <summary>Sidebar gradient dark</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_SIDEBAR_GRADIENTLIGHT">
      <summary>Sidebar gradient light</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_SIDEBAR_TEXT">
      <summary>Sidebar text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_SMARTTAG_BORDER">
      <summary>Smart tag border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_SMARTTAG_FILL">
      <summary>Smart tag fill</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_SMARTTAG_HOVER_BORDER">
      <summary>Smart tag hover border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_SMARTTAG_HOVER_FILL">
      <summary>Smart tag hover fill</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_SMARTTAG_HOVER_TEXT">
      <summary>Smart tag hover text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_SMARTTAG_TEXT">
      <summary>Smart tag text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_SNAPLINES">
      <summary>Snaplines</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_SNAPLINES_PADDING">
      <summary>Snaplines padding</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_SNAPLINES_TEXTBASELINE">
      <summary>Snaplines text baseline</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_SORT_BACKGROUND">
      <summary>Sort background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_SORT_TEXT">
      <summary>Sort text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TASKLIST_GRIDLINES">
      <summary>Task list grid lines</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TITLEBAR_ACTIVE">
      <summary>Title bar active</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TITLEBAR_ACTIVE_GRADIENTBEGIN">
      <summary>Title bar active gradient begin</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TITLEBAR_ACTIVE_GRADIENTEND">
      <summary>Title bar active gradient end</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TITLEBAR_ACTIVE_TEXT">
      <summary>Title bar active text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TITLEBAR_INACTIVE">
      <summary>Title bar inactive</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TITLEBAR_INACTIVE_GRADIENTBEGIN">
      <summary>Title bar inactive gradient begin</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TITLEBAR_INACTIVE_GRADIENTEND">
      <summary>Title bar inactive gradient end</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TITLEBAR_INACTIVE_TEXT">
      <summary>Title bar inactive text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLBOX_BACKGROUND">
      <summary>Toolbox background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLBOX_DIVIDER">
      <summary>Toolbox divider</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLBOX_GRADIENTDARK">
      <summary>Toolbox gradient dark</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLBOX_GRADIENTLIGHT">
      <summary>Toolbox gradient light</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLBOX_HEADINGACCENT">
      <summary>Toolbox heading accent</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLBOX_HEADINGBEGIN">
      <summary>Toolbox heading begin</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLBOX_HEADINGEND">
      <summary>Toolbox heading end</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLBOX_ICON_HIGHLIGHT">
      <summary>Toolbox icon highlight</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLBOX_ICON_SHADOW">
      <summary>Toolbox icon shadow</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLWINDOW_BACKGROUND">
      <summary>Tool window background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLWINDOW_BORDER">
      <summary>Tool window border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLWINDOW_BUTTON_DOWN">
      <summary>Tool window button down</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLWINDOW_BUTTON_DOWN_BORDER">
      <summary>Tool window button down border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLWINDOW_BUTTON_HOVER_ACTIVE">
      <summary>Tool window button hover active</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLWINDOW_BUTTON_HOVER_ACTIVE_BORDER">
      <summary>Tool window  button hover active border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLWINDOW_BUTTON_HOVER_INACTIVE">
      <summary>Tool window button hover inactive</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLWINDOW_BUTTON_HOVER_INACTIVE_BORDER">
      <summary>Tool window button hover inactive border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLWINDOW_TAB_BORDER">
      <summary>Tool window tab border</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLWINDOW_TAB_GRADIENTBEGIN">
      <summary>Tool window tab gradient begin</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLWINDOW_TAB_GRADIENTEND">
      <summary>Tool window tab gradient end</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLWINDOW_TAB_SELECTEDTAB">
      <summary>Tool window selected tab</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLWINDOW_TAB_SELECTEDTEXT">
      <summary>Tool window tab selected text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLWINDOW_TAB_TEXT">
      <summary>Tool window tab text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_TOOLWINDOW_TEXT">
      <summary>Tool window text</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_WIZARD_ORIENTATIONPANEL_BACKGROUND">
      <summary>Wizard orientation panel background</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX.VSCOLOR_WIZARD_ORIENTATIONPANEL_TEXT">
      <summary>Wizard orientation panel text</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSTASKLISTSELECTIONSCROLLPOS">
      <summary>Specifies the scrolling behavior for <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskList2.SelectItems(System.Int32,Microsoft.VisualStudio.Shell.Interop.IVsTaskItem[],System.UInt32,System.UInt32)" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKLISTSELECTIONSCROLLPOS.TSSP_CARETATBOTTOM">
      <summary>Position the caret item at the bottom (as the last visible item).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKLISTSELECTIONSCROLLPOS.TSSP_CARETATTOP">
      <summary>Position the caret item at the top (as the first visible item).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKLISTSELECTIONSCROLLPOS.TSSP_CENTERCARET">
      <summary>Position the caret item in the center.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKLISTSELECTIONSCROLLPOS.TSSP_MINSCROLL">
      <summary>Scroll the minimum distance required for the caret item to be visible.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKLISTSELECTIONSCROLLPOS.TSSP_NOSCROLL">
      <summary>Do not scroll the task list at all.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKLISTSELECTIONSCROLLPOS.TSSP_SHOWALL">
      <summary>Show the caret item and as many of the other selected items as possible.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSTASKLISTSELECTIONTYPE">
      <summary>Specifies the selection behavior for <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskList2.SelectItems(System.Int32,Microsoft.VisualStudio.Shell.Interop.IVsTaskItem[],System.UInt32,System.UInt32)" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKLISTSELECTIONTYPE.TST_ADDTOSEL">
      <summary>New items are individually added to the previous selection, as if the user had pressed Ctrl and clicked.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKLISTSELECTIONTYPE.TST_EXTENDSEL">
      <summary>The selection is extended from the current caret item to include the new selection, as if the user had pressed Shift and clicked.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKLISTSELECTIONTYPE.TST_REPLACESEL">
      <summary>Any previously-selected items are unselected before the new selection is applied.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSTASKPROVIDERFLAGS">
      <summary>Task provider flags returned by <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskProvider3.GetProviderFlags(System.UInt32@)" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKPROVIDERFLAGS.TPF_ALWAYSVISIBLE">
      <summary>Provider is always visible in drop-down list even if it has no tasks.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKPROVIDERFLAGS.TPF_NOAUTOROUTING">
      <summary>Does not automatically route this provider's tasks to predefined buckets based on their categories.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSTASKVALUEFLAGS">
      <summary>Task Value flags returned by <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskItem3.GetColumnValue(System.Int32,System.UInt32@,System.UInt32@,System.Object@,System.String@)" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKVALUEFLAGS.TVF_BINARY_STATE">
      <summary>An enum with only two possible states. The user can switch the state by a UI action similar to selecting a check box.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKVALUEFLAGS.TVF_EDITABLE">
      <summary>This value can be changed by the user.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKVALUEFLAGS.TVF_ENUM">
      <summary>The value is not arbitrary, but may only be one of a limited set of strings provided by the task item.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKVALUEFLAGS.TVF_FILENAME">
      <summary>This textual value will be treated as a file name.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKVALUEFLAGS.TVF_HORZ_CENTER">
      <summary>The value is horizontally centered in the column.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKVALUEFLAGS.TVF_HORZ_RIGHT">
      <summary>The value is aligned against the right edge of the column.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKVALUEFLAGS.TVF_STRIKETHROUGH">
      <summary>The value is drawn with a strikethrough font style.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSTASKVALUETYPE">
      <summary>Specifies the value types returned by <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskItem3.GetColumnValue(System.Int32,System.UInt32@,System.UInt32@,System.Object@,System.String@)" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKVALUETYPE.TVT_BASE10">
      <summary>A number displayed in decimal notation.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKVALUETYPE.TVT_IMAGE">
      <summary>An indexed image in the image list provided by the task provider.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKVALUETYPE.TVT_LINKTEXT">
      <summary>Text with underlined links displayed between “@” characters (the delimiters are not displayed).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKVALUETYPE.TVT_NULL">
      <summary>A null reference.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTASKVALUETYPE.TVT_TEXT">
      <summary>Arbitrary text.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSTRANSACCELEXFLAGS">
      <summary>Flags for <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsFilterKeys2.TranslateAcceleratorEx(Microsoft.VisualStudio.OLE.Interop.MSG[],System.UInt32,System.UInt32,System.Guid[],System.Guid@,System.UInt32@,System.Int32@,System.Int32@)" /> calls.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTRANSACCELEXFLAGS.VSTAEXF_AllowModalState">
      <summary>By default this function cannot be called when the shell is in a modal state, since command routing is inherently dangerous. However if you must access this in a modal state, specify this flag, but keep in mind that many commands will cause unpredictable behavior if fired.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTRANSACCELEXFLAGS.VSTAEXF_Default">
      <summary>The <paramref name="rgrguidKeyBindingScopes" /> are pre-pended to currently active key binding scopes then command is fired.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTRANSACCELEXFLAGS.VSTAEXF_IgnoreActiveKBScopes">
      <summary>The <paramref name="rgrguidKeyBindingScopes" /> are used INSTEAD of currently active key binding scopes.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTRANSACCELEXFLAGS.VSTAEXF_NoFireCommand">
      <summary>Do not fire the command through command routing.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTRANSACCELEXFLAGS.VSTAEXF_UseGlobalKBScope">
      <summary>Translate keys using Global key bindings. Equivalent to passing CMDSETID_StandardCommandSet97 and guidKeyDupe for scopes and the <see cref="F:Microsoft.VisualStudio.Shell.Interop.__VSTRANSACCELEXFLAGS.VSTAEXF_IgnoreActiveKBScopes" /> flag.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTRANSACCELEXFLAGS.VSTAEXF_UseTextEditorKBScope">
      <summary>Translate keys using TextEditor key bindings. Equivalent to passing CMDUIGUID_TextEditor, CMDSETID_StandardCommandSet97, and guidKeyDupe for scopes and the <see cref="F:Microsoft.VisualStudio.Shell.Interop.__VSTRANSACCELEXFLAGS.VSTAEXF_IgnoreActiveKBScopes" /> flag.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSTWDFLAGS">
      <summary>Specifies the behavior of the Wait dialog. These flags are passed to <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsThreadedWaitDialog.StartWaitDialog(System.String,System.String,System.String,System.UInt32,System.Object,System.String)" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTWDFLAGS.VSTWDFLAGS_CANCELLABLE">
      <summary>The dialog can be cancelled, so display the Cancel button.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTWDFLAGS.VSTWDFLAGS_NOFLAGS">
      <summary>No flags are specified.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSTWDFLAGS.VSTWDFLAGS_TOPMOST">
      <summary>Force the Wait dialog window above all other windows.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSUL_ERRORLEVEL">
      <summary>Indicates error levels for the upgrade logger. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSUL_ERRORLEVEL.VSUL_ERROR">
      <summary>Error message</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSUL_ERRORLEVEL.VSUL_INFORMATIONAL">
      <summary>Informational message</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSUL_ERRORLEVEL.VSUL_PROJECT_HYPERLINK">
      <summary>Project hyperlink</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSUL_ERRORLEVEL.VSUL_STATUSMSG">
      <summary>Status message</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSUL_ERRORLEVEL.VSUL_WARNING">
      <summary>Warning message</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__VSWIZARDTRUSTLEVEL">
      <summary>Specifies wizard trust levels. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSWIZARDTRUSTLEVEL.WTL_Trusted">
      <summary>Trusted</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSWIZARDTRUSTLEVEL.WTL_Unspecified">
      <summary>Unspecified</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__VSWIZARDTRUSTLEVEL.WTL_Untrusted">
      <summary>Untrusted</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__XMLMEMBERDATA_OPTIONS">
      <summary>Specifies options for XML member data elements.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__XMLMEMBERDATA_OPTIONS.XMLMEMBERDATA_OPTIONS_NONE">
      <summary>No options are set.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__XMLMEMBERDATA_OPTIONS.XMLMEMBERDATA_OPTIONS_PRESERVE_NEWLINES">
      <summary>Newlines are kept.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.__XMLMEMBERDATA_TAGTYPE">
      <summary>Specifies tag types for XML member data elements. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.__XMLMEMBERDATA_TAGTYPE.XMLMEMBERDATA_TAGTYPE_CREF">
      <summary>Code reference tag type.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_OPTIONS">
      <summary>Specifies <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsBrowseComponentSet" /> list options to modify behavior provided by a library. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_OPTIONS.BCSO_NO_DRAG_DROP">
      <summary>Drag and drop not available. <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.QueryDragDrop(System.UInt32,Microsoft.VisualStudio.OLE.Interop.IDataObject,System.UInt32,System.UInt32@)" /> will always return FALSE</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_OPTIONS.BCSO_NO_REMOVE">
      <summary>Delete not available. <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.CanDelete(System.UInt32,System.Int32@)" /> will always return FALSE.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_OPTIONS.BCSO_NO_RENAME">
      <summary>Rename not available. <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.CanDelete(System.UInt32,System.Int32@)" /> will always return FALSE.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_OPTIONS.BCSO_PROJECT_REFERENCES">
      <summary>
        <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetCategoryField2(System.UInt32,System.Int32,System.UInt32@)" /> will return <see cref="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_PHYSICALCONTAINERTYPE.LCPT_PROJECTREFERENCE" /> for the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIBCAT_PHYSICALCONTAINERTYPE" /> category. This is needed to show/hide project references class view functionality.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_TYPE">
      <summary>Specifies settings for browse component types. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_TYPE.BCST_EXCLUDE_LIBRARIES">
      <summary>Exclude libraries.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_TYPE.BCST_INCLUDE_LIBRARIES">
      <summary>Include libraries.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._BuildSystemKindFlags">
      <summary>Specifies the type or kind of build system.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._BuildSystemKindFlags.BSK_MSBUILD">
      <summary>The build system stores files in the MSBuild format</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._DEBUG_LAUNCH_OPERATION2">
      <summary>Provides additional members to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.DEBUG_LAUNCH_OPERATION" /> enumeration.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._DEBUG_LAUNCH_OPERATION2.DLO_AttachToHostingProcess">
      <summary>Attach to a hosting process.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._DEBUG_LAUNCH_OPERATION2.DLO_StartDebuggingHostingProcess">
      <summary>Start debugging.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._LAUNCHPAD_FLAGS2">
      <summary>Determines whether command line tool and batch file output is treated as Unicode.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LAUNCHPAD_FLAGS2.LPF_TreatOutputAsUnicode">
      <summary>The command line tool and batch file output is treated as Unicode.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._LIB_CATEGORY2">
      <summary>Provides additional members to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.LIB_CATEGORY" /> enumeration. Defines Library Manager List Element Categories (for use in Symbol Provider List Element Attribute Domains). </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_CATEGORY2.LC_HIERARCHYTYPE">
      <summary>Hierarchy element type.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_CATEGORY2.LC_Last2">
      <summary>Indicates last LIB_CATEGORY_ member.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_CATEGORY2.LC_MEMBERINHERITANCE">
      <summary>Member inheritance.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_CATEGORY2.LC_NIL">
      <summary>= 0. No category.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_CATEGORY2.LC_PHYSICALCONTAINERTYPE">
      <summary>Physical container element type.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_CATEGORY2.LC_SEARCHMATCHTYPE">
      <summary>Search match type. Supported by the object model, but libraries are not required to implement this.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._LIB_FLAGS2">
      <summary>Provides additional members for the LIB_FLAG enumeration. Enumerates the library flags returned from I<see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2.GetLibFlags2(System.UInt32@)" />. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_FLAGS2.LF_SHOWFULLNAMESINFINDSYMBOLRESULTS">
      <summary>Requests to show fully qualified names in find symbol results.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_FLAGS2.LF_SUPPORTSALWAYSUPDATE">
      <summary>Supports Always update (even for Find symbol results).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_FLAGS2.LF_SUPPORTSBASETYPES">
      <summary>Supports exposing base types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_FLAGS2.LF_SUPPORTSCALLBROWSER">
      <summary>Supports Call Browser Calls To or Calls From.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_FLAGS2.LF_SUPPORTSCLASSDESIGNER">
      <summary>Supports Class designer.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_FLAGS2.LF_SUPPORTSDERIVEDTYPES">
      <summary>Supports exposing derived types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_FLAGS2.LF_SUPPORTSFILTERING">
      <summary>Supports filtering (<see cref="F:Microsoft.VisualStudio.Shell.Interop._VSOBSEARCHOPTIONS2.VSOBSO_FILTERING" /> flag in <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2" />).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_FLAGS2.LF_SUPPORTSFILTERINGWITHEXPANSION">
      <summary>Library supports search with expansion (<see cref="F:Microsoft.VisualStudio.Shell.Interop._VSOBSEARCHOPTIONS2.VSOBSO_EXPANDCHILDREN" /> flag in <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2" />); implies LF_SUPPORTSFILTERING.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_FLAGS2.LF_SUPPORTSINHERITEDMEMBERS">
      <summary>Supports exposing inherited members.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_FLAGS2.LF_SUPPORTSLISTREFERENCES">
      <summary>Can find symbol usages (<see cref="F:Microsoft.VisualStudio.Shell.Interop._VSOBSEARCHOPTIONS2.VSOBSO_LISTREFERENCES" /> flag in <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2" />).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_FLAGS2.LF_SUPPORTSPRIVATEMEMBERS">
      <summary>Supports exposing private members.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_FLAGS2.LF_SUPPORTSPROJECTREFERENCES">
      <summary>Supports exposing project references.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTCAPABILITIES2">
      <summary>Library list flags returned from <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetCapabilities2(System.UInt32@)" />. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_LISTCAPABILITIES2.LLC_ALLOWELEMENTSEARCH">
      <summary>Allows search starting at given element for <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetList2(System.UInt32,System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2[],Microsoft.VisualStudio.Shell.Interop.IVsObjectList2@)" />.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTTYPE2">
      <summary>Provides additional members to the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTTYPE" /> enumeration. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_LISTTYPE2.LLT_MEMBERHIERARCHY">
      <summary>Member hierarchy list type (object browser places lists of this type in the member pane).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIB_LISTTYPE2.LLT_NIL">
      <summary>NIL; 0</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._LIBCAT_CLASSTYPE2">
      <summary>Provides additional members for the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIBCAT_CLASSTYPE" /> enumeration.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_CLASSTYPE2.LCCT_GENERIC">
      <summary>Specifies a generic class.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_CLASSTYPE2.LCCT_ITERATOR">
      <summary>Specifies an iterator class.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_CLASSTYPE2.LCCT_TEMPLATE">
      <summary>Specifies a template class.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._LIBCAT_HIERARCHYTYPE">
      <summary>Specifies the hierarchy element type. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_HIERARCHYTYPE.LCHT_BASESANDINTERFACES">
      <summary>Bases and Interfaces hierarchy element type.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_HIERARCHYTYPE.LCHT_DERIVEDTYPES">
      <summary>Derived Types hierarchy element type.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_HIERARCHYTYPE.LCHT_FOLDER">
      <summary>Folder hierarchy element type.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_HIERARCHYTYPE.LCHT_INFO">
      <summary>Info hierarchy element type.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_HIERARCHYTYPE.LCHT_PROJECTREFERENCES">
      <summary>Project References hierarchy element type.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_HIERARCHYTYPE.LCHT_UNKNOWN">
      <summary>Unknown (Generic) hierarchy element type.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._LIBCAT_MEMBERINHERITANCE">
      <summary>Specifies inheritance options for libcat members. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_MEMBERINHERITANCE.LCMI_IMMEDIATE">
      <summary>Immediate member of class (type).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_MEMBERINHERITANCE.LCMI_INHERITED">
      <summary>Inherited member of class (type).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_MEMBERINHERITANCE.LCMI_NOTOVERRIDABLE">
      <summary>Not overridable member of parent class (type).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_MEMBERINHERITANCE.LCMI_OVERRIDABLE">
      <summary>Overridable (virtual), but not overridden member of parent class (type).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_MEMBERINHERITANCE.LCMI_OVERRIDDEN">
      <summary>Overridden (virtual or pure virtual) member of parent class (type).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_MEMBERINHERITANCE.LCMI_OVERRIDEREQUIRED">
      <summary>Override-required (pure virtual), but not overridden, member of parent class (type).</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._LIBCAT_MEMBERTYPE2">
      <summary>Provides additional members to the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIBCAT_MEMBERTYPE" /> enumeration.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_MEMBERTYPE2.LCMT_GENERIC">
      <summary>Indicates generic method.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_MEMBERTYPE2.LCMT_TEMPLATE">
      <summary>Indicates template method.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._LIBCAT_PHYSICALCONTAINERTYPE">
      <summary>Specifies the type of a physical container.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_PHYSICALCONTAINERTYPE.LCPT_GLOBAL">
      <summary>Specifies a global physical container.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_PHYSICALCONTAINERTYPE.LCPT_PROJECT">
      <summary>Specifies a project physical container.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_PHYSICALCONTAINERTYPE.LCPT_PROJECTREFERENCE">
      <summary>Specifies a project reference physical container.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._LIBCAT_SEARCHMATCHTYPE">
      <summary>Specifies library manager search match types.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_SEARCHMATCHTYPE.LSMT_LEAF_PRESTRING">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_SEARCHMATCHTYPE.LSMT_LEAF_PRESTRING_NO_CASE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_SEARCHMATCHTYPE.LSMT_LEAF_WHOLEWORD">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_SEARCHMATCHTYPE.LSMT_LEAF_WHOLEWORD_NO_CASE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_SEARCHMATCHTYPE.LSMT_NO_MATCH">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_SEARCHMATCHTYPE.LSMT_PART_PRESTRING">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_SEARCHMATCHTYPE.LSMT_PART_PRESTRING_NO_CASE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_SEARCHMATCHTYPE.LSMT_PART_WHOLEWORD">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_SEARCHMATCHTYPE.LSMT_PART_WHOLEWORD_NO_CASE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_SEARCHMATCHTYPE.LSMT_PRESTRING">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_SEARCHMATCHTYPE.LSMT_PRESTRING_NO_CASE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_SEARCHMATCHTYPE.LSMT_SUBSTRING">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_SEARCHMATCHTYPE.LSMT_SUBSTRING_NO_CASE">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_SEARCHMATCHTYPE.LSMT_WHOLEWORD">
      <summary />
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._LIBCAT_SEARCHMATCHTYPE.LSMT_WHOLEWORD_NO_CASE">
      <summary />
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._PersistStorageType">
      <summary>Specifies the persistent location for <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsBuildPropertyStorage" /> and <see cref="T:Microsoft.VisualStudio.Shell.Interop.IPersistXMLFragment" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._PersistStorageType.PST_PROJECT_FILE">
      <summary>Specifies storage file type to project file.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._PersistStorageType.PST_USER_FILE">
      <summary>Specifies storage file type to user file.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._ProjectLoadSecurityDialogState">
      <summary>Specifies the state of the security dialog.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._ProjectLoadSecurityDialogState.PLSDS_DontShowAgainBrowse">
      <summary>Don’t show it again when browsing.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._ProjectLoadSecurityDialogState.PLSDS_DontShowAgainFullLoad">
      <summary>Don’t show it again when the project is loaded.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._ProjectLoadSecurityDialogState.PLSDS_DontShowAgainUnload">
      <summary>Don’t show it again when the project is unloaded.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._ProjectLoadSecurityDialogState.PLSDS_ShowAgain">
      <summary>Show it again.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._SqlAddNewReferenceFlags">
      <summary>Specifies flags to invoke new references. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._SqlAddNewReferenceFlags.SqlAddNewReferenceFlags_DownloadSelected">
      <summary>Selected references that should be downloaded to local cache before caller's <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsComponentUser.AddComponent(Microsoft.VisualStudio.Shell.Interop.VSADDCOMPOPERATION,System.UInt32,System.IntPtr[],System.IntPtr,Microsoft.VisualStudio.Shell.Interop.VSADDCOMPRESULT[])" /> call.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._SqlReferenceUpdateAction">
      <summary>Specifies SQL Reference Update service actions. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._SqlReferenceUpdateAction.SqlReferenceUpdateAction_Delete">
      <summary>Delete action.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._SqlReferenceUpdateAction.SqlReferenceUpdateAction_None">
      <summary>No action.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._SqlReferenceUpdateAction.SqlReferenceUpdateAction_Update">
      <summary>Update action.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._SqlReferenceUpdateFlags">
      <summary>Specifies how SQL references are updated. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._SqlReferenceUpdateFlags.SqlReferenceUpdateFlags_ForceUpdate">
      <summary>Force updates</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._VSOBJLISTELEMPROPID">
      <summary>Specifies object list element properties in <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetProperty(System.UInt32,System.Int32,System.Object@)" /> calls.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSOBJLISTELEMPROPID.VSOBJLISTELEMPROPID_CODEDEFVIEWCONTEXT">
      <summary>Specifies the context for displaying the Code Definition tool window.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSOBJLISTELEMPROPID.VSOBJLISTELEMPROPID_COMPONENTPATH">
      <summary>Specifies the component path.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSOBJLISTELEMPROPID.VSOBJLISTELEMPROPID_FIRST">
      <summary>Denotes the first VSOBJLISTELEMPROPID_.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSOBJLISTELEMPROPID.VSOBJLISTELEMPROPID_FULLNAME">
      <summary>Specifies the object’s full name.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSOBJLISTELEMPROPID.VSOBJLISTELEMPROPID_HELPKEYWORD">
      <summary>Specifies the object’s help key word.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSOBJLISTELEMPROPID.VSOBJLISTELEMPROPID_LAST">
      <summary>Denotes the last VSOBJLISTELEMPROPID_.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSOBJLISTELEMPROPID.VSOBJLISTELEMPROPID_LEAFNAME">
      <summary>Specifies the object’s leaf name.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSOBJLISTELEMPROPID.VSOBJLISTELEMPROPID_NAME_FOR_RENAME">
      <summary>Specifies a name for renaming the object.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSOBJLISTELEMPROPID.VSOBJLISTELEMPROPID_SUPPORTSCALLSFROM">
      <summary>Indicates the "SupportsCallsFrom" property.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSOBJLISTELEMPROPID.VSOBJLISTELEMPROPID_SUPPORTSCALLSTO">
      <summary>Indicates the "SupportsCallsTo" property.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._VSOBSEARCHOPTIONS2">
      <summary>Provides additional members to the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBSEARCHOPTIONS" /> enumeration. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSOBSEARCHOPTIONS2.VSOBSO_CALLSFROM">
      <summary>Obtains calls from symbol specified in <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSOBSEARCHOPTIONS2.VSOBSO_CALLSTO">
      <summary>Obtains calls to symbol specified in <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSOBSEARCHOPTIONS2.VSOBSO_EXPANDCHILDREN">
      <summary>Used with VSOBSO_FILTERING if a library supports <see cref="F:Microsoft.VisualStudio.Shell.Interop._LIB_FLAGS2.LF_SUPPORTSFILTERINGWITHEXPANSION" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSOBSEARCHOPTIONS2.VSOBSO_FILTERING">
      <summary>Specifies filter in class view and the object browser.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSOBSEARCHOPTIONS2.VSOBSO_LISTREFERENCES">
      <summary>Specifies that search results should contain references as children.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop._VSRDTFLAGS2">
      <summary>Specifies additional options for a document in the running document table (RDT).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSRDTFLAGS2.RDT_Lock_WeakEditLock">
      <summary>Places a weak edit lock on the document. This flag must be ORed with <see cref="F:Microsoft.VisualStudio.Shell.Interop._VSRDTFLAGS.RDT_EditLock" /> when registering a weak edit lock. This flag is used in this combination when using <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsRunningDocumentTable.RegisterDocumentLockHolder(System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsDocumentLockHolder,System.UInt32@)" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop._VSRDTFLAGS2.RDT_LOCKUNLOCKMASK">
      <summary>Mask of the <see cref="F:Microsoft.VisualStudio.Shell.Interop._VSRDTFLAGS.RDT_Unlock_NoSave" />, <see cref="F:Microsoft.VisualStudio.Shell.Interop._VSRDTFLAGS.RDT_Unlock_SaveIfDirty" />, <see cref="F:Microsoft.VisualStudio.Shell.Interop._VSRDTFLAGS.RDT_Unlock_PromptSave" />, and <see cref="F:Microsoft.VisualStudio.Shell.Interop._VSRDTFLAGS2.RDT_Lock_WeakEditLock" /> flags.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.BLDGETFLAGS">
      <summary>Specifies the options when requesting a builder.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BLDGETFLAGS.BLDGETOPT_FAUTOMAPENABLEPROMPT">
      <summary>Used only if you set BLDGETOPT_FAUTOMAPGUID. Provides a user prompt to select the builder. If this flag is set, then BLDGETOPT_FAUTOMAPPROMPTALWAYS determines whether or not to prompt the user. Not setting this flag is the same as passing BLDPROMPTOPT_PROMPTNEVER to MapBuilderCATIDToCLSID. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BLDGETFLAGS.BLDGETOPT_FAUTOMAPGUID">
      <summary>Interpret the <paramref name="rguidBuilder" /> parameter of <see cref="M:Microsoft.VisualStudio.Shell.Interop.IBuilderWizardManager.GetBuilder(System.Guid@,System.UInt32,System.IntPtr,System.Object@,System.IntPtr@,System.Guid@,System.Object@)" /> as a component category ID (CATID). When you set this flag, <see cref="T:Microsoft.VisualStudio.Shell.Interop.IBuilderWizardManager" /> makes first call <see cref="M:Microsoft.VisualStudio.Shell.Interop.IBuilderWizardManager.MapBuilderCATIDToCLSID(System.Guid@,System.UInt32,System.IntPtr,System.Guid@)" /> before it determines which builder IDispatch to return. Do not set this flag if you are use a builder CLSID.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BLDGETFLAGS.BLDGETOPT_FAUTOMAPPROMPTALWAYS">
      <summary>Used only if you set both BLDGETOPT_FAUTOMAPGUID and BLDGETOPT_FAUTOMAPENABLEPROMPT. When you set this flag, it always causes a user prompt to choose the builder. If you don't set this flag, then the user is prompted only if there is more than one registered builder for a category and the category has no default registered builder.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BLDGETFLAGS.BLDGETOPT_FNOINTRINSICS">
      <summary>Build without intrinsics.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BLDGETFLAGS.BLDGETOPT_FOBJECTBUILDER">
      <summary>Requested builder is an Object Builder. An Object Builder is a builder invoked after it inserts a new OLE object or control in a container.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.BLDPROMPTOPT">
      <summary>Specifies the user prompt used to choose the builder.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BLDPROMPTOPT.BLDPROMPTOPT_PROMPTALWAYS">
      <summary> Always prompt the user.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BLDPROMPTOPT.BLDPROMPTOPT_PROMPTIFMULTIPLE">
      <summary> Prompt the user if there is no default and there is more than one registered builder.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BLDPROMPTOPT.BLDPROMPTOPT_PROMPTNEVER">
      <summary> Never prompt the user. Use the default builder if there is one. Otherwise, use the first registered builder.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.BrowseLibraryGuids80">
      <summary>Provides a list of GUIDs that are used to identify browse library attributes. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BrowseLibraryGuids80.Assembly">
      <summary>Specifies an assembly in a browse container.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BrowseLibraryGuids80.BSC">
      <summary>Specifies a .bsc file in a browse container.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BrowseLibraryGuids80.CSharp">
      <summary>Specifies a C# file in a browse container.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BrowseLibraryGuids80.Folder">
      <summary>Specifies a folder in a browse container.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BrowseLibraryGuids80.ResourceView">
      <summary>Specifies a resource view in a browse container.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BrowseLibraryGuids80.TypeLib">
      <summary>Specifies a type library in a browse container.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BrowseLibraryGuids80.VB">
      <summary>Specifies a Visual Basic file in a browse container.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BrowseLibraryGuids80.VC">
      <summary>Specifies a C++ file in a browse container.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BrowseLibraryGuids80.VJSharp">
      <summary>Specifies a J# file in a browse container.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.BuildableProjectCfgOpts">
      <summary>Obsolete. Specifies buildable project configuration options.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BuildableProjectCfgOpts.BuildActiveDocumentOnly">
      <summary>Obsolete.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BuildableProjectCfgOpts.BuildSelectionOnly">
      <summary>Obsolete.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BuildableProjectCfgOpts.Private">
      <summary>Obsolete.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BuildableProjectCfgOpts.Rebuild">
      <summary>Obsolete.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.BuildOutputGroup">
      <summary>Represents a build output group. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BuildOutputGroup.Built">
      <summary>Represents built files in an output group.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BuildOutputGroup.ContentFiles">
      <summary>Represents content files in an output group.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BuildOutputGroup.Documentation">
      <summary>Represents documentation files in an output group.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BuildOutputGroup.LocalizedResourceDlls">
      <summary>Represents localized resource DLLs in an output group.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BuildOutputGroup.SourceFiles">
      <summary>Represents source code files in an output group.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.BuildOutputGroup.Symbols">
      <summary>Represents a list of symbols in an output group.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.ComponentSelectorGuids80">
      <summary>Provides a list of GUIDs that are used to identify component selector items. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ComponentSelectorGuids80.BrowseFilesPage">
      <summary>Specifies a file browser page in the component selector.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ComponentSelectorGuids80.COMClassicPage">
      <summary>Specifies a COM component selector page.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ComponentSelectorGuids80.COMPlusPage">
      <summary>Specifies a COM+ component selector page.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ComponentSelectorGuids80.MRUPage">
      <summary>Specifies a most-recently-used item selector page.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ComponentSelectorGuids80.SolutionPage">
      <summary>Specifies a solution selector page.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.CTLBLDTYPE">
      <summary>Specifies a builder type.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.CTLBLDTYPE.CTLBLDTYPE_FEDITSOBJDIRECTLY">
      <summary>Builder modifies the object. This is common behavior.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.CTLBLDTYPE.CTLBLDTYPE_FINTERNALBUILDER">
      <summary>Invoke a custom builder.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.CTLBLDTYPE.CTLBLDTYPE_FSTDPROPBUILDER">
      <summary>Invoke a standard system builder (not supported in Visual Studio).</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.DTECatID">
      <summary>Provides a list of GUIDs that are used to identify DTE categories. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.DTECatID.Document">
      <summary>Specifies a document.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.DTECatID.GenericProject">
      <summary>Specifies a project.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.DTECatID.MiscFilesProject">
      <summary>Specifies a project file.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.DTECatID.MiscFilesProjectItem">
      <summary>Specifies a project file.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.DTECatID.Solution">
      <summary>Specifies a solution.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.DTECatID.SolutionBrowseObject">
      <summary>Specifies a solution browse object.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.FontsAndColorsCategory">
      <summary>Defines target groups for which font and color options are specified. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.FontsAndColorsCategory.CommandWindow">
      <summary>Indicates font and color settings for the Command window.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.FontsAndColorsCategory.DialogsAndToolWindows">
      <summary>Indicates font and color settings for the Dialog and Tool window.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.FontsAndColorsCategory.FindResults">
      <summary>Indicates font and color settings for the Find Results window.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.FontsAndColorsCategory.ImmediateWindow">
      <summary>Indicates font and color settings for the Immediate window.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.FontsAndColorsCategory.Outputwindow">
      <summary>Indicates font and color settings for the Output window</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.FontsAndColorsCategory.Printer">
      <summary>Indicates font and color settings for printing.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.FontsAndColorsCategory.StatementCompletion">
      <summary>Indicates font and color settings for statement completion lists.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.FontsAndColorsCategory.SystemWindow">
      <summary>Indicates font and color settings for the System window.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.FontsAndColorsCategory.TextEditor">
      <summary>Indicates font and color settings for text editing.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.FontsAndColorsCategory.TextOutputToolWindows">
      <summary>Indicates font and color settings for the text output tool windows.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.FontsAndColorsCategory.Tooltip">
      <summary>Indicates font and color settings for tooltips.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.HOSTPROPID">
      <summary>Specifies the identifier of a host property.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.HOSTPROPID.HOSTPROPID_HIERARCHY">
      <summary>Identifier for the hierarchy.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.HOSTPROPID.HOSTPROPID_INTELLISENSECACHE_FILENAME">
      <summary>Identifier for the cached Intellesense filename.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.HOSTPROPID.HOSTPROPID_PROJECTNAME">
      <summary>Identifier for the project name.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.HOSTPROPID.HOSTPROPID_RELURL">
      <summary>Identifier for the relative URL.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IBuilderWizardManager">
      <summary>Retrieves and manages builders for specific properties and components. A builder generates code for an item. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IBuilderWizardManager.DoesBuilderExist(System.Guid@)">
      <summary>Verifies existence of a builder given a builder CLSID, or component category identifier (CATID) such as CATID_PropertyBuilder.</summary>
      <returns>Returns S_OK if a builder exists.Returns S_FALSE if it does not exist it </returns>
      <param name="rguidBuilder"> [in] A CLSID or CATID for a builder.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IBuilderWizardManager.EnableModeless(System.Int32)">
      <summary>Sets builder dialogs to modeless or modal.</summary>
      <returns>Returns S_OK. This method does not fail.</returns>
      <param name="fEnable">[in] true to enable modeless dialogs; false otherwise.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IBuilderWizardManager.GetBuilder(System.Guid@,System.UInt32,System.IntPtr,System.Object@,System.IntPtr@,System.Guid@,System.Object@)">
      <summary>Requests a builder by CLSID or component category ID (CATID).</summary>
      <returns>S_OK if the builder interface is successfully returned.S_FALSE if the dialog UI is canceled.E_NOINTERFACE if the builder is not supported.An error HRESULT from CoCreatInstance if the builder automation server could not be instantiated.</returns>
      <param name="rguidBuilder"> [in] The CLSID or CATID of the builder. You can use a CATID only if you specify BLDGETOPT_AUTOMAPGUID as part of <paramref name="grfGetOpt" />.</param>
      <param name="grfGetOpt"> [in] Options as bit flags. Values are from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.BLDGETFLAGS" /> enumeration.</param>
      <param name="hwndPromptOwner"> [in] Optional owner HWND for all dialogs if the user needs to choose which builder to run. Used only if you specify both BLDGETOPT_FAUTOMAPGUID and BLDGETOPT_FAUTOMAPENABLEPROMPT as part of <paramref name="grfGetOpt" />. </param>
      <param name="ppdispApp">[out] The IDispatch of the application the caller can pass to the invoke call on the builder. The caller must call release for this interface. You can use NULL if this IBuilderWizardManager does not have an IDispatch or the caller is not interested in getting the application IDispatch. </param>
      <param name="pwndBuilderOwner"> [out] Calculated HWND the caller should use as the owner HWND for invoking the builder. May be NULL if the caller is not interested in the calculated hwnd. Set to the HWND of the application main frame window if hwndPromptOwner is NULL. then *phwndBuilderOwner will be set to the hwnd of Application main frame window. Set to hwndPromptOwner if hwndPromptOwner is not NULL. This is the case when invoking the builder from within another modal dialog.</param>
      <param name="riidBuilder"> [in] Interface the client wants from the builder OLE server. The client needs to know the interface to ask for based on the type of builder wanted.</param>
      <param name="ppunkBuilder"> [out] IUnknown interface pointer of the builder.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IBuilderWizardManager.MapBuilderCATIDToCLSID(System.Guid@,System.UInt32,System.IntPtr,System.Guid@)">
      <summary>Returns the CLSID of a specific builder given a component category ID (CATID).</summary>
      <returns>S_OK if the CATID maps to a builder.S_FALSE if there is no builder for the CATID.</returns>
      <param name="rguidBuilder"> [in] The CATID of a builder.If the GUID is a CLSID of a specific builder and <see cref="T:Microsoft.VisualStudio.Shell.Interop.IBuilderWizardManager" /> supports this builder, this method returns S_OK and sets <paramref name="pclsidBuilder" /> to <paramref name="rguidBuilder" />.</param>
      <param name="dwPromptOpt"> [in] Bit flags controlling whether there is a user prompt to choose the builder. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.BLDPROMPTOPT" /> enumeration.</param>
      <param name="hwndPromptOwner"> [in] Owner HWND for all dialogs and windows. May be NULL. If NULL, IBuilderWizardManager uses the HWND for the application frame window.Note   This method may bring up a modal dialog asking the user to choose the builder to use.</param>
      <param name="pclsidBuilder">[out] The CLSID of a specific builder.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IBuilderWizardManager.MapObjectToBuilderCLSID(System.Guid@,System.UInt32,System.IntPtr,System.Guid@)">
      <summary>Returns the CLSID of a builder for an OLE object given the object's CLSID.</summary>
      <returns>S_OK if the CLSID maps to a builder.S_FALSE if there is no builder for the CLSID.</returns>
      <param name="rclsidObject"> [in] CLSID of the object</param>
      <param name="dwPromptOpt"> [in] Bit flags controlling whether there is a user prompt to choose the builder. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.BLDPROMPTOPT" /> enumeration.</param>
      <param name="hwndPromptOwner">[in] Owner HWND for all dialogs and windows. May be NULL. If NULL, IBuilderWizardManager uses the HWND for the application frame window.Note   This method may bring up a modal dialog asking the user to choose the builder to use.</param>
      <param name="pclsidBuilder"> [out] The CLSID of a specific builder.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IDirAutoCompleteList">
      <summary>Marks a directory list as supporting auto completion. Auto completion displays matching subdirectories as you enter characters. </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IDirList">
      <summary>Manages the appearance and actions of a displayed directory list. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IDirList.Add(System.String)">
      <summary>Adds a string to a directory list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrItem"> [in] A string to add to the directory listing.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IDirList.get_Count(System.Int32@)">
      <summary>Gets the number of items in the directory list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="nItems"> [out] The number of items in the directory list.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IDirList.get_Description(System.String@)">
      <summary>Returns the description of the directory list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrDescription"> [out] String containing the description of the directory list.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IDirList.get_HWND(System.Int32@)">
      <summary>Returns the HWND of the directory list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="phwnd"> [out] The HWND of the directory list.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IDirList.get_Title(System.String@)">
      <summary>Get the title of the directory list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrTitle"> [out] String containing the title of the directory list.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IDirList.index(System.Int32,System.String@)">
      <summary>Retrieves an item, by position, from the directory list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="nItem"> [in] Index (position) of the item to return.</param>
      <param name="pbstrItem"> [out] String containing the directory item.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IDirList.put_Description(System.String)">
      <summary>Changes the description of the directory list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrDescription"> [in] String containing the new description.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IDirList.put_ShowCheck(System.Boolean)">
      <summary>Show or hide the checkbox next to each item in the list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bShow"> true to show the checkboxes; false to hide them.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IDirList.put_ShowTitle(System.Boolean)">
      <summary>Show or hide the title of the directory list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bShow"> true to show the title; false to hide it.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IDirList.put_Title(System.String)">
      <summary>Change the title of the directory list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrTitle"> String containing the new title for the directory list.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IDirList.Reset">
      <summary>Go back to the default values for the directory list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IDirListEvents">
      <summary>Specifies the event handler for a displayed directory list. This is the outgoing interface for the directory list's implementation of <see cref="T:Microsoft.VisualStudio.OLE.Interop.IConnectionPoint" />. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IDirListEvents.OnChange">
      <summary>Event handler for a directory list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IDirListSite">
      <summary>Maintains the interface pointer to the parent object managing the directory list. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IDirListSite.SetSite(System.Object)">
      <summary>Sets the site, the container for the directory list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="__MIDL_0011"> Pointer to the IUnknown interface of the object containing the directory list.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IDiscoveryClientResult">
      <summary>A single result from a Web service discovery search. Member of a <see cref="T:Microsoft.VisualStudio.Shell.Interop.IDiscoveryClientResultCollection" />. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IDiscoveryClientResult.GetFileName(System.String@)">
      <summary>Returns the filename of the discovery document.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrFilename">[out] Pointer to a string containing the filename of the document.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IDiscoveryClientResult.GetReferenceTypeName(System.String@)">
      <summary>Returns the type of a referenced document in a Web discovery document.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrReferenceTypeName">[out] String containing the type of reference made in the document.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IDiscoveryClientResult.GetUrl(System.String@)">
      <summary>Returns the URL of the referenced document in the discovery document.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrUrl">[out] Pointer to the string containing the URL of the document referenced in the discovery document.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IDiscoveryClientResultCollection">
      <summary>A collection of results, <see cref="T:Microsoft.VisualStudio.Shell.Interop.IDiscoveryClientResult" /> interfaces, from a Web service discovery search. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IDiscoveryClientResultCollection.GetResult(System.Int32,Microsoft.VisualStudio.Shell.Interop.IDiscoveryClientResult@)">
      <summary>Returns a single Web discovery result.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pIndex">[in] Index of the discovery result to return.</param>
      <param name="ppIDiscoveryClientResult">[out] The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IDiscoveryClientResult" /> interface of the discovery result.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IDiscoveryClientResultCollection.GetResultCount(System.Int32@)">
      <summary>Returns the number of results in the collection of discovery results.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCount">[out] The number of discovery results in the collection.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IDiscoveryResult2">
      <summary>Downloads the results of an XML Web service discovery session. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IDiscoveryResult2.DownloadServiceDocument(System.String,System.String,Microsoft.VisualStudio.Shell.Interop.IDiscoveryClientResultCollection@)">
      <summary>Updates an output parameter with a pointer to a pointer to a Client Discovery Result Collection Object containing the results of a Web Service Discovery Session</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrDestinationPath">[in] String containing the destination path to the folder where the files are to be stored.</param>
      <param name="bstrDiscomapFileName">[in] String containing the destination path to the discomap file.</param>
      <param name="ppIDiscoveryClientResultCollection">[out] Pointer to a pointer to a <see cref="T:Microsoft.VisualStudio.Shell.Interop.IDiscoveryClientResultCollection" />.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IEnumWebServices">
      <summary>Enumerator for the Web services offered by a Web site or a project. You can get an instance of the interface using the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsWebServiceProvider.WebServices(Microsoft.VisualStudio.Shell.Interop.IEnumWebServices@)" /> method of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWebServiceProvider" /> interface. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IEnumWebServices.Clone(Microsoft.VisualStudio.Shell.Interop.IEnumWebServices@)">
      <summary>Clones this <see cref="T:Microsoft.VisualStudio.Shell.Interop.IEnumWebServices" /> interface by creating another instance.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppEnum">[out] Reference to the cloned <see cref="T:Microsoft.VisualStudio.Shell.Interop.IEnumWebServices" /> interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IEnumWebServices.Next(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsWebService[],System.UInt32@)">
      <summary>Retrieves the next group of Web service interfaces (<see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWebService" />).</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="celt">[in] Number of Web service interfaces to return, or zero to indicate a request for all of the objects.</param>
      <param name="rgelt">[out] An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWebService" /> objects. Contains <paramref name="pceltFetched" /> objects.</param>
      <param name="pceltFetched">[out] Actual number of interfaces retrieved.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IEnumWebServices.Reset">
      <summary>Returns the enumerator to its initial state.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IEnumWebServices.Skip(System.UInt32)">
      <summary>Skip over a specified number of Web service interfaces.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="celt">[in] The number of interfaces to skip.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IErrorInfo">
      <summary>Provides detailed contextual error information. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IErrorInfo.GetDescription(System.String@)">
      <summary>Returns a string describing the error.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrDescription">[out] Pointer to string describing the error.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IErrorInfo.GetGuid(System.Guid@)">
      <summary>Returns the GUID of the interface defining the error.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pGuid">[out] The GUID of the interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IErrorInfo.GetHelpContext(System.UInt32@)">
      <summary>Retrieves the Help context for the error.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pdwHelpContext">[out] Pointer to the Help context ID.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IErrorInfo.GetHelpFile(System.String@)">
      <summary>Returns the path of the Help file for information about the error.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pBstrHelpFile">[out] Pointer to a string containing the path to the Help file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IErrorInfo.GetSource(System.String@)">
      <summary>Returns the programmatic identifier (ProgID) for the class or application returning the error.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pBstrSource">[out] Pointer to a string containing the programmatic identifier.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.INTELLIPROJSTATUS">
      <summary>Specifies the status of the Intellisense project.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.INTELLIPROJSTATUS.INTELLIPROJSTATUS_CLOSE">
      <summary>The Intellisense project is closed.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.INTELLIPROJSTATUS.INTELLIPROJSTATUS_LOADCOMPLETE">
      <summary>The Intellisense project has finished loading.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.INTELLIPROJSTATUS.INTELLIPROJSTATUS_LOADING">
      <summary>The Intellisense project is currently loading.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.INTELLIPROJSTATUS.INTELLIPROJSTATUS_REFRESH">
      <summary>The Intellisense project has been refreshed.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IPerPropertyBrowsing2">
      <summary>Maps properties to their builders and executes the builders. A builder returns a value or values for a given property. An example of a builder is the style builder for a cascading stylesheet.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IPerPropertyBrowsing2.ExecuteBuilder(System.Int32,System.Guid@,System.Object,System.IntPtr,System.Object@)">
      <summary>Executes the builder for a given property and returns the value from the builder.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dispid"> [in] The dispatch ID of the property.</param>
      <param name="rguidBuilder"> [in] The GUID of the builder for the property.</param>
      <param name="pdispApp"> [in] Pointer to the dispatch interface (IDispatch) of the builder.</param>
      <param name="hwndBuilderOwner"> [in] HWND of the owner of the window the builder runs in.</param>
      <param name="pvarValue"> [in, out] Pointer to a variant containing an initial value and the returned value of the property.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IPerPropertyBrowsing2.MapPropertyToBuilder(System.Int32,System.Guid@,System.UInt32@)">
      <summary>Maps the dispatch ID of a property to a builder for the property.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dispid"> [in] The dispatch ID of the property.</param>
      <param name="pguidBuilder"> [out] Pointer to the GUID for the property's builder.</param>
      <param name="pdwType"> [out] Pointer to a value indicating the builder type (Type).</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IPersistXMLFragment">
      <summary>Used to persist non-build related data in free-form XML.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IPersistXMLFragment.InitNew(System.Guid@,System.UInt32)">
      <summary>Initializes the project extension properties and other build-independent data.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidFlavor">[in] Specifies the GUID of the project subtype.</param>
      <param name="storage">[in] Specifies the storage type used for persisting files. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._PersistStorageType" /> enumeration. The file type is either project file (.vsproj or .vbproj) or user file (.vsproj.user or .vbproj.user).</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IPersistXMLFragment.IsFragmentDirty(System.UInt32,System.Int32@)">
      <summary>Determines whether an XML fragment has changed since it was last saved to its current file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="storage">[in] Storage type of the file in which the XML is persisted. Values are taken from <see cref="T:Microsoft.VisualStudio.Shell.Interop._PersistStorageType" /> enumeration.</param>
      <param name="pfDirty">[out] true if the XML fragment changed.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IPersistXMLFragment.Load(System.Guid@,System.UInt32,System.String)">
      <summary>The project opens and reads the XML fragment and the project subtype GUID from a specified file type.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidFlavor">[in] GUID of the project subtype.</param>
      <param name="storage">[in] File storage type. Values are taken from <see cref="T:Microsoft.VisualStudio.Shell.Interop._PersistStorageType" /> enumeration. The file type is either project file (.vsproj or .vbproj) or user file (.vsproj.user or .vbproj.user).</param>
      <param name="pszXMLFragment">[in] String containing the XML fragment.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IPersistXMLFragment.Save(System.Guid@,System.UInt32,System.String@,System.Int32)">
      <summary>Base project system directs the project subtype to build the project subtype XML information and save it in the project or user file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidFlavor">[in] Project subtype GUID.</param>
      <param name="storage">[in] Storage type for the file. Values taken from <see cref="T:Microsoft.VisualStudio.Shell.Interop._PersistStorageType" /> enumeration. The file type is either project file (.vsproj or .vbproj) or user file (.vsproj.user or .vbproj.user).</param>
      <param name="pbstrXMLFragment">[out] Pointer to the path of the new document containing the XML fragment.</param>
      <param name="fClearDirty">[in] Indicates whether to clear the dirty flag after the save is complete. If true, the flag should be cleared. If false, the flag should be left unchanged.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IPreferPropertyPagesWithTreeControl">
      <summary>Causes the Property Page to display a tree control instead of tabs. </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IPropertyPageUndoString">
      <summary>Used by controls to provide an undo string for their property page settings. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IPropertyPageUndoString.GetUndoString(System.String@)">
      <summary>Returns the string to use for undoing a property setting.</summary>
      <param name="ppszUndo"> [out] On return, contains an OLE string (LPOLESTR) containing the undo string. </param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IProvideAltHTML">
      <summary>Used by a Web control to provide Alt property text and to indicate whether or not the text is editable. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IProvideAltHTML.GetAltHTML(System.String@)">
      <summary>Returns the Alt property text.</summary>
      <param name="pstrAltHTML"> [out, retval] Pointer to the string containing the Alt property text.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IProvideAltHTML.IsAltHTMLEditable(System.SByte@)">
      <summary>Indicates whether or not the Alt text is editable.</summary>
      <param name="pfIsEditable"> [out, retval] Pointer to a Boolean—true if you can edit the Alt text.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IProvidePropertyBuilder">
      <summary>Managers a builder, code that constructs the value for a property. This often takes the form of a dialog displayed by clicking an ellipsis button on the property page. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IProvidePropertyBuilder.ExecuteBuilder(System.Int32,System.String,System.Object,System.Int32,System.Object@,System.Boolean@)">
      <summary>Run the builder for a given property.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dispid"> [in] The dispatch ID of the property.</param>
      <param name="bstrGuidBldr"> [in] The GUID of the builder for the property.</param>
      <param name="pdispApp"> [in] Pointer to the dispatch interface (IDispatch) of the builder.</param>
      <param name="hwndBldrOwner"> [in] HWND of the owner of the window the builder runs in.</param>
      <param name="pvarValue"> [in, out] Pointer to a variant containing an initial value and the returned value of the property.</param>
      <param name="pfRetVal"> [out] Pointer to a Boolean indicating success (true) or failure of the builder.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IProvidePropertyBuilder.MapPropertyToBuilder(System.Int32,System.Int32@,System.String@,System.Boolean@)">
      <summary>Maps the dispatch ID of a property to a builder for the property.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dispid"> [in] The dispatch ID of the property.</param>
      <param name="pdwCtlBldType"> [in, out] Pointer to a value indicating the builder type (Type).</param>
      <param name="pbstrGuidBldr"> [in, out] Pointer to the GUID for the property's builder.</param>
      <param name="pfRetVal"> [out] Pointer to a Boolean indicating success (true) or failure of the builder.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IProvideRuntimeHTML">
      <summary>Used by an ActiveX control to provide an HTML string to its container at runtime. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IProvideRuntimeHTML.GetRuntimeHTML(System.String@)">
      <summary>Provides a runtime string of HTML from an ActiveX control.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pstrRuntimeHTML">  [out] Pointer to a string containing HTML generated by the control.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsActivityLog">
      <summary>Adds events to the IDE Activity Log. Use the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsActivityLog" /> (SID_SVsActivityLog) service to get an instance of the interface.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsActivityLog.LogEntry(System.UInt32,System.String,System.String)">
      <summary>Makes a log entry specifying the log type, the package name, and the event text.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="actType">[in] Type of log entry, a value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__ACTIVITYLOG_ENTRYTYPE" /> enumeration.</param>
      <param name="pszSource">[in] Pointer to a string containing the name of the package or component making the call.</param>
      <param name="pszDescription">[in] Pointer to a string describing the event.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsActivityLog.LogEntryGuid(System.UInt32,System.String,System.String,System.Guid)">
      <summary>Makes a log entry specifying entry type, package name, event text, and GUID to store in the event record.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="actType">[in] Type of log entry, a value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__ACTIVITYLOG_ENTRYTYPE" /> enumeration.</param>
      <param name="pszSource">[in] Pointer to a string containing the name of the package or component making the call.</param>
      <param name="pszDescription">[in] Pointer to a string describing the event.</param>
      <param name="guid">[in] A GUID to include in the event record.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsActivityLog.LogEntryGuidHr(System.UInt32,System.String,System.String,System.Guid,System.Int32)">
      <summary>Makes a log entry specifying entry type, package name, event text, a GUID to store in the event record, and an HRESULT to store in the event record.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="actType">[in] Type of log entry, a value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__ACTIVITYLOG_ENTRYTYPE" /> enumeration.</param>
      <param name="pszSource">[in] Pointer to a string containing the name of the package or component making the call.</param>
      <param name="pszDescription">[in] Pointer to a string describing the event.</param>
      <param name="guid">[in] A GUID to include in the event record.</param>
      <param name="hr">[in] An HRESULT to include in the event record.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsActivityLog.LogEntryGuidHrPath(System.UInt32,System.String,System.String,System.Guid,System.Int32,System.String)">
      <summary>Makes a log entry specifying entry type, package name, the event text, a GUID to store in the event record, an HRESULT to store in the event record and a full file path to store in the event record.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="actType">[in] Type of log entry, a value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__ACTIVITYLOG_ENTRYTYPE" /> enumeration.</param>
      <param name="pszSource">[in] Pointer to a string containing the name of the package or component making the call.</param>
      <param name="pszDescription">[in] Pointer to a string describing the event.</param>
      <param name="guid">[in] A GUID to include in the event record.</param>
      <param name="hr">[in] An HRESULT to include in the event record.</param>
      <param name="pszPath">[in] A string containing a full file path to include in the event record.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsActivityLog.LogEntryGuidPath(System.UInt32,System.String,System.String,System.Guid,System.String)">
      <summary>Makes a log entry specifying entry type, package name, event text, a GUID to store in the event record, and a full file path to store in the event record.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="actType">[in] Type of log entry, a value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__ACTIVITYLOG_ENTRYTYPE" /> enumeration.</param>
      <param name="pszSource">[in] Pointer to a string containing the name of the package or component making the call.</param>
      <param name="pszDescription">[in] Pointer to a string describing the event.</param>
      <param name="guid">[in] A GUID to include in the event record.</param>
      <param name="pszPath">[in] A string containing a full file path to include in the event record.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsActivityLog.LogEntryHr(System.UInt32,System.String,System.String,System.Int32)">
      <summary>Makes a log entry specifying entry type, package name, event text, and an HRESULT to store in the event record.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="actType">[in] Type of log entry, a value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__ACTIVITYLOG_ENTRYTYPE" /> enumeration.</param>
      <param name="pszSource">[in] Pointer to a string containing the name of the package or component making the call.</param>
      <param name="pszDescription">[in] Pointer to a string describing the event.</param>
      <param name="hr">[in] An HRESULT to include in the event record.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsActivityLog.LogEntryHrPath(System.UInt32,System.String,System.String,System.Int32,System.String)">
      <summary>Makes a log entry specifying entry type, package name, event text, an HRESULT to store in the event record, and a full file path to store in the event record.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="actType">[in] Type of log entry, a value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__ACTIVITYLOG_ENTRYTYPE" /> enumeration.</param>
      <param name="pszSource">[in] Pointer to a string containing the name of the package or component making the call.</param>
      <param name="pszDescription">[in] Pointer to a string describing the event.</param>
      <param name="hr">[in] An HRESULT to include in the event record.</param>
      <param name="pszPath">[in] A string containing a full file path to include in the event record.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsActivityLog.LogEntryPath(System.UInt32,System.String,System.String,System.String)">
      <summary>Makes a log entry specifying entry type, package name, event text, and a full file path to store in the event record.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="actType">[in] Type of log entry, a value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__ACTIVITYLOG_ENTRYTYPE" /> enumeration.</param>
      <param name="pszSource">[in] Pointer to a string containing the name of the package or component making the call.</param>
      <param name="pszDescription">[in] Pointer to a string describing the event.</param>
      <param name="pszPath">[in] A string containing a full file path to include in the event record.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsAddNewWebProjectItemDlg">
      <summary>Displays the AddItem dialog with a listview control and specific Web-related controls. Use in Web project implementations. You can get an instance of the interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsAddProjectItemDlg" /> (SID_SVsAddProjectItemDlg) service. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAddNewWebProjectItemDlg.AddNewWebProjectItemDlg(System.UInt32,System.Guid@,Microsoft.VisualStudio.Shell.Interop.IVsProject,System.String,System.String,System.String,System.String,System.UInt32)">
      <summary>Displays an Add Item dialog in a web project implementation.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="itemidLoc">[in] Hierarchy tem to add the dialog to. A VSITEMID uniquely identifies a node within an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" />.</param>
      <param name="rguidProject">[in] The GUID of project.</param>
      <param name="pProject">[in] The project's <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProject" /> interface.</param>
      <param name="pszDlgTitle">[in] Dialog box caption (can be null).</param>
      <param name="lpszHelpTopic">[in] Name of help topic to use for the dialog.</param>
      <param name="lpszLanguage">[in] Directory (language) to select by default.</param>
      <param name="lpszSelect">[in] Item to select.</param>
      <param name="options">[in] Options to set on the dialog box. Bit array using flag values from <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSADDNEWWEBITEMOPTIONS" />.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsAggregatableProject">
      <summary>Implemented by a project that supports adding project subtypes through aggregation.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAggregatableProject.GetAggregateProjectTypeGuids(System.String@)">
      <summary>Gets the list of project type GUIDs that make up the aggregate project. This method should be delegated to the innermost project within the system of aggregated project subtypes.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrProjTypeGuids">[out, retval] Pointer to a string containing the project type GUIDs.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAggregatableProject.InitializeForOuter(System.String,System.String,System.String,System.UInt32,System.Guid@,System.IntPtr@,System.Int32@)">
      <summary>Called by the owner, the outer project subtype, to have the owned project, the inner project subtype, to do its initialization work.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszFilename">[in] Project file name of the project to be initialized.</param>
      <param name="pszLocation">[out] Location of the initialized project file.</param>
      <param name="pszName">[in] Pointer to a null-terminated string containing the name.</param>
      <param name="grfCreateFlags">[in] Controls how a project is created or opened. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSCREATEPROJFLAGS" /> enumeration.</param>
      <param name="iidProject">[in] Identifier of the interface of the returned <paramref name="ppvProject" />.</param>
      <param name="ppvProject">[out, iid_is(iidProject)] Pointer to the interface specified by <paramref name="iidProject" />.</param>
      <param name="pfCanceled">[out] Pointer to a flag where true indicates canceled.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAggregatableProject.OnAggregationComplete">
      <summary>Indicates that aggregation is complete.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAggregatableProject.SetAggregateProjectTypeGuids(System.String)">
      <summary>This method updates the list of GUIDs that are persisted in the project file of the base project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="lpstrProjTypeGuids">String containing the project type GUIDs.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAggregatableProject.SetInnerProject(System.Object)">
      <summary>This method is used to pass in the pointer to the inner IUnknown of the project subtype that is being aggregated.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="punkInner">[in] Pointer to the IUnknown of the inner project subtype.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsAggregatableProjectFactory">
      <summary>Creates a project type that supports aggregation. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAggregatableProjectFactory.GetAggregateProjectType(System.String,System.String@)">
      <summary>Returns a string containing a list of project type GUIDs to aggregate to create an instance of this project. It should return at least one GUID—the project type GUID for itself. This method is expected to get the list of GUIDs from the specified file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszFilename">[in] The name of the project file containing the list of project type GUIDs.</param>
      <param name="pbstrProjTypeGuid">[out] Pointer to a string containing a semi-colon delimited list of the project type GUIDs, ordered from outer to the inner project subtype.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAggregatableProjectFactory.PreCreateForOuter(System.Object,System.Object@)">
      <summary>Called by the owner or outer project subtype so that the owned or inner project subtype can create a version of itself that can be aggregated.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="punkOuter">[in] Pointer to the outer IUnknown interface.</param>
      <param name="ppunkProject">[out] Pointer to the inner or owned project subtype IUnknown interface.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsAssemblyNameUnification">
      <summary>Returns the name of the unified assembly based on the simple and full names the loader uses, and the .NET framework assemblies list (FrameworkList.xml). Use the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsAssemblyNameUnification" /> (SID_SvsAssemblyNameUnification) service to get an instance of the interface. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAssemblyNameUnification.GetUnifiedAssemblyName(System.String,System.String,System.String,System.String@)">
      <summary>Returns the name of the unified assembly.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="wszFrameworkDirectory">[in] String containing the directory of the .NET Framework assemblies list, Framework.xml.</param>
      <param name="wszSimpleAssemblyName">[in] String containing the simple assembly name.</param>
      <param name="wszFullAssemblyName">[in] String containing the full assembly name.</param>
      <param name="pbstrUnifiedAssemblyName">[out] String containing the unified assembly name.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsAsynchOpenFromScc">
      <summary>This interface supports asynchronous loading of projects from source control. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAsynchOpenFromScc.IsLoadingContent(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.Int32@)">
      <summary>This method determines if loading is complete for a solution or project being loaded asynchronously.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy">[in] The solution or project hierarchy to check loading for.</param>
      <param name="pfIsLoading">[out] Returns nonzero (TRUE) if the hierarchy's contents are still being loaded from source control. Otherwise, returns zero (FALSE), indicating that loading is complete.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAsynchOpenFromScc.LoadProject(System.String)">
      <summary>This method begins loading the specified project asynchronously.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="lpszProjectPath">[in] Physical path to the project to be loaded from source control.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAsynchOpenFromScc.LoadProjectAsynchronously(System.String,System.Int32@)">
      <summary>This method determines whether a specified project must be loaded asynchronously.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="lpszProjectPath">[in] Physical path to the specified project.</param>
      <param name="pReturnValue">[out] Returns nonzero (true) if the project must be loaded asynchronously. Otherwise, returns zero (false) if the project can be loaded synchronously.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsAsynchOpenFromSccProjectEvents">
      <summary>Provides progress information during asynchronous loading of a project or solution from source control. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAsynchOpenFromSccProjectEvents.OnFilesDownloaded(System.Int32,System.String[])">
      <summary>Called during an asynchronous load to indicate one or more files have been downloaded.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.If an error is returned, the source control package may cancel the load process if it so chooses (typically, if this method returns an error, something catastrophic has happened and the load should probably not continue).</returns>
      <param name="cFiles">[in] Number of file names that are in the <paramref name="rgpszFullPaths" /> array. This value should always be greater than 0.</param>
      <param name="rgpszFullPaths">[in] Array of physical paths of files that have been successfully loaded so far.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAsynchOpenFromSccProjectEvents.OnLoadComplete">
      <summary>Called when an asynchronous load is done.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.A source control package does not typically expect this method to return an error code, since there is nothing the source control package can do about the error once the load is complete.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsAsynchOpenFromSccProjectEvents.OnLoadFailed">
      <summary>Called when downloading of project content fails.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsBrowseComponentSet">
      <summary>Provides the data contained in the browse component set.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBrowseComponentSet.CreateNavInfo(System.Guid@,Microsoft.VisualStudio.Shell.Interop.SYMBOL_DESCRIPTION_NODE[],System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsNavInfo@)">
      <summary>Creates <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> for a symbol defined in the <paramref name="rgSymbolNodes" /> array of symbols.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidLib">[in]The <see cref="T:System.Guid" /> that identifies the registered library. For more information, see vsshell80.idl, VS Browse Libraries.</param>
      <param name="rgSymbolNodes">[in] An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.SYMBOL_DESCRIPTION_NODE" /> objects describing each node in the tree.</param>
      <param name="ulcNodes">[in] The number of objects in the <paramref name="rgSymbolNodes" /> array.</param>
      <param name="ppNavInfo">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> that represents the navigation information of a symbol in the hierarchical tree of symbols.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBrowseComponentSet.get_ChildListOptions(System.UInt32@)">
      <summary>Returns the options for the child list of a symbol. The list is described by the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2" /> interface.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pdwOptions">One value or a combination of <see cref="T:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_OPTIONS" /> values.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBrowseComponentSet.get_ComponentsListOptions(System.UInt32@)">
      <summary>Returns the options for the list of components.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pdwOptions">One value or a combination of <see cref="T:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_OPTIONS" /> values.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBrowseComponentSet.GetList2(System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2[],Microsoft.VisualStudio.Shell.Interop.IVsObjectList2,Microsoft.VisualStudio.Shell.Interop.IVsObjectList2@)">
      <summary>Returns the requested list of symbols.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ListType">[in] One of the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTTYPE2" /> values.</param>
      <param name="flags">[in] One of the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTFLAGS" /> values.</param>
      <param name="pobSrch">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2" /> that describes the search criteria.</param>
      <param name="pExtraListToCombineWith">A <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2" /> list of symbols that is a part of the resulting <paramref name="ppIVsObjectList2 " />list.</param>
      <param name="ppIVsObjectList2">[out]Returns a <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2" /> list of requested items.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBrowseComponentSet.GetSupportedCategoryFields2(System.Int32,System.UInt32@)">
      <summary>Returns the category values supported by the component set for a specified category.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="Category">A category type that the component set supports. One value or a combination of the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_CATEGORY2" /> values.</param>
      <param name="pgrfCatField">[out] A category field. See Remarks for possible values.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBrowseComponentSet.put_ChildListOptions(System.UInt32)">
      <summary>Set the options for the child <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2" /> list of a symbol in the hierarchical tree of symbols.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwOptions">One value or a combination of <see cref="T:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_OPTIONS" /> values.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBrowseComponentSet.put_ComponentsListOptions(System.UInt32)">
      <summary>Sets the options for the list of components.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwOptions">One value or a combination of <see cref="T:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_OPTIONS" /> values.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBrowseComponentSet.UpdateCounter(System.UInt32@)">
      <summary>Returns the current state of the library counter. Indicates that the library contents have changed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCurUpdate">The current state of the update counter.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsBrowseContainersList">
      <summary>Provides information about a container in a list of containers or finds the container of a component. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBrowseContainersList.FindContainer(Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA[],System.UInt32@)">
      <summary>Finds a container of a component.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pData">[in]  Pointer to a <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA" /> structure describing the component. </param>
      <param name="pulIndex">[out]  Index of the container in an array of components.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBrowseContainersList.GetContainerData(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA[])">
      <summary>Provides data about a component found using <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsBrowseContainersList.FindContainer(Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA[],System.UInt32@)" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ulIndex">[in]  Index of the container returned by <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsBrowseContainersList.FindContainer(Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA[],System.UInt32@)" />.</param>
      <param name="pData">[out]  A <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA" /> structure describing the component.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsBrowseObject">
      <summary>Allows the retrieval of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> object or the VSITEMID given the project configuration browse object. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBrowseObject.GetProjectItem(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy@,System.UInt32@)">
      <summary>Maps back to the hierarchy or project item object corresponding to the browse object.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHier">[out] Pointer to the hierarchy object.</param>
      <param name="pItemid">[out] Pointer to the project item. </param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsBrowseProjectLocation">
      <summary>Displays a dialog to find the location for a new project. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBrowseProjectLocation.BrowseProjectLocation(System.String,System.String@)">
      <summary>Presents a browse dialog box for finding the location of a new project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszStartDirectory"> [in] String containing the starting directory.</param>
      <param name="pbstrProjectLocation"> [out] String containing the full path to the chosen location.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsBuildableProjectCfg2">
      <summary>Provides information about a project's build configuration and executes the build.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBuildableProjectCfg2.GetBuildCfgProperty(System.Int32,System.Object@)">
      <summary>Retrieve the value of a given build configuration property.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="propid">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSBLDCFGPROPID" /> enumeration value designating the property value to return.</param>
      <param name="pvar">[out] Pointer to a variant containing the property value.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBuildableProjectCfg2.StartBuildEx(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsOutputWindowPane,System.UInt32)">
      <summary>Requests that a project begin building.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwBuildId">[in] Integer value identifying the build.</param>
      <param name="pIVsOutputWindowPane">[in] Pointer to an IVsOutputWindowPane interface for the output window.</param>
      <param name="dwOptions">[in] Bit flags indicating build options. Dependent on the specific implementation.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsBuildMacroInfo">
      <summary>Enables macro evaluation by retrieving, from the project, the string associated with a macro name. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBuildMacroInfo.GetBuildMacroValue(System.String,System.String@)">
      <summary>Retrieves the value or body of a macro based on the macro's name.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrBuildMacroName">[in] String containing the name of the macro.</param>
      <param name="pbstrBuildMacroValue">[out] String containing the value or body of the macro.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsBuildPropertyStorage">
      <summary>Gets and sets MSBuild properties in the project file.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBuildPropertyStorage.GetItemAttribute(System.UInt32,System.String,System.String@)">
      <summary>Retrieves the value of an attribute for a hierarchy item identified by VSITEMID.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="item">[in] The VSITEMID for the element.</param>
      <param name="pszAttributeName">[in] String containing the name of the attribute.</param>
      <param name="pbstrAttributeValue">[out] String containing the value of the attribute.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBuildPropertyStorage.GetPropertyValue(System.String,System.String,System.UInt32,System.String@)">
      <summary>Gets an MSBuild property value.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszPropName">[in] Name of the build property.</param>
      <param name="pszConfigName">[in] Name of the build configuration.</param>
      <param name="storage">[in] Storage type for file persistence. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._PersistStorageType" /> enumeration.</param>
      <param name="pbstrPropValue">[out, retval] Specifies the value of the MSBuild property object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBuildPropertyStorage.RemoveProperty(System.String,System.String,System.UInt32)">
      <summary>Used by a project subtype to remove an MSBuild property.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszPropName">[in] Name of the build property to remove.</param>
      <param name="pszConfigName">[in] Name of the build configuration.</param>
      <param name="storage">[in] Storage type for file persistence. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._PersistStorageType" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBuildPropertyStorage.SetItemAttribute(System.UInt32,System.String,System.String)">
      <summary>Sets the value of an attribute for a hierarchy item identified by VSITEMID.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="item">[in] The VSITEMID for the element.</param>
      <param name="pszAttributeName">[in] String containing the name of the attribute.</param>
      <param name="pszAttributeValue">[in] String containing the value of the attribute.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsBuildPropertyStorage.SetPropertyValue(System.String,System.String,System.UInt32,System.String)">
      <summary>Used by a project subtype to set an MSBuild property value.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszPropName">[in] Name of the build property.</param>
      <param name="pszConfigName">[in] Name of the build configuration.</param>
      <param name="storage">[in] Storage type for file persistence. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._PersistStorageType" /> enumeration.</param>
      <param name="pszPropValue">[in] Specifies the MSBuild property value.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsCallBrowser">
      <summary>Manipulates the Call Browser for debugging. You can get an instance of this interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsCallBrowser" /> (SID_SVsCallBrowser) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCallBrowser.CanCreateNewInstance(System.Int32@)">
      <summary>Returns true if you can create a new instance of the Call Browser.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfOK">[out] Boolean. Set to true if you can create a new instance of the CallBrowser.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCallBrowser.SetRootAtNavInfo(System.Int32,Microsoft.VisualStudio.Shell.Interop.IVsNavInfo)">
      <summary>Sets the root of the displayed calls to a given navigation point.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="cbMode">[in] Browser mode to use. A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSCALLBROWSERMODE" /> enumeration.</param>
      <param name="pNavInfo">[in] The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> interface containing the information to use.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCallBrowser.SetRootAtSymbol(System.Int32,System.Guid@,Microsoft.VisualStudio.Shell.Interop.SYMBOL_DESCRIPTION_NODE[],System.UInt32)">
      <summary>Displays the contents of a library in the Call Browser.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="cbMode">[in] Browser mode to use. A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSCALLBROWSERMODE" /> enumeration.</param>
      <param name="guidLib">[in] The GUID of the library to use.</param>
      <param name="rgSymbolNodes">[in] An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.SYMBOL_DESCRIPTION_NODE" /> structures containing the nodes to use in the browser.</param>
      <param name="ulcNodes">[in] Number of nodes returned—the length of <paramref name="rgSymbolNodes" />.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsCfgBrowseObject">
      <summary>Returns the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsCfg" /> object given the project configuration browse object. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCfgBrowseObject.GetCfg(Microsoft.VisualStudio.Shell.Interop.IVsCfg@)">
      <summary>Maps back to the configuration corresponding to the browse object.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppCfg">[out] Pointer to the configuration object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCfgBrowseObject.GetProjectItem(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy@,System.UInt32@)">
      <summary>Maps back to the hierarchy or project item object corresponding to the browse object.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHier">[out] Pointer to the hierarchy object.</param>
      <param name="pItemid">[out] Pointer to the project item. </param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsCodeDefView">
      <summary>Manipulates the Code Definition View window. You can get an instance of the interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsCodeDefView" /> (SID_SVsCodeDefView) service. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCodeDefView.ForceIdleProcessing">
      <summary>Forces idle time processing in a VsPackage.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCodeDefView.GetRefreshDelay(System.UInt32@)">
      <summary>Gets the value of the refresh delay.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pcMilliseconds">[out] Current value for the refresh delay, in milliseconds.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCodeDefView.HideWindow">
      <summary>Hides the Code Definition tool window</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCodeDefView.IsCodeDefView(Microsoft.VisualStudio.TextManager.Interop.IVsTextView,System.Int32@)">
      <summary>Check whether a given IVsTextView is owned by the Code Definition tool window.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pIVsTextView">[in] A <see cref="T:Microsoft.VisualStudio.TextManager.Interop.IVsTextView" /> interface to the view.</param>
      <param name="pfIsCodeDefView">[out] true if the view is owned by the Code Definition tool window; otherwise false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCodeDefView.IsVisible">
      <summary>Indicates whether the Code Definition tool window is visible or hidden.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCodeDefView.SetContext(Microsoft.VisualStudio.Shell.Interop.IVsCodeDefViewContext)">
      <summary>Sets the context of the CodeDefinition tool window.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pIVsCodeDefViewContext">[in] Pointer to the context <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsCodeDefViewContext" /> interface) to use.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCodeDefView.ShowWindow">
      <summary>Shows the CodeDefinition tool window.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsCodeDefViewContext">
      <summary>Sets the context for displaying the Code Definition tool window. The context includes things such as file name, and line and column numbers.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCodeDefViewContext.GetCol(System.UInt32,System.UInt32@)">
      <summary>Retrieves the column position of an item based on its index in a list of context items.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="iItem">[in] Index of the context item.</param>
      <param name="piCol">[out] Column position of the item in the CodeDefinition tool window.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCodeDefViewContext.GetCount(System.UInt32@)">
      <summary>Returns a count of the context items.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pcItems">The number of context items in the project. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCodeDefViewContext.GetFileName(System.UInt32,System.String@)">
      <summary>Retrieves the file for an item based on its index in a list of context items.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="iItem">[in] Index of the context item. </param>
      <param name="pbstrFilename">[out] String containing the file name for the item.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCodeDefViewContext.GetLine(System.UInt32,System.UInt32@)">
      <summary>Retrieves the line position of an item based on its index in a list of context items.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="iItem">[in] Index of the context item.</param>
      <param name="piLine">[out] Line number of the item in the Code Definition tool window. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCodeDefViewContext.GetSymbolName(System.UInt32,System.String@)">
      <summary>Retrieves the symbol name of an item based on its index in a list of context items.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="iItem">[in] Index of the context item.</param>
      <param name="pbstrSymbolName">[out] String containing the name of the symbol.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsCombinedBrowseComponentSet">
      <summary>Combines multiple component sets.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCombinedBrowseComponentSet.AddSet(Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet)">
      <summary>Adds a new component set.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pSet">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet" /> that represents the added set. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCombinedBrowseComponentSet.CreateNavInfo(System.Guid@,Microsoft.VisualStudio.Shell.Interop.SYMBOL_DESCRIPTION_NODE[],System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsNavInfo@)">
      <summary>Creates <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> for a symbol defined in the <paramref name="rgSymbolNodes" /> array of symbols.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidLib">[in]The <see cref="T:System.Guid" /> that identifies the registered library. For more information, see vsshell80.idl, VS Browse Libraries.</param>
      <param name="rgSymbolNodes">[in] An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.SYMBOL_DESCRIPTION_NODE" /> objects describing each node in the tree.</param>
      <param name="ulcNodes">[in] The number of objects in the <paramref name="rgSymbolNodes" /> array.</param>
      <param name="ppNavInfo">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> that represents the navigation information of a symbol in the hierarchical tree of symbols.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCombinedBrowseComponentSet.get_ChildListOptions(System.UInt32@)">
      <summary>Returns the options for the child list of a symbol. The list is described by the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2" /> interface.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pdwOptions">One value or a combination of <see cref="T:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_OPTIONS" /> values.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCombinedBrowseComponentSet.get_ComponentsListOptions(System.UInt32@)">
      <summary>Returns the options for the list of components.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pdwOptions">One value or a combination of <see cref="T:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_OPTIONS" /> values.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCombinedBrowseComponentSet.GetList2(System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2[],Microsoft.VisualStudio.Shell.Interop.IVsObjectList2,Microsoft.VisualStudio.Shell.Interop.IVsObjectList2@)">
      <summary>Returns the requested list of symbols.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ListType">[in] One of the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTTYPE2" /> values.</param>
      <param name="flags">[in] One of the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTFLAGS" /> values.</param>
      <param name="pobSrch">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2" /> that describes the search criteria.</param>
      <param name="pExtraListToCombineWith">A <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2" /> list of symbols that is a part of the resulting <paramref name="ppIVsObjectList2 " />list.</param>
      <param name="ppIVsObjectList2">[out]Returns a <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2" /> list of requested items.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCombinedBrowseComponentSet.GetSetAt(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet@)">
      <summary>Identifies a set in the combined component set.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ulIndex">The zero-based index identifying the set in the array of component sets.</param>
      <param name="ppSet">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet" /> that represents the requested set.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCombinedBrowseComponentSet.GetSetCount(System.UInt32@)">
      <summary>Returns the number of the sets in the combined set.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pulCount">The number of the sets in the combined set. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCombinedBrowseComponentSet.GetSupportedCategoryFields2(System.Int32,System.UInt32@)">
      <summary>Returns the category values supported by the combined component set for a specified category.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="Category">A category type that the combined component set supports. One value or a combination of the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_CATEGORY2" /> values.</param>
      <param name="pgrfCatField">[out] A category field. See Remarks for possible values.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCombinedBrowseComponentSet.put_ChildListOptions(System.UInt32)">
      <summary>Sets the options for the child <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2" /> list of a symbol in the hierarchical tree of symbols.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwOptions">One value or a combination of <see cref="T:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_OPTIONS" /> values.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCombinedBrowseComponentSet.put_ComponentsListOptions(System.UInt32)">
      <summary>Sets the options for the list of components.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwOptions">One value or a combination of <see cref="T:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_OPTIONS" /> values.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCombinedBrowseComponentSet.RemoveAllSets">
      <summary>Removes all sets from the combined component set.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCombinedBrowseComponentSet.RemoveOwnerSets(System.Object)">
      <summary>Removes the sets identified by the owner.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pOwner">An object that implements <see cref="T:VSLangProj.VSProject" />. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCombinedBrowseComponentSet.RemoveSetAt(System.UInt32)">
      <summary>Removes a set from the combined component set. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ulIndex">The zero-based index identifying the set in the array of component sets.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCombinedBrowseComponentSet.UpdateCounter(System.UInt32@)">
      <summary>Returns the current state of the combined component set counter. Indicates that the set contents have changed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCurUpdate">The current state of the update counter.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsCommandWindow2">
      <summary>Sets the mode of the Command Window. You can get an instance of this interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsCommandWindow" /> (SID_SVsCommandWindow) service. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCommandWindow2.SetMode(System.UInt32)">
      <summary>Sets the mode of the Command Window tool window. Implemented by the environment.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="mode">[in] A value of type COMMANDWINDOWMODE indicating whether the command window should be set to immediate or command mode.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsCommandWindowsCollection">
      <summary>Manipulates windows in the commandwindows list that Visual Studio maintains. You can get an instance of the interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsCommandWindowsCollection" /> (SID_SVsCommandWindowsCollection) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCommandWindowsCollection.Close(System.UInt32)">
      <summary>Closes the specified command window.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="uCookie">[in] A cookie, returned by <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsCommandWindowsCollection.Create(System.UInt32,System.UInt32,System.Int32,System.UInt32@)" />, specifying the window to close.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCommandWindowsCollection.CloseAllCommandWindows">
      <summary>Closes all command windows.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCommandWindowsCollection.Create(System.UInt32,System.UInt32,System.Int32,System.UInt32@)">
      <summary>Creates a new command window in the specified mode.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="mode">[in] A value of type <see cref="T:Microsoft.VisualStudio.Shell.Interop.__COMMANDWINDOWMODE2" /> indicating the mode, immediate or command, in which to open the window.</param>
      <param name="dwToolWindowId">[in] An identifier for the window. Use -1 to have the service choose the ID.</param>
      <param name="fShow">[in] Specifies if the command window should be visible when opened or created. </param>
      <param name="puCookie">[out] A cookie for the command window. Use when closing the window with <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsCommandWindowsCollection.Close(System.UInt32)" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCommandWindowsCollection.GetCommandWindowFromCookie(System.UInt32,System.Object@)">
      <summary>Retrieves a command window interface for the specified cookie.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="uCookie">[in] A cookie, returned by <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsCommandWindowsCollection.Create(System.UInt32,System.UInt32,System.Int32,System.UInt32@)" />, specifying the window.</param>
      <param name="ppunkCmdWindow">[out] A pointer to a pointer to the IUnknown interface for the command window.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCommandWindowsCollection.GetCommandWindowFromMode(System.UInt32,System.Object@)">
      <summary>Retrieves a command window interface for the specified mode.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="mode">[in] A value of type <see cref="T:Microsoft.VisualStudio.Shell.Interop.__COMMANDWINDOWMODE2" />.</param>
      <param name="ppunkCmdWindow">[out] A pointer to a pointer to the IUnknown interface for the command window.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCommandWindowsCollection.IsOutputWaiting(System.UInt32)">
      <summary>Determines if there is output to render for the specified window.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. If the window is not in the CWM_SYSTEM mode, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_FALSE" />. For more information about CWM_SYSTEM, see <see cref="T:Microsoft.VisualStudio.Shell.Interop.COMMANDWINDOWMODE" />.</returns>
      <param name="uCookie">[in] A cookie, returned by <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsCommandWindowsCollection.Create(System.UInt32,System.UInt32,System.Int32,System.UInt32@)" />, specifying the window.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCommandWindowsCollection.OpenExistingOrCreateNewCommandWindow(System.UInt32,System.Int32,System.UInt32@)">
      <summary>Opens an existing command window or creates a new one.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="mode">[in] A value of type <see cref="T:Microsoft.VisualStudio.Shell.Interop.__COMMANDWINDOWMODE2" />.</param>
      <param name="fShow">[in] Specifies if the command window should be visible when opened or created. </param>
      <param name="puCookie">[out] A cookie for the command window. Use when closing the window with <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsCommandWindowsCollection.Close(System.UInt32)" />.and in other methods of this interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCommandWindowsCollection.SetRunningCommandWindowCommand(System.UInt32,System.Int32)">
      <summary>Indicates whether a command window is running (or not running) a command.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
      <param name="uCookie">[in] A cookie, returned by <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsCommandWindowsCollection.Create(System.UInt32,System.UInt32,System.Int32,System.UInt32@)" />, specifying the window.</param>
      <param name="fCmdWin">[in] A Boolean value—true indicates the command window is running a command; false indicates no command is currently running.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsComponentEnumeratorFactory3">
      <summary>Provides an enumerator for components, assembly paths, or a list of directories containing references. You can get an instance of the interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SCompEnumService" /> (SID_SCompEnumService) service. This interface extends the functionality of IVsComponentEnumeratorFactory2 by creating an enumerator that also returns runtime information. It does not, however, inherit from IVsComponentEnumeratorFactory2. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsComponentEnumeratorFactory3.GetComponentsOfPathEx(System.String,System.Int32,System.Int32,System.UInt32,System.String,Microsoft.VisualStudio.Shell.Interop.IEnumComponents@)">
      <summary>Provides an enumerator for all of the components in a package.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrMachineName"> [in] Reserved, must be null.</param>
      <param name="lEnumType">  [in] Long integer containing the enumeration type. The value for this is from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.CompEnum" /> enumeration.</param>
      <param name="bForceRefresh"> [in] Reserved, must be false.</param>
      <param name="grfFlags"> [in] Bit flags. Values taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSCOMPENUMEXFLAGS" /> enumeration.</param>
      <param name="bstrPath"> [in] String containing the path to the components.</param>
      <param name="pEnumerator"> [out] Pointer to an enumerator object. This returns the list of components. The list can be either COM-components, Visual Studio assemblies, or a list of directories in which Visual Studio looks for references. The type of components listed is determined by <paramref name="lEnumType" />.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsComponentSelectorDlg2">
      <summary>Manages references to components of various types within the project. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsComponentSelectorDlg2.ComponentSelectorDlg2(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsComponentUser,System.UInt32,System.IntPtr[],System.String,System.String,System.UInt32@,System.UInt32@,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORTABINIT[],System.Guid@,System.String,System.String@)">
      <summary>Displays Select Component Dialog and returns selected components.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="grfFlags">[in] Component selection flags taken from the VSCOMPSELFLAGS2 enumerator.</param>
      <param name="pUser">[in] Interface on which AddComponent will be called.</param>
      <param name="cComponents">[in] Number of components in the <paramref name="rgpcsdComponents" /> array.</param>
      <param name="rgpcsdComponents">[in] Prepopulation of Selected Components. Can be NULL. User has the ability to remove any of these components from the list.</param>
      <param name="lpszDlgTitle">[in] Dialog box caption (null == "Select component").</param>
      <param name="lpszHelpTopic">[in] F1 help topic (null == "VS.ComponentPicker")</param>
      <param name="pxDlgSize">[in,out] 0 to use default.</param>
      <param name="pyDlgSize">[in,out] 0 to use default.</param>
      <param name="cTabInitializers">[in] Number of tabs.</param>
      <param name="rgcstiTabInitializers">[in] Show order of tabs and their initialization info.</param>
      <param name="pguidStartOnThisTab">[in,out] Tab to show when the dialog starts up</param>
      <param name="pszBrowseFilters">[in] List of filters to use in 'Browse...' dialog</param>
      <param name="pbstrBrowseLocation">[in,out]Directory (initial/return value) to start the 'Browse...' dialog in</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsConfigurationManagerDlg">
      <summary>Displays the Configuration Manager dialog box. You can get an instance of the interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsConfigurationManagerDlg" /> (SID_SVsConfigurationManagerDlg) service. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsConfigurationManagerDlg.ShowConfigurationManagerDlg">
      <summary>Shows the ConfigurationManager dialog box.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsContextualIntellisenseFilter">
      <summary>Filters Intellisense items to control whether or not Intellisense help appears. You can get an instance of the interface from the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsContextualIntellisenseFilterProvider.GetFilter(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,Microsoft.VisualStudio.Shell.Interop.IVsContextualIntellisenseFilter@)" /> method of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsContextualIntellisenseFilterProvider" /> interface. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsContextualIntellisenseFilter.Close">
      <summary>Ends Intellisense filtering.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsContextualIntellisenseFilter.Initialize(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)">
      <summary>Initializes the filter to use a particular hierarchy.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy"> [in] Pointer to the IVsHierarchy interface to filter against.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsContextualIntellisenseFilter.IsMemberVisible(System.String,System.Int32@)">
      <summary>Indicates whether or not the member is visible.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="szMemberSignature"> [in] String containing the full name of the member to check.</param>
      <param name="pfVisible"> [out] Pointer to a Boolean. Set to true if the member is visible.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsContextualIntellisenseFilter.IsTypeVisible(System.String,System.Int32@)">
      <summary>Indicates whether or not the type is visible.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
      <param name="szTypeName"> [in] String containing the full name of the type to check.</param>
      <param name="pfVisible"> [out] Pointer to a Boolean. Set to true if the member is visible.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsContextualIntellisenseFilterProvider">
      <summary>Provides a filter for Intellisense items based on project hierarchy information. You can get in instance of the interface from the Device Configuration (DevCfg). </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsContextualIntellisenseFilterProvider.GetFilter(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,Microsoft.VisualStudio.Shell.Interop.IVsContextualIntellisenseFilter@)">
      <summary>Returns an Intellisense filter for a given projec hierarchy.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy"> [in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface to use in configuring the Intellisense filter.</param>
      <param name="ppFilter"> [out] Pointer to an Intellisense filter, an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsContextualIntellisenseFilter" /> interface.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsCoTaskMemFreeMyStrings">
      <summary>Used in association with certain other interfaces to indicate that strings returned from those interfaces should be freed by the caller. </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsCreateAggregateProject">
      <summary>Called by a project type that supports aggregation.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsCreateAggregateProject.CreateAggregateProject(System.String,System.String,System.String,System.String,System.UInt32,System.Guid@,System.IntPtr@)">
      <summary>This method is implemented by the environment to create an aggregate project, which in turn creates a system of aggregate vsiptecflavors.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszProjectTypeGuids">[in] List of GUIDs in a string that specifies all the project types to aggregate together to create a single project. This is an ordered list from the outer-most vsiptecflavors to the inner-most vsiptecflavors.</param>
      <param name="pszFilename">[in] Pointer to a null-terminated string containing the project filename.</param>
      <param name="pszLocation">[in] Pointer to the path specifying the location for the new aggregate project.</param>
      <param name="pszName">[in] Pointer to the new aggregate project name. This parameter is used only when <see cref="F:Microsoft.VisualStudio.Shell.Interop.__VSCREATEPROJFLAGS.CPF_CLONEFILE" /> is specified for the <paramref name="grfCreateFlags" /> parameter; otherwise it is null.</param>
      <param name="grfCreateFlags">[in] Controls how a project is created or opened. Values are taken from <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSCREATEPROJFLAGS" /> and <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSCREATEPROJFLAGS2" />.</param>
      <param name="iidProject">[in] Interface identifier of the returned <paramref name="ppvProject" />. This value can be iid_NULL to specify no return</param>
      <param name="ppvProject">[out, iid_is(iidProject)] Pointer to the newly created aggregated project.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsDataEnvironment">
      <summary>Provides an interface to data services, such as database connections. You can use the interface to support Web services browsing. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDataEnvironment.Dispose">
      <summary>Provides a method for implementers to execute code before the interface is released.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDataEnvironment.Initialize(Microsoft.VisualStudio.OLE.Interop.IServiceProvider)">
      <summary>Initialize the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDataEnvironment" /> interface with a specific <see cref="T:Microsoft.VisualStudio.OLE.Interop.IServiceProvider" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pServiceProvider">  Pointer to an <see cref="T:Microsoft.VisualStudio.OLE.Interop.IServiceProvider" /> to use in initializing the interface.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg2">
      <summary>Supports Debug Launch (F5 command). Extends <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg" /> to provide a method call (<see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg2.OnBeforeDebugLaunch(System.UInt32)" />) before launching the debugger. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg2.DebugLaunch(System.UInt32)">
      <summary>Starts the debugger. Inherited from <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="grfLaunch"> [in] Flags that determine the conditions under which to start the debugger. For valid <paramref name="grfLaunch" /> values, see <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSDBGLAUNCHFLAGS" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg2.EnumOutputs(Microsoft.VisualStudio.Shell.Interop.IVsEnumOutputs@)">
      <summary>Obsolete method. Do not use. Inherited from <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppIVsEnumOutputs"> Do not use.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg2.get_BuildableProjectCfg(Microsoft.VisualStudio.Shell.Interop.IVsBuildableProjectCfg@)">
      <summary>Provides access to a configuration's <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsBuildableProjectCfg" /> interface to use to manage the build process. Inherited from <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppIVsBuildableProjectCfg"> [out] Pointer to the configuration's <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsBuildableProjectCfg" /> interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg2.get_CanonicalName(System.String@)">
      <summary>Returns a configuration's canonical name. Inherited from <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrCanonicalName"> [out] Pointer to the canonical name of the configuration such as Debug or Release.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg2.get_DisplayName(System.String@)">
      <summary>Returns a string that describes the configuration and can be displayed in the environment's UI. Inherited from <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrDisplayName"> [out] Pointer to a string containing the configuration's display name.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg2.get_IsDebugOnly(System.Int32@)">
      <summary>Obsolete method. Do not use. Inherited from <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfIsDebugOnly"> Do not use.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg2.get_IsPackaged(System.Int32@)">
      <summary>Obsolete method. Do not use. Inherited from <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfIsPackaged"> Do not use.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg2.get_IsReleaseOnly(System.Int32@)">
      <summary>Obsolete method. Do not use. Inherited from <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfIsReleaseOnly"> Do not use.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg2.get_IsSpecifyingOutputSupported(System.Int32@)">
      <summary>Obsolete method. Do not use. Inherited from <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfIsSpecifyingOutputSupported"> Do not use.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg2.get_Platform(System.Guid@)">
      <summary>Obsolete method. Do not use. Inherited from <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pguidPlatform"> Do not use.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg2.get_ProjectCfgProvider(Microsoft.VisualStudio.Shell.Interop.IVsProjectCfgProvider@)">
      <summary>Obsolete method. Do not use. Inherited from <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppIVsProjectCfgProvider"> Do not use.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg2.get_RootURL(System.String@)">
      <summary>Returns a configuration's root URL for its output items. Inherited from <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrRootURL"> [out] Pointer to the root URL for the configuration's output items.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg2.get_TargetCodePage(System.UInt32@)">
      <summary>Obsolete method. Do not use. Inherited from <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="puiTargetCodePage"> Do not use.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg2.get_UpdateSequenceNumber(Microsoft.VisualStudio.OLE.Interop.ULARGE_INTEGER[])">
      <summary>Obsolete method. Do not use. Inherited from <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="puliUSN"> Do not use.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg2.OnBeforeDebugLaunch(System.UInt32)">
      <summary>Provides a method the implementer can use to perform necessary actions before the actual launch of the debugger.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="grfLaunch"> [in] Flags determining how to start the debugger. For valid <paramref name="grfLaunch" /> values, see <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSDBGLAUNCHFLAGS" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg2.OpenOutput(System.String,Microsoft.VisualStudio.Shell.Interop.IVsOutput@)">
      <summary>Obsolete method. Do not use. Inherited from <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="szOutputCanonicalName"> Do not use.</param>
      <param name="ppIVsOutput"> Do not use.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg2.QueryDebugLaunch(System.UInt32,System.Int32@)">
      <summary>Determines whether the debugger can be launched, given the state of the launch flags. Inherited from <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="grfLaunch"> [in] Flags that determine the conditions under which to launch the debugger. For valid <paramref name="grfLaunch" /> values, see <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSDBGLAUNCHFLAGS" />.</param>
      <param name="pfCanLaunch"> [out] Pointer to a flag that is set to true if the debugger can be launched and false otherwise.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsDebugger2">
      <summary>Provides additional access to the debugger. You can get an instance of this interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsShellDebugger" /> (SID_SVsShellDebugger) service. This interface extends <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebugger" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugger2.ConfirmStopDebugging(System.String)">
      <summary>Displays a dialog and message to confirm the user wants to stop debugging.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszMessage">[in] String containing the message to display in the dialog.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugger2.CreateDataTip(System.String,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsEnhancedDataTip@)">
      <summary>Creates an enhanced data tip object.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrExpression">[in] String containing the data tip.</param>
      <param name="dwStyle">[in] Reserved.</param>
      <param name="ppDataTip">[out] Pointer to the new <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsEnhancedDataTip" /> interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugger2.EnumDebugEngines(Microsoft.VisualStudio.TextManager.Interop.IVsEnumGUID@)">
      <summary>Returns an enumerator for the active debugging engines. The enumerator provides the GUIDs for the engines.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppEnum">[out] Pointer to the enumerator interface, <see cref="T:Microsoft.VisualStudio.TextManager.Interop.IVsEnumGUID" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugger2.GetConsoleHandlesForProcess(System.UInt32,System.UInt64@,System.UInt64@,System.UInt64@)">
      <summary>Provides the standard console handles for the debugger so that another process can redirect its standard handles to the debug window.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwPid">[in] The identifier for the host process.</param>
      <param name="pdwStdInput">[out] Handle to the debugger's standard input.</param>
      <param name="pdwStdOutput">[out] Handle to the debugger's standard output.</param>
      <param name="pdwStdError">[out] Handle to the debugger's standard error.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugger2.GetEngineName(System.Guid@,System.String@)">
      <summary>Given the GUID of a debugging engine, returns the name of the engine. Use this method with <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugger2.EnumDebugEngines(Microsoft.VisualStudio.TextManager.Interop.IVsEnumGUID@)" /> to retrieve the names of all active debugging engines.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidEngine">[in] The GUID of the debugging engine.</param>
      <param name="pbstrName">[out] A string containing the name of the debugging engine.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugger2.GetInternalDebugMode(Microsoft.VisualStudio.Shell.Interop.DBGMODE[])">
      <summary>Gets the internal debugger mode.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pdbgmode">[out] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.DBGMODE" /> value specifying the debugger mode.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugger2.GetOutputHandleForProcess(System.UInt32,System.UInt64@)">
      <summary>Gets an output handle for a process.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwPid">[in] Process ID of the application.</param>
      <param name="pOutputHandle">[out] Handle to the output device.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugger2.GetSymbolPath(System.String@,System.String@)">
      <summary>Gets the current symbol path and cache settings.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrSymbolPath">[out] The current symbol path.</param>
      <param name="pbstrSymbolCachePath">[out] The current symbol cache path.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugger2.GetUseQuickConsoleOptionSetting(System.Int32@)">
      <summary>Gets options settings for Use Quick Console.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfValue">[out] A boolean value; true if Use Quick Console is enabled.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugger2.InsertBreakpointByName(System.Guid@,System.String,System.Int32)">
      <summary>Inserts a breakpoint at a named location in the program, such as a function name.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidLanguage">[in] The GUID for the language service such as SID_SVisualBasicLangService.</param>
      <param name="pszCodeLocationText">[in] String containing the name of the location to set the breakpoint.</param>
      <param name="bUseIntellisense">[in] Boolean value specifying whether to use Intellisense when resolving the breakpoint name.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugger2.IsEngineCompatible(System.Guid@,System.UInt32,System.Guid[])">
      <summary>Checks the compatibility of a debugging engine with other debugging engines.</summary>
      <returns>Returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" /> if the debugging engine (guidEngine) is compatible with all of the engines in pEngineGUIDs,. Otherwise, the method returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_FALSE" />.</returns>
      <param name="guidEngine">[in] The GUID of the engine tested for compatibility.</param>
      <param name="EngineCount">[in] Number of GUIDs in the array <paramref name="pEngineGUIDs" />.</param>
      <param name="pEngineGUIDs">[in] An array of GUIDs of debugging engines.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugger2.LaunchDebugTargets2(System.UInt32,System.IntPtr)">
      <summary>Launches or attaches to the specified processes under the control of the debugger.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="DebugTargetCount">[in] Number of targets to launch (specifies the number of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo2" /> structures pointed to by <paramref name="pDebugTargets" />).</param>
      <param name="pDebugTargets">[in, out] Array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo2" /> structures describing the programs to launch or attach to.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugger2.ShowSource(System.Object,System.Int32,System.Int32,System.Int32,System.Int32,Microsoft.VisualStudio.TextManager.Interop.IVsTextView@)">
      <summary>Displays a source file in the IDE. Takes as arguments a pointer to an IUnknown interface that can be queried for IDebugDocumentContext2 and display options.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pUnkDebugDocContext">[in] Pointer to an IUnknown interface on an object implementing IDebugDocumentContext2.</param>
      <param name="fMakeActive">[in] Boolean. If true, makes the source file window the active window.</param>
      <param name="fAlwaysMoveCaret">[in] Boolean. If true, move the caret to the position indicated by the document context through the IDebugDocumentContext2::GetStatementRange method of the IDebugDocumentContext2 interface.</param>
      <param name="fPromptToFindSource">[in] Boolean. If true, prompt the user if the file is not found.</param>
      <param name="fIgnoreIfNotFound">[in] Boolean. If true, do not try to find the file in the future if it is not found now.</param>
      <param name="ppTextView">[out] Pointer to a <see cref="T:Microsoft.VisualStudio.TextManager.Interop.IVsTextView" /> interface representing the opened source view. May be null.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugger2.ToggleUseQuickConsoleOption(System.Int32)">
      <summary>Sets the Use Quick Console option.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="fOnOff">[in] A boolean value; true to enable Use Quick Console.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsDebugProcessNotify">
      <summary>Provides notice that the debugger is about to stop. Used as the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo2" /> argument in the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugger2.LaunchDebugTargets2(System.UInt32,System.IntPtr)" /> method of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebugger2" /> interface.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDebugProcessNotify.BeforeStopDebuggingProcess(System.UInt32)">
      <summary>Provides notification and the reason for stopping the debugger before actually stopping the debug process.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="Reason">[In] The reason for stopping the debugging process—a value of type STOP_DEBUGGING_PROCESS_REASON</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsDefaultToolboxTabState">
      <summary>Determines the default state, expanded or unexpanded, of a tab in the Toolbox. An optional interface for implementers of <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsToolboxUser" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDefaultToolboxTabState.GetDefaultTabExpansion(System.String,System.Int32@)">
      <summary>Gets the default state of a given tab.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszTabID"> [In] A pointer to a string containing a unique ID specifying a tab.</param>
      <param name="pfExpanded"> [out] A Boolean value, true if the tab is expanded.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsDeferredDocView">
      <summary>Defers providing an actual document view until after loading and registering the document data in the Running Document Table (RDT). This allows the package to examine the document and decide what kind of view to provide.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDeferredDocView.get_CmdUIGuid(System.Guid@)">
      <summary>Retrieves the GUID for the pane or editor factory for later use when you create the view.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pGuidCmdId">[out] Pointer to a GUID for the deferred view. Usually the GUID for the pane. Used as an argument to <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsUIShell.CreateDocumentWindow(System.UInt32,System.String,Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchy,System.UInt32,System.IntPtr,System.IntPtr,System.Guid@,System.String,System.Guid@,Microsoft.VisualStudio.OLE.Interop.IServiceProvider,System.String,System.String,System.Int32[],Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame@)" /> when you create the view.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDeferredDocView.get_DocView(System.IntPtr@)">
      <summary>Provides the document view to the document window.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppUnkDocView">[out] Pointer to the IUnknown interface of the document view. Used as an argument to <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsUIShell.CreateDocumentWindow(System.UInt32,System.String,Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchy,System.UInt32,System.IntPtr,System.IntPtr,System.Guid@,System.String,System.Guid@,Microsoft.VisualStudio.OLE.Interop.IServiceProvider,System.String,System.String,System.Int32[],Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame@)" />.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsDeferredSaveProject">
      <summary>Delays permanently saving a project until the user saves it with SaveAll. Creates the effect of keeping the project in memory. The package uses a generated name for the project, and temporary files at a temporary location. Limits the solution to one project.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDeferredSaveProject.SaveProjectToLocation(System.String)">
      <summary>Tells the project to save itself and all its contents to the specified location on disk.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszProjectFilename">[in] A pointer to a string containing the full path and project filename.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsDeployableProjectCfg2">
      <summary>Used to support output about deployment during project deployment. Extends and inherits from <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDeployableProjectCfg" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDeployableProjectCfg2.AdviseDeployStatusCallback(Microsoft.VisualStudio.Shell.Interop.IVsDeployStatusCallback,System.UInt32@)">
      <summary>Establishes a callback for deployment status. Returns a cookie to save and use in the corresponding unadvise method.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pIVsDeployStatusCallback"> [in] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDeployStatusCallback" /> to use for calling back to report deployment status.</param>
      <param name="pdwCookie"> [out] A VSCOOKIE representing this callback. Used in the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsDeployableProjectCfg2.UnadviseDeployStatusCallback(System.UInt32)" /> method.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDeployableProjectCfg2.Commit(System.UInt32)">
      <summary>Method to call if all deployments succeed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwReserved">  Reserved. Do not use.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDeployableProjectCfg2.QueryStartDeploy(System.UInt32,System.Int32[],System.Int32[])">
      <summary>Checks for whether or not you can deploy a project with a given set of options.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwOptions"> [in] Bit flags specifying deployment options. Unused.</param>
      <param name="pfSupported"> [out] Optional. Pointer to a Boolean. Set to true if deployment supported. Specify null if not using.</param>
      <param name="pfReady"> [out] Optional. Pointer to a Boolean. Set to true if the project is ready to deploy. Specify null if not using.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDeployableProjectCfg2.QueryStatusDeploy(System.Int32@)">
      <summary>Call to find out if deployment is done.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfDeployDone"> [out] Pointer to a Boolean. Set to true if deployment complete.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDeployableProjectCfg2.Rollback(System.UInt32)">
      <summary>Method to call if any deployment fails.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwReserved"> Bit flags representing options. Unused.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDeployableProjectCfg2.StartCleanDeploy(Microsoft.VisualStudio.Shell.Interop.IVsOutputWindowPane,System.UInt32)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDeployableProjectCfg2.StartDeploy(Microsoft.VisualStudio.Shell.Interop.IVsOutputWindowPane,System.UInt32)">
      <summary>Begins deployment.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pIVsOutputWindowPane"> [in] Pointer to a <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsOutputWindowPane" /> to use when reporting progress.</param>
      <param name="dwOptions"> [in] Bit flag options for the deployment. Defined by the implementation.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDeployableProjectCfg2.StopDeploy(System.Int32)">
      <summary>Halts the deployment.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="fSync"> [in] Boolean. Implementation dependent.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDeployableProjectCfg2.UnadviseDeployStatusCallback(System.UInt32)">
      <summary>Disconnects the callback established by <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsDeployableProjectCfg2.AdviseDeployStatusCallback(Microsoft.VisualStudio.Shell.Interop.IVsDeployStatusCallback,System.UInt32@)" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwCookie"> [in] VSCOOKIE returned by <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsDeployableProjectCfg2.AdviseDeployStatusCallback(Microsoft.VisualStudio.Shell.Interop.IVsDeployStatusCallback,System.UInt32@)" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDeployableProjectCfg2.WaitDeploy(System.UInt32,System.Int32)">
      <summary>Obsolete method. Do not use.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwMilliseconds"> Do not use.</param>
      <param name="fTickWhenMessageQNotEmpty"> Do not use.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsDeployDependency2">
      <summary>Retrieves the dependency property values by name.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDeployDependency2.get_Property(System.String,System.Object@)">
      <summary>Gets the value of a dependency property.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
      <param name="szProperty">[in] String containing the name of the property.</param>
      <param name="pvar">[out] Pointer to a variant containing the property value.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsDetermineWizardTrust">
      <summary>Defines events for a wizard as well as methods providing status information. You can get an instance of the interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsDetermineWizardTrust" /> (SID_SVsDetermineWizardTrust) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDetermineWizardTrust.GetRunningWizardTemplateName(System.String@)">
      <summary>Retrieves the name of the template the wizard is running.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrRunningTemplate">[out] The name of the template.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDetermineWizardTrust.GetWizardTrustLevel(System.UInt32@)">
      <summary>Retrieves the trust level of the currently-running wizard.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pdwWizardTrustLevel">[out] The trust level of the wizard.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDetermineWizardTrust.IsWizardRunning(System.Int32@)">
      <summary>Indicates whether a wizard is currently running (between initiated and completed).</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfWizardRunning">[out] Set to true if the wizard is currently running, otherwise false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDetermineWizardTrust.OnWizardCompleted">
      <summary>Indicates that a wizard (project or item) has just stopped running.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDetermineWizardTrust.OnWizardInitiated(System.String,System.Guid@)">
      <summary>Indicates hat a wizard (project or item) is about to start running.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszTemplateFilename">[in] The template file name.</param>
      <param name="guidProjectType">[in] The GUID that identifies the project type.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDetermineWizardTrust.SetWizardTrustLevel(System.UInt32)">
      <summary>Mark the currently-running wizard as trusted.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwWizardTrustLevel">[in] The trust level of the currently-running wizard.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsDocOutlineProvider2">
      <summary>Enables changing the shell's translation of accelerator keys.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsDocOutlineProvider2.TranslateAccelerator(Microsoft.VisualStudio.OLE.Interop.MSG[])">
      <summary>Processes a Windows message related to accelerator keys.</summary>
      <returns>When implementing, return S_OK if the message was processed and requires no further translation; otherwise, return S_FALSE if you want the shell to translate the message.</returns>
      <param name="lpMsg"> [in] Pointer to the Windows message to process.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsEnhancedDataTip">
      <summary>Enables customization of DataTips in the debugger.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnhancedDataTip.GetBaseWindowHandle(System.IntPtr@)">
      <summary>Gets the base window handle for the data tip.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="phwnd">[out] Pointer to the Window handle, an HWND value.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnhancedDataTip.IsErrorTip(System.Int32@)">
      <summary>Tests whether the DataTip is for an error.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbIsError">[out] Boolean. Set to true if this is an error DataTip.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnhancedDataTip.IsOpen(System.Int32@)">
      <summary>Tests whether or not the DataTip window is visible.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbIsOpen">[out] Boolean. Set to true if the DataTip window is visible.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnhancedDataTip.SetExpression(System.String)">
      <summary>Sets the expression displayed in the DataTip.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrExpression">[in] String containing the expression to display in the DataTip.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnhancedDataTip.Show(System.IntPtr,Microsoft.VisualStudio.OLE.Interop.POINT[],Microsoft.VisualStudio.OLE.Interop.RECT[])">
      <summary>Displays the enhanced DataTip.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="hwndOwner">[in] The handle of the Window (HWND) in which to display the DataTip.</param>
      <param name="pptTopLeft">[in] Pointer to a POINT structure indicating the location of the top left corner of the DataTip.</param>
      <param name="pHotRect">[in] Pointer to a RECT structure marking the hot area of the DataTip—the area where a mouse-click will be responded to.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsEnumCryptoProviderContainers">
      <summary>Provides an enumerator for all of the key containers in a cryptography provider. A key container is part of a key database containing all of the key pairs for a given user. Returned by the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsStrongNameKeys.EnumContainers(System.String,Microsoft.VisualStudio.Shell.Interop.IVsEnumCryptoProviderContainers@)" /> method of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsStrongNameKeys" /> interface.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnumCryptoProviderContainers.Next(System.UInt32,System.String[],System.UInt32@)">
      <summary>Returns the next one or more key containers.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="celt">[in] The number of containers to fetch in this call.</param>
      <param name="pbstrContainers">[out] Array of strings containing the names of the key containers. Array length is the value pointed to by <paramref name="pceltFetched" />.</param>
      <param name="pceltFetched">[out] Number of key containers returned. May be less than <paramref name="celt" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnumCryptoProviderContainers.Reset">
      <summary>Returns the enumerator to its initial state.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsEnumCryptoProviders">
      <summary>Provides an enumerator to list cryptographic service providers. Returned by the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsStrongNameKeys.EnumProviders(Microsoft.VisualStudio.Shell.Interop.IVsEnumCryptoProviders@)" /> method of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsStrongNameKeys" /> interface.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnumCryptoProviders.Next(System.UInt32,System.String[],System.UInt32@)">
      <summary>Returns the next one or more cryptographic service providers.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="celt">[in] The number of providers to fetch in this call.</param>
      <param name="pbstrProviders">[out, size_is(celt), length_is(*pceltFetched)] Array of strings containing the names of the service providers.</param>
      <param name="pceltFetched">[out] Number of service providers returned. May be less than <paramref name="celt" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnumCryptoProviders.Reset">
      <summary>Returns the enumerator to its initial state.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsEnumLibraries2">
      <summary>Enumerates symbol libraries. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnumLibraries2.Clone(Microsoft.VisualStudio.Shell.Interop.IVsEnumLibraries2@)">
      <summary>Creates another enumerator that contains the same enumeration state as the current one.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppEnum">[out] The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsEnumLibraries2" /> that represents a new cloned enumerator set to the same state as the current enumerator.If the method is unsuccessful, the value of <paramref name="ppEnum" /> is undefined.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnumLibraries2.Next(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsLibrary2[],System.UInt32@)">
      <summary>Retrieves a specified number of libraries in the enumeration sequence.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="celt">[in] The number of elements being requested.</param>
      <param name="rgelt">[out] An array of type <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2" /> that contains requested libraries.</param>
      <param name="pceltFetched">[out, optional] The number of elements supplied in <paramref name="rgelt" />. Caller can pass in null if <paramref name="celt" /> is one.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnumLibraries2.Reset">
      <summary>Resets the enumeration sequence to the beginning.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnumLibraries2.Skip(System.UInt32)">
      <summary>Skips over a specified number of libraries in the enumeration sequence.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="celt">[in] The number of libraries to be skipped.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsEnumNavInfoNodes">
      <summary>Enumerates node items represented by the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> interface.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnumNavInfoNodes.Clone(Microsoft.VisualStudio.Shell.Interop.IVsEnumNavInfoNodes@)">
      <summary>Creates another enumerator that contains the same enumeration state as the current one.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppEnum">[out] The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsEnumNavInfoNodes" /> that represents a new cloned enumerator set to the same state as the current enumerator.If the method is unsuccessful, the value of <paramref name="ppEnum" /> is undefined.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnumNavInfoNodes.Next(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsNavInfoNode[],System.UInt32@)">
      <summary>Retrieves a specified number of node items in the enumeration sequence.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="celt">[in] The number of elements being requested.</param>
      <param name="rgelt">[out] An array of type <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfoNode" /> that contains requested node items.</param>
      <param name="pceltFetched">[out, optional] The number of elements supplied in <paramref name="rgelt" />. Caller can pass in null if <paramref name="celt" /> is one.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnumNavInfoNodes.Reset">
      <summary>Resets the enumeration sequence to the beginning of the sequence.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnumNavInfoNodes.Skip(System.UInt32)">
      <summary>Skips over a specified number of node items in the enumeration sequence.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="celt">[in] The number of node items to be skipped.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsEnumSelectedSymbols">
      <summary>Enumerator for groups of selected symbols. The enumerator returns an array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSelectedSymbol" /> interfaces.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnumSelectedSymbols.Clone(Microsoft.VisualStudio.Shell.Interop.IVsEnumSelectedSymbols@)">
      <summary>Creates a clone of the interface.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppIVsEnumSelectedSymbols">[out] Pointer to the cloned <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsEnumSelectedSymbols" /> interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnumSelectedSymbols.Next(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsSelectedSymbol[],System.UInt32@)">
      <summary>Returns the next one or more selected symbols represented by <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSelectedSymbol" /> interfaces.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="celt">[in] The number of symbols to fetch in this call.</param>
      <param name="rgpIVsSelectedSymbol">[out] Array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSelectedSymbol" /> interfaces. Length of the array is the value pointed to by <paramref name="pceltFetched" />.</param>
      <param name="pceltFetched">[out] Number of items returned. May be less than <paramref name="celt" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnumSelectedSymbols.Reset">
      <summary>Returns the enumerator to its initial state.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsEnumSelectedSymbols.Skip(System.UInt32)">
      <summary>Skips a given number of items.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="celt">[in] Number of selected symbols to skip.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsErrorItem">
      <summary>Provides information about an error item. The information includes the hierarchy the error belongs to as well as whether it is an error, a warning, or a message.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsErrorItem.GetCategory(System.UInt32@)">
      <summary>Returns the category of the error.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCategory">[out] A VSERRORCATEGORY value, a value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSERRORCATEGORY" /> enumeration, specifying an error, warning, or informational message.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsErrorItem.GetHierarchy(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy@)">
      <summary>Provides the hierarchy for the item if the error involves a project hierarchy item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppProject">[out] Pointer to a <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface providing hierarchy information about the error.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsErrorList">
      <summary>Manipulates the BuildErrorList window. You can get an instance of this interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsErrorList" /> (SID_SVsErrorList) service. The <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsErrorList" /> service also provides <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsTaskList" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsErrorList.BringToFront">
      <summary>Activates the window and makes it visible.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsErrorList.ForceShowErrors">
      <summary>Forces errors to appear in the list. Leaves warnings and informational messages alone.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3">
      <summary>Not intended for use directly from your code. Implements many of the features supporting extensibility, including initiating various events. Combines the older <see cref="T:EnvDTE.IVsExtensibility" /> and <see cref="T:EnvDTE80.IVsExtensibility2" /> interfaces that were not usable from managed code into an interface usable from managed code.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.EnterAutomationFunction"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.ExitAutomationFunction"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.FireCodeModelEvent3(System.Int32,System.Object,System.Object,System.Int32)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.FireMacroReset"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.FireProjectItemsEvent_ItemAdded(System.Object)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.FireProjectItemsEvent_ItemRemoved(System.Object)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.FireProjectItemsEvent_ItemRenamed(System.Object,System.String)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.FireProjectsEvent_ItemAdded(System.Object)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.FireProjectsEvent_ItemRemoved(System.Object)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.FireProjectsEvent_ItemRenamed(System.Object,System.String)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.GetConfigMgr(System.Object,System.UInt32,System.Object@)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.GetDocumentFromDocCookie(System.Int32,System.Object@)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.GetGlobalsObject(System.Object,System.Object@)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.GetLockCount(System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.GetProperties(System.Object,System.Object,System.Object@)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.GetSuppressUI(System.Boolean@)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.GetUserControl(System.Boolean@)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.IsFireCodeModelEventNeeded(System.Boolean@)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.IsInAutomationFunction(System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.IsMethodDisabled(System.Guid@,System.Int32)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.LockServer(System.Boolean)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.RunWizardFile(System.String,System.Int32,System.Array@,System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.RunWizardFileEx(System.String,System.Int32,System.Array@,System.Array@,System.Int32@)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.SetSuppressUI(System.Boolean)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.SetUserControl(System.Boolean)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.SetUserControlUnlatched(System.Boolean)"></member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsExtensibility3.TestForShutdown(System.Boolean@)"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsFileUpgrade">
      <summary>Performs file upgrades as part of a project upgrade.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFileUpgrade.UpgradeFile(System.String,System.String,System.Int32,Microsoft.VisualStudio.Shell.Interop.IVsUpgradeLogger,System.Int32@)">
      <summary>Upgrades a single file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrProjectName">[in] String containing the name of the project the file belongs to.</param>
      <param name="bstrFileName">[in] String containing the full path and name of the file to upgrade.</param>
      <param name="bNoBackup">[in] Boolean. If true, no backup file is created.</param>
      <param name="pLogger">[in] Pointer to a <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUpgradeLogger" /> interface to use for logging upgrade actions.</param>
      <param name="pUpgradeRequired">[out] Boolean. Set to true if the upgrade succeeded.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFileUpgrade.UpgradeFile_CheckOnly(System.String,System.String,System.Int32,Microsoft.VisualStudio.Shell.Interop.IVsUpgradeLogger,System.Int32@)">
      <summary>Checks if a file requires upgrading but does not perform the upgrade.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrProjectName">[in] String containing the name of the project the file belongs to.</param>
      <param name="bstrFileName">[in] String containing the full path and name of the file proposed for upgrade.</param>
      <param name="bNoBackup">[in] Boolean. If true, no backup file would be created.</param>
      <param name="pLogger">[in] Pointer to a <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUpgradeLogger" /> interface to use for logging upgrade actions.</param>
      <param name="pUpgradeRequired">[out] Boolean. Set to true if the file requires upgrading.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsFilterKeys2">
      <summary>Controls the binding between keys and commands. You can get an instance of this interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsFilterKeys" /> (SID_SVsFilterKeys) service. Extends, but does not inherit from, <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsFilterKeys" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFilterKeys2.TranslateAcceleratorEx(Microsoft.VisualStudio.OLE.Interop.MSG[],System.UInt32,System.UInt32,System.Guid[],System.Guid@,System.UInt32@,System.Int32@,System.Int32@)">
      <summary>Takes a Windows message, translates it into a command, and, optionally, executes the command.</summary>
      <returns>If the message does or will translate to a command, the method returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />, fills the pguidCmd and pdwCmd parameters with the command's GUID and ID, and sets fCmdTranslated to true. If the message does not or will not translate to a command, the method returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_FALSE" />, sets the GUID and ID parameters to zero, and sets fCmdTranslated to false.</returns>
      <param name="pMsg">[in] Pointer to the Windows message.</param>
      <param name="dwFlags">[in] Bit flags to determine whether or not to perform default actions, to execute the command, and the key bindings to use. Values formed from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSTRANSACCELEXFLAGS" /> enumeration.</param>
      <param name="cKeyBindingScopes">[in] Number of key binding scopes to check. Length of the <paramref name="rgguidKeyBindingScopes" /> array.</param>
      <param name="rgguidKeyBindingScopes">[in] Array of GUIDs of the key binding scopes to use such as CMDUIGUID_TextEditor to use the current text editor key bindings.</param>
      <param name="pguidCmd">[out] Pointer to the GUID of the corresponding command.</param>
      <param name="pdwCmd">[out] Pointer to the identifier of the command.</param>
      <param name="fCmdTranslated">[out] Boolean. Set to true if the message will translate to a command.</param>
      <param name="pfKeyComboStartsChord">[out] Boolean. Set to true if the key is the start of a multi-key sequence (chord).</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsFilterNewProjectDlg">
      <summary>Provides filtering for items in the New Project dialog box. Implemented by components wanting to filter.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFilterNewProjectDlg.FilterListItemByLocalizedName(System.String,System.Int32@)">
      <summary>Filters items by localized name.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszLocalizedName">[in] Pointer to a string containing the name to test for filtering.</param>
      <param name="pfFilter">[out] Pointer to a Boolean. Set to true if the item should be filtered.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFilterNewProjectDlg.FilterListItemByTemplateFile(System.String,System.Int32@)">
      <summary>Filters list items by template file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
      <param name="pszTemplateFile">[in] Pointer to a string containing the name to test for filtering.</param>
      <param name="pfFilter">[out] Pointer to a Boolean. Set to true if the item should be filtered.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFilterNewProjectDlg.FilterTreeItemByLocalizedName(System.String,System.Int32@)">
      <summary>Filters tree items by localized name.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
      <param name="pszLocalizedName">[in] Pointer to a string containing the name to test for filtering.</param>
      <param name="pfFilter">[out] Pointer to a Boolean. Set to true if the item should be filtered.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFilterNewProjectDlg.FilterTreeItemByTemplateDir(System.String,System.Int32@)">
      <summary>Filters tree items by template directory name.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszTemplateDir">[in] Pointer to a string containing the name to test for filtering.</param>
      <param name="pfFilter">[out] Pointer to a Boolean. Set to true if the item should be filtered.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsFindSymbol">
      <summary>Implements the search done by the FindSymbol menu command. You can get an instance of this interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsObjectSearch" /> (SID_SVsObjectSearch) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFindSymbol.DoSearch(System.Guid@,Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2[])">
      <summary>Performs the search.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidSymbolScope">[in] A GUID specifying the search scope or the GUID of a library.</param>
      <param name="pobSrch">[in] The search criteria.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFindSymbol.GetUserOptions(System.Guid@,Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2[])">
      <summary>Returns the search options.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pguidScope">[out] A GUID specifying the search scope.</param>
      <param name="pobSrch">[out] Bit flags indicating search options. Constructed using values from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBSEARCHOPTIONS2" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFindSymbol.SetUserOptions(System.Guid@,Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2[])">
      <summary>Sets search options.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidScope">[in] A GUID specifying the search scope or the GUID of a library.</param>
      <param name="pobSrch">[in] Bit flags indicating search options. Constructed using values from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBSEARCHOPTIONS2" /> enumeration.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsFindSymbolEvents">
      <summary>Outgoing interface for events, such as changes in search options, related to the Find Symbol command. The client implements the interface and advises the server. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFindSymbolEvents.OnUserOptionsChanged(System.Guid@,Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2[])">
      <summary>Defines the method called when user search options change.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidSymbolScope">[in] The new scope GUID or library GUID.</param>
      <param name="pobSrch">[in] The new search options. Bit flags constructed using values from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBSEARCHOPTIONS2" /> enumeration.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsFireSolutionEvents2">
      <summary>Fires the same events (<see cref="P:EnvDTE80.Events2.SolutionEvents" />) a solution normally fires. Enables a project that nests subprojects to fire these events. Extends, but does not inherit from, <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsFireSolutionEvents" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFireSolutionEvents2.FireOnAfterAsynchOpenProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.Int32)">
      <summary>Fires a solution event, <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents4.OnAfterAsynchOpenProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.Int32)" />, after asynchronously opening a project in a nested project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy">[In] Pointer to the IVsHierarchy interface of the project being loaded.</param>
      <param name="fAdded">[In] Boolean. Set to true if the project is added to the solution after opening the solution. Set to false if the project is added to the solution while the solution is being opened.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFireSolutionEvents2.FireOnAfterChangeProjectParent(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)">
      <summary>Fires a solution event, <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents4.OnAfterChangeProjectParent(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)" />, after the parent project of a child project changes.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy">[In] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the new parent project.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFireSolutionEvents2.FireOnAfterRenameProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)">
      <summary>Fires a solution event, <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents4.OnAfterRenameProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)" />, after renaming a project in the project hierarchy.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy">[In] Pointer to the renamed project's <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFireSolutionEvents2.FireOnQueryChangeProjectParent(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)">
      <summary>Fires a solution event, <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents4.OnQueryChangeProjectParent(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.Int32@)" />, indicating a query about changing the parent of the project.</summary>
      <returns>Returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_FALSE" /> if the callee vetoes the operation. Otherwise, returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />.</returns>
      <param name="pHierarchy">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the child project.</param>
      <param name="pNewParentHier">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the new parent project.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorCacheManager">
      <summary>Controls the caching of font and color settings.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorCacheManager.CheckCache(System.Guid@,System.Int32@)">
      <summary>Determines if a given Category's state is cached and current.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="rguidCategory">[in] Specifies the GUID of the Category of Display Items whose caching state is being checked</param>
      <param name="pfHasData">[out] Flag indicating if a Category's default Fonts and Colors cache state. If <paramref name="pfHasData" /> is true, the Category's state is current and cached.If <paramref name="pfHasData" /> is false, the Category's state is not cached.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorCacheManager.CheckCacheable(System.Guid@,System.Int32@)">
      <summary>Determines if a given Category's state can be cached.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="rguidCategory">[in] Specifies the GUID of the Category of Display Items whose caching state is being checked.</param>
      <param name="pfCacheable">[out] Flag indicating if a Category's default Fonts and Colors state can be cached.If <paramref name="pfHasData" /> is true, the Category's state can be cached.If <paramref name="pfHasData" /> is false, the Category's state cannot be cached.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorCacheManager.ClearAllCaches">
      <summary>Clears all Categories' state information from the Fonts and Colors cache.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorCacheManager.ClearCache(System.Guid@)">
      <summary>Clears a given Category's state information from the Fonts and Colors cache.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="rguidCategory">[in] Specifies the GUID of the Category of Display Items whose cached information is to be cleared.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorCacheManager.RefreshCache(System.Guid@)">
      <summary>Force the Visual Studio environment to update cached Fonts and Colors information with the current state data of a given Category.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="rguidCategory">[in] Specifies the GUID of the Category of Display Items whose cached information is to be updated.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorStorage2">
      <summary>Allows a VSPackage to manage registry font and color entries.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorStorage2.RevertAllItemsToDefault">
      <summary>Revert all registry font and color entries to default values.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorStorage2.RevertFontToDefault">
      <summary>Revert all registry font entries to default values.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorStorage2.RevertItemToDefault(System.String)">
      <summary>Revert the indicated registry font or color entry to its default value.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="szName">[in] Null-terminated string containing the non-localized name of the font or color registry entry.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities">
      <summary>Provides tools for working with the input and output data used by the methods of the Visual Studio Font and Color mechanism.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities.CopyFontInfo(Microsoft.VisualStudio.Shell.Interop.FontInfo[],Microsoft.VisualStudio.Shell.Interop.FontInfo[])">
      <summary>Copies font information from one <see cref="T:Microsoft.VisualStudio.Shell.Interop.FontInfo" /> object into another.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pDest">[in,out] A valid, initialized <see cref="T:Microsoft.VisualStudio.Shell.Interop.FontInfo" /> object into which data from <paramref name="pSource" />, will be copied.</param>
      <param name="pSource">[in] The <see cref="T:Microsoft.VisualStudio.Shell.Interop.FontInfo" /> object from which data will be copied.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities.CopyItemInfo(Microsoft.VisualStudio.Shell.Interop.AllColorableItemInfo[],Microsoft.VisualStudio.Shell.Interop.AllColorableItemInfo[])">
      <summary>Copies information contained in one <see cref="T:Microsoft.VisualStudio.Shell.Interop.AllColorableItemInfo" /> object to another <see cref="T:Microsoft.VisualStudio.Shell.Interop.AllColorableItemInfo" /> object.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pDest">[in] A valid, initialized <see cref="T:Microsoft.VisualStudio.Shell.Interop.AllColorableItemInfo" /> object into which data from <paramref name="pSource" />, will be copied.</param>
      <param name="pSource">[in,out] The <see cref="T:Microsoft.VisualStudio.Shell.Interop.AllColorableItemInfo" /> object from which data will be copied.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities.EncodeAutomaticColor(System.UInt32@)">
      <summary>Returns the current value of the Visual Studio session automatic color as an RGB (COLORREF) value.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pcrResult">[out] A COLORREF representation corresponding to the Visual Studio automatic color.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities.EncodeIndexedColor(Microsoft.VisualStudio.TextManager.Interop.COLORINDEX,System.UInt32@)">
      <summary>Translates a member of the <see cref="T:Microsoft.VisualStudio.TextManager.Interop.COLORINDEX" /> enumeration into its RGB (COLORREF) color value equivalent.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="idx">[in] A valid member of the <see cref="T:Microsoft.VisualStudio.TextManager.Interop.COLORINDEX" /> enumeration</param>
      <param name="pcrResult">[out] A COLORREF equivalent to the <see cref="T:Microsoft.VisualStudio.TextManager.Interop.COLORINDEX" /> supplied.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities.EncodeInvalidColor(System.UInt32@)">
      <summary>Returns a RGB (COLORREF) color value corresponding to the system defined invalid color.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pcrResult">[out] A COLORREF used to indicate an invalid color selection.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities.EncodeSysColor(System.Int32,System.UInt32@)">
      <summary>Returns a RGB (COLORREF) color value corresponding to a specified system color component.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="iSysColor">[in] Valid system color component value.</param>
      <param name="pcrResult">[out] An RGB (COLORREF) representation of the specified system component color. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities.EncodeTrackedItem(System.Int32,System.Int32,System.UInt32@)">
      <summary>Returns a RGB (COLORREF) color value corresponding to a color tracked in the Visual Studio environment.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="iItemToTrack">[in] An index indicating a visual component whose color must be tracked.</param>
      <param name="aspect">[in] A member of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSCOLORASPECT" /> enumeration.</param>
      <param name="pcrResult">[out] A COLORREF representation corresponding to the color of the aspect of the tracked visual component.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities.EncodeVSColor(System.Int32,System.UInt32@)">
      <summary>Returns the COLORREF equivalent of a <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX" /> color. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
      <param name="vsColor">[in] A valid member of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX" /> enumeration.</param>
      <param name="pcrResult">[out] A COLORREF representation of the color of the  system component specified by the <paramref name="vsColor" /> parameter.     </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities.FreeFontInfo(Microsoft.VisualStudio.Shell.Interop.FontInfo[])">
      <summary>Free all data in a contained <see cref="T:Microsoft.VisualStudio.Shell.Interop.FontInfo" /> object.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pInfo">[in,out] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.FontInfo" /> whose data is to be freed.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities.FreeItemInfo(Microsoft.VisualStudio.Shell.Interop.AllColorableItemInfo[])">
      <summary>Free all data in a contained <see cref="T:Microsoft.VisualStudio.Shell.Interop.AllColorableItemInfo" /> object</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pInfo">[in,out] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.AllColorableItemInfo" /> whose data is to be freed.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities.GetColorType(System.UInt32,System.Int32@)">
      <summary>Obtain the type of color representation in a COLORREF.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="crSource">[in] A COLORREF representation of color value.</param>
      <param name="pctType">[out] An integer representing the color type of <paramref name="crSource" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities.GetEncodedIndex(System.UInt32,Microsoft.VisualStudio.TextManager.Interop.COLORINDEX[])">
      <summary>Obtain a valid member of the <see cref="T:Microsoft.VisualStudio.TextManager.Interop.COLORINDEX" /> enumeration corresponding to a supplied COLORREF.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="crSource">[in] A COLORREF representation of color value.</param>
      <param name="pIdx">[out] A valid member of the <see cref="T:Microsoft.VisualStudio.TextManager.Interop.COLORINDEX" /> enumeration corresponding <paramref name="crSource" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities.GetEncodedSysColor(System.UInt32,System.Int32@)">
      <summary>Obtain a System Color service index corresponding to a supplied COLORREF.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="crSource">[in] A COLORREF representation of color value.</param>
      <param name="piSysColor">[out] The System Color Service index corresponding the <paramref name="crSource" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities.GetEncodedVSColor(System.UInt32,System.Int32@)">
      <summary>Obtain a valid member of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX" /> enumeration corresponding to a supplied COLORREF.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="crSource">[in] A COLORREF representation of color value.</param>
      <param name="pVSColor">[out] A valid member of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX" /> enumeration corresponding <paramref name="crSource" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities.GetRGBOfEncodedColor(System.UInt32,System.UInt32,System.Guid@,System.UInt32@)">
      <summary>Obtain the RGB value of a created tracking or indexed COLORREF representation of a color.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="crSource">[in] A COLORREF representation of color value.</param>
      <param name="crAutoColor">[in] A COLORREF representation of color value.</param>
      <param name="rguidCategory">[in] The GUID identifying the Category whose color values are to be obtained.</param>
      <param name="pcrResult">[out] A COLORREF representation of color value containing the returned RGB value.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities.GetRGBOfIndex(Microsoft.VisualStudio.TextManager.Interop.COLORINDEX,System.UInt32@)">
      <summary>Obtain the RGB value corresponding to a valid member of the <see cref="T:Microsoft.VisualStudio.TextManager.Interop.COLORINDEX" /> enumeration.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="idx">[out] A valid member of the <see cref="T:Microsoft.VisualStudio.TextManager.Interop.COLORINDEX" /> enumeration corresponding <paramref name="crSource" />.</param>
      <param name="pcrResult">[out] A COLORREF representation of color value containing the returned RGB value.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities.GetRGBOfItem(Microsoft.VisualStudio.Shell.Interop.AllColorableItemInfo[],System.Guid@,System.UInt32@,System.UInt32@)">
      <summary>Obtain the RGB (COLORREF) values of the foreground and background color of a Font and Color Category from an instance of <see cref="T:Microsoft.VisualStudio.Shell.Interop.AllColorableItemInfo" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pInfo">[in] An instance of <see cref="T:Microsoft.VisualStudio.Shell.Interop.AllColorableItemInfo" />. containing the Font and Color information for a given Category.</param>
      <param name="rguidCategory">[in] The GUID identifying the Category whose color values are to be obtained.</param>
      <param name="pcrForeground">[out] A COLORREF representation of foreground color value.</param>
      <param name="pcrBackground">[out] A COLORREF representation of background color value.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities.GetTrackedItemIndex(System.UInt32,System.Int32@,System.Int32@)">
      <summary>Obtain the index of a tracked color as represented by a COLORREF and a member of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSCOLORASPECT" /> indicated if the color was used in the foreground or background.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="crSource">[in] A COLORREF representation of color value.</param>
      <param name="pAspect">[out] A valid member of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSCOLORASPECT" /> indicating if the value of <paramref name="crSource" /> is a foreground or background color.</param>
      <param name="piItem">The index of the item being tracked.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities.InitFontInfo(Microsoft.VisualStudio.Shell.Interop.FontInfo[])">
      <summary>Initializes a <see cref="T:Microsoft.VisualStudio.Shell.Interop.FontInfo" /> object to a default state.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pInfo">[in,out] The <see cref="T:Microsoft.VisualStudio.Shell.Interop.FontInfo" /> object to be initialized.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsFontAndColorUtilities.InitItemInfo(Microsoft.VisualStudio.Shell.Interop.AllColorableItemInfo[])">
      <summary>Initializes an <see cref="T:Microsoft.VisualStudio.Shell.Interop.AllColorableItemInfo" /> object to a default state.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pInfo">[in,out] The <see cref="T:Microsoft.VisualStudio.Shell.Interop.AllColorableItemInfo" /> object to be initialized.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsGlobals2">
      <summary>Loads and saves values global to the solution. Replaces <see cref="T:EnvDTE.IVsGlobals" /> that cannot be used in managed code.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsGlobals2.Empty">
      <summary>Clears all global solution values.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsGlobals2.Load">
      <summary>Loads global solution values. Triggers a call to the <see cref="M:EnvDTE.IVsGlobalsCallback.ReadData(EnvDTE.Globals)" /> method of the <see cref="T:EnvDTE.IVsGlobalsCallback" /> interface.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsGlobals2.Save">
      <summary>Saves global solution values. Triggers a call to the <see cref="M:EnvDTE.IVsGlobalsCallback.WriteVariablesToData(System.String,System.Object@)" /> method of the <see cref="T:EnvDTE.IVsGlobalsCallback" /> interface.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsGlobalsCallback2">
      <summary>Performs the save and load operations for the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsGlobals2" /> interface.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsGlobalsCallback2.CanModifySource">
      <summary>Indicates whether or not you can change the source file corresponding to the globals.</summary>
      <returns>Returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" /> if the globals file is editable. Otherwise, for example if the file is checked into source control and cannot be checked out, returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_FALSE" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsGlobalsCallback2.ClearVariables">
      <summary>Removes all globals.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsGlobalsCallback2.GetParent(System.Object@)">
      <summary>Gets the parent of the object implementing <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsGlobalsCallBack2" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppOut">[out] Pointer to the <see cref="T:IDispatch" /> interface of the interface's parent object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsGlobalsCallback2.ReadData(System.Object)">
      <summary>Takes names and values from an object and stores them as globals.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pGlobals">[in] Pointer to the IUnknown interface of the object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsGlobalsCallback2.VariableChanged">
      <summary>Provides notification of changes to global solution variables.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsGlobalsCallback2.WriteVariablesToData(System.String,System.Object@)">
      <summary>Writes the name and value of a solution global. How and where the method writes the name and value pair is implementation dependent.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pVariableName">[in] Pointer to a string containing the variable's name.</param>
      <param name="varData">[in] Pointer to a VARIANT containing the variable's value.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsGradient">
      <summary>Enables a VSPackage to paint specified UI elements with the proper gradient.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsGradient.DrawGradient(System.IntPtr,System.IntPtr,Microsoft.VisualStudio.OLE.Interop.RECT[],Microsoft.VisualStudio.OLE.Interop.RECT[])">
      <summary>Draws a given gradient at a specified location.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="hwnd">[in] Handle of a window containing the region to be painted with a gradient.</param>
      <param name="hdc">[in] Handle of the device context used in drawing the gradient.</param>
      <param name="gradientRect">[in] The gradient rectangle or containing region, defining the full extent and geometry over which the gradient could be applied.</param>
      <param name="sliceRect">[in] The slice rectangle, defining the region over which a gradient is actually painted.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsGradient.GetGradientVector(System.Int32,System.UInt32[])">
      <summary>Returns an array of colors used to create a brush for a given gradient.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="cVector">[in] Size of the <paramref name="rgVector" /> array to be returned.</param>
      <param name="rgVector">[out] An array of <paramref name="cVector" /> RGB values that define a gradient.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsHasRelatedSaveItems">
      <summary>Enables the saving of additional items. Implemented by clients that want additional items to appear in the Save Changes dialog, or that want particular items saved at the same time as other items.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsHasRelatedSaveItems.GetRelatedSaveTreeItems(Microsoft.VisualStudio.Shell.Interop.VSSAVETREEITEM,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSSAVETREEITEM[],System.UInt32@)">
      <summary>Gets the number of related items to save, or returns a list of related items to save.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="saveItem">[in] Pointer to a <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSSAVETREEITEM" /> structure containing information about the item to check for related items.</param>
      <param name="celt">[in] Zero or the number of items in <paramref name="rgSaveTreeItems" />. See Remarks.</param>
      <param name="rgSaveTreeItems">[in, out] Pointer to an array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSSAVETREEITEM" /> structures containing information about related items to save.</param>
      <param name="pcActual">[out] Pointer to an integer that is the number of related items to save or the number of elements in <paramref name="rgSaveTreeItems" />.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchyDeleteHandler2">
      <summary>Deletes one or more items in a solution hierarchy. The interface extends, but does not inherit from, <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchyDeleteHandler" />. Needed only if you want your package to use its own deletion prompt. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsHierarchyDeleteHandler2.ShowMultiSelDeleteOrRemoveMessage(System.UInt32,System.UInt32,System.UInt32[],System.Int32@)">
      <summary>Displays the multiple selection delete or remove message.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwDelItemOp">[in] A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSDELETEITEMOPERATION" /> enumeration.</param>
      <param name="cDelItems">[in] Number of items in <paramref name="rgDelItems" /></param>
      <param name="rgDelItems">[in] Array of VSITEMID values indicating items to delete from the project.</param>
      <param name="pfCancelOperation">[out] If true cancels the entire delete or remove operations.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsHierarchyDeleteHandler2.ShowSpecificDeleteRemoveMessage(System.UInt32,System.UInt32,System.UInt32[],System.Int32@,System.UInt32@)">
      <summary>Shows a specific delete or remove message.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwDelItemOps">[in] A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSDELETEITEMOPERATION" /> enumeration.</param>
      <param name="cDelItems">[in]The number of items in <paramref name="rgDelItems" /></param>
      <param name="rgDelItems">[in] Array of VSITEMID values indicating items to delete from the project.</param>
      <param name="pfShowStandardMessage">[out] Set to true if the shell is to ignore <paramref name="pdwDelItemOp" /> and shows the standard message.</param>
      <param name="pdwDelItemOp">[out] Set to <see cref="F:Microsoft.VisualStudio.Shell.Interop.__VSDELETEITEMOPERATION.DELITEMOP_DeleteFromStorage" /> or <see cref="F:Microsoft.VisualStudio.Shell.Interop.__VSDELETEITEMOPERATION.DELITEMOP_RemoveFromProject" /> if delete or remove allowed.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchyRefactorNotify">
      <summary>Notifies the hierarchy of refactoring operations.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsHierarchyRefactorNotify.OnAddParams(System.UInt32,System.String,System.UInt32,System.UInt32[],System.String[],System.String[])">
      <summary>Called after a method had parameters added.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="itemid">The VSITEMID that identifies the affected file.</param>
      <param name="lpszRQName">The method that has parameters added.</param>
      <param name="cParams">The number of parameters added.</param>
      <param name="rgszParamIndexes">The indexes of the new parameters.</param>
      <param name="rgszRQTypeNames">The types of the new parameters.</param>
      <param name="rgszParamNames">The names of the new parameters.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsHierarchyRefactorNotify.OnBeforeAddParams(System.UInt32,System.String,System.UInt32,System.UInt32[],System.String[],System.String[],System.Int32)">
      <summary>Called when a method is about to have parameters added.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="itemid">The VSITEMID that identifies the affected file.</param>
      <param name="lpszRQName">The method that has parameters added.</param>
      <param name="cParams">The number of added parameters.</param>
      <param name="rgszParamIndexes">The indexes of added parameters.</param>
      <param name="rgszRQTypeNames">The types of added parameters.</param>
      <param name="rgszParamNames">The names of added parameters.</param>
      <param name="promptContinueOnFail">true to prompt the user to continue the add operation if one or more IVsRefactorNotify implementers fails; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsHierarchyRefactorNotify.OnBeforeGlobalSymbolRenamed(System.UInt32,System.UInt32[],System.UInt32,System.String[],System.String,System.Int32)">
      <summary>Called when a symbol is about to be renamed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="cItemsAffected">The number of files affected by the rename.</param>
      <param name="rgItemsAffected">An array of VSITEMIDs that identifies the files that will be affected.</param>
      <param name="cRQNames">The number of renamed symbols. The number can be greater than one, if an overloaded symbol is renamed.</param>
      <param name="rglpszRQName">The name of the symbol before rename.</param>
      <param name="lpszNewName">The name of the symbol after the rename. </param>
      <param name="promptContinueOnFail">true to prompt the user to continue the rename operation if one or more IVsRefactorNotify implementers fails; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsHierarchyRefactorNotify.OnBeforeRemoveParams(System.UInt32,System.String,System.UInt32,System.UInt32[],System.Int32)">
      <summary>Called when a method is about to have parameters removed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="itemid">The VSITEMID that identifies the affected file.</param>
      <param name="lpszRQName">The method that has parameters removed.</param>
      <param name="cParamIndexes">The number of parameters removed.</param>
      <param name="rgParamIndexes">The indexes of removed parameters.</param>
      <param name="promptContinueOnFail">true to prompt the user to continue the remove operation if one or more IVsRefactorNotify implementers fails; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsHierarchyRefactorNotify.OnBeforeReorderParams(System.UInt32,System.String,System.UInt32,System.UInt32[],System.Int32)">
      <summary>Called when a method is about to have parameters reordered.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="itemid">The VSITEMID that identifies the affected file.</param>
      <param name="lpszRQName">The method that has parameters reordered.</param>
      <param name="cParamIndexes">The number of parameters reordered.</param>
      <param name="rgParamIndexes">An array of parameter indexes. The index defines the position of the parameter after reordering. The value at the index defines the position of the parameter before reordering.</param>
      <param name="promptContinueOnFail">true to prompt the user to continue the reorder operation if one or more IVsRefactorNotify implementers fails; otherwise, false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsHierarchyRefactorNotify.OnGlobalSymbolRenamed(System.UInt32,System.UInt32[],System.UInt32,System.String[],System.String)">
      <summary>Called after a symbol is renamed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="cItemsAffected">The number of files affected by the rename.</param>
      <param name="rgItemsAffected">An array of VSITEMIDs that identifies the affected files. </param>
      <param name="cRQNames">The number of the renamed symbols. The number can be greater than one if an overloaded symbol is renamed.</param>
      <param name="rglpszRQName">The name of the symbol before rename.</param>
      <param name="lpszNewName">The name of the symbol after the rename.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsHierarchyRefactorNotify.OnRemoveParams(System.UInt32,System.String,System.UInt32,System.UInt32[])">
      <summary>Called after a method had parameters removed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="itemid">The VSITEMID that identifies the affected file.</param>
      <param name="lpszRQName">The method that has parameters removed.</param>
      <param name="cParamIndexes">The number of parameters removed.</param>
      <param name="rgParamIndexes">An array of parameter indexes where each value indicates the index of the parameter that was removed.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsHierarchyRefactorNotify.OnReorderParams(System.UInt32,System.String,System.UInt32,System.UInt32[])">
      <summary>Called after a method had parameters reordered.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="itemid">The VSITEMID that identifies the affected file.</param>
      <param name="lpszRQName">The method that has parameters reordered.</param>
      <param name="cParamIndexes">The number of parameters reordered.</param>
      <param name="rgParamIndexes">An array of parameter indexes. The index defines the position of the parameter after reordering. The value at the index defines the position of the parameter before reordering.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsImageButton">
      <summary>Draws an image on a button created by your VSPackage.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsImageButton.Draw(Microsoft.VisualStudio.Shell.Interop.VSDRAWITEMSTRUCT[],System.Int32)">
      <summary>Draws an ImageButton for your VSPackage.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pDrawItemStruct">[in] Provides the information in a <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSDRAWITEMSTRUCT" /> structure that IVsImageButton.Draw needs to drawthe owner-drawn control or menu item.</param>
      <param name="fHot">[in] When true, the button changes appearance when the mouse pointer is over the button.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseEngine">
      <summary>Enables a project hierarchy node to load or unload files as part of support for IntelliSense. Loading and unloading generates events that may change what IntelliSense displays. You can get an instance of the interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsIntellisenseEngine" /> (SID_SVsIntelliSenseEngine) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseEngine.Load">
      <summary>Ensures the Intellisense engine is loaded. Called by C# refactoring.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseEngine.SupportsLoad">
      <summary>Indicates whether or not a file supports a Load method. Used by C# refactoring.</summary>
      <returns>Returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" /> if supported. Otherwise, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.E_FAIL" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseEngine.Unload">
      <summary>Ensures the Intellisense engine is unloaded. Called by C# refactoring.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject">
      <summary>Provides IntelliSense support for a project. Used with <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectHost" /> and intended for use with contained languages.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.AddAssemblyReference(System.String)">
      <summary>Adds an assembly reference to the project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrAbsPath">[in] String containing the full path to the assembly.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.AddFile(System.String,System.UInt32)">
      <summary>Adds a file to the project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrAbsPath">[in] A string containing the full path of the file.</param>
      <param name="itemid">[in] The item identifier (VSITEMID) of the file to add.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.AddP2PReference(System.Object)">
      <summary>Adds a reference to an object on a peer-to-peer network.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pUnk">[in] Pointer to the IUnknown interface of the object referenced.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.Close">
      <summary>Releases any resources or interfaces held by the implementation of <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.GetCodeDomProviderName(System.String@)">
      <summary>Retrieves the name of the code compiler or code generator (code DOM provider).</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrProvider">[out] Pointer to a string containing the name of the code DOM provider.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.GetCompilerReference(System.Object@)">
      <summary>Retrieves a pointer to the IUnknown interface of the compiler for the project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppCompilerReference">[out] Pointer to the IUnknown interface of the compiler for the project.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.GetContainedLanguageFactory(Microsoft.VisualStudio.TextManager.Interop.IVsContainedLanguageFactory@)">
      <summary>Returns a pointer to the <see cref="T:Microsoft.VisualStudio.TextManager.Interop.IVsContainedLanguageFactory" /> interface for the project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppContainedLanguageFactory">[out] Pointer to the <see cref="T:Microsoft.VisualStudio.TextManager.Interop.IVsContainedLanguageFactory" /> interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.GetExternalErrorReporter(Microsoft.VisualStudio.TextManager.Interop.IVsReportExternalErrors@)">
      <summary>Retrieves the project's external error reporter, a pointer to an <see cref="T:Microsoft.VisualStudio.TextManager.Interop.IVsReportExternalErrors" /> interface.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppErrorReporter">[out] A pointer to a <see cref="T:Microsoft.VisualStudio.TextManager.Interop.IVsReportExternalErrors" /> interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.GetFileCodeModel(System.Object,System.Object,System.Object@)">
      <summary>Retrieves the code model for a file specified by project and item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pProj">[in] Pointer to the IUnknown interface of the project.</param>
      <param name="pProjectItem">[in] Pointer to the IUnknown interface of the project item.</param>
      <param name="ppCodeModel">[out] Pointer to the IUnknown of the code model.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.GetProjectCodeModel(System.Object,System.Object@)">
      <summary>Retrieves the code model for the project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pProj">[in] Pointer to the IUnknown interface of the project.</param>
      <param name="ppCodeModel">[out] Pointer to the IUnknown of the code model.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.Init(Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectHost)">
      <summary>Initializes an Intellisense project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHost">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectHost" /> interface of the hierarchy node containing the project.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.IsCompilableFile(System.String)">
      <summary>Indicates whether or not a file can be compiled, based on its extension.</summary>
      <returns>Returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" /> if the file can be compiled, <see cref="F:Microsoft.VisualStudio.VSConstants.S_FALSE" /> otherwise.</returns>
      <param name="bstrFileName">[in] String containing the file name.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.IsSupportedP2PReference(System.Object)">
      <summary>Indicates whether or not a peer-to-peer network reference to an object is supported.</summary>
      <returns>Returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" /> if the object can be referenced.</returns>
      <param name="pUnk">[in] Pointer to the IUnknown interface of the referenced object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.IsWebFileRequiredByProject(System.Int32@)">
      <summary>Indicates whether or not an Intellisense project can include Web files. Visual Basic projects cannot, Visual C# projects can.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbReq">[out] Boolean. Set to true if the Web files can be added to the Intellisense project.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.RefreshCompilerOptions">
      <summary>Refreshes the compiler options using settings from the host.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.RemoveAssemblyReference(System.String)">
      <summary>Removes a reference to an assembly.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrAbsPath">[in] String containing the complete path to the assembly.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.RemoveFile(System.String,System.UInt32)">
      <summary>Removes a file from the project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrAbsPath">[in] String containing the complete path to the file.</param>
      <param name="itemid">[in] The item identifier (VSITEMID) of the file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.RemoveP2PReference(System.Object)">
      <summary>Removes a reference to an object over a peer-to-peer network.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pUnk">[in] Pointer to the IUnknown interface of the object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.RenameFile(System.String,System.String,System.UInt32)">
      <summary>Renames a file in the project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrAbsPath">[in] String containing the full path and name of the file.</param>
      <param name="bstrNewAbsPath">[in] String containing the full path and new name of the file.</param>
      <param name="itemid">[in] The file's item identifier (VSITEMID).</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.ResumePostedNotifications">
      <summary>Enables posting of compiler messages.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.StartIntellisenseEngine">
      <summary>Start the Intellisense engine.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.StopIntellisenseEngine">
      <summary>Stop the Intellisense engine.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.SuspendPostedNotifications">
      <summary>Stops posting of compiler messages.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject.WaitForIntellisenseReady">
      <summary>Wait until the Intellisense engine is ready.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectEventSink">
      <summary>Defines the event functions for an Intellisense project. (<see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject" />).</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectEventSink.OnCodeFileChange(System.String,System.String)">
      <summary>Called when the source code file changes.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszOldCodeFile">Path to the old code file.</param>
      <param name="pszNewCodeFile">Path to the new code file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectEventSink.OnConfigChange">
      <summary>Called when the configuration file changes.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectEventSink.OnReferenceChange(System.UInt32,System.String)">
      <summary>Called when a reference in the project changes.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwChangeType">[in] A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.REFERENCECHANGETYPE" /> enumeration.</param>
      <param name="pszAssemblyPath">[in] String that contains the full path to the referenced assembly.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectEventSink.OnStatusChange(System.UInt32)">
      <summary>Method called when the status of the project changes.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwStatus">[in] A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.INTELLIPROJSTATUS" /> enumeration.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectHost">
      <summary>Enables a project hierarchy node to provide information about nested IntelliSense projects (projects implementing <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProject" />) to display in IntelliSense tooltips. Used with contained languages. You can get an instance of this interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsIntellisenseProjectHost" /> (SID_SVsIntellisenseProjectHost) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectHost.CreateFileCodeModel(System.String,System.Object@)">
      <summary>Retrieves the code model for a given file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszFilename">[in] String containing the name of the file.</param>
      <param name="ppCodeModel">[out] Pointer to the IUnknown interface of an instance of the code model.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectHost.GetCompilerOptions(System.String@)">
      <summary>Retrieves the current compiler options.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrOptions">[out] Pointer to a string containing the current compiler options.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectHost.GetHostProperty(System.UInt32,System.Object@)">
      <summary>Retrieves the string value of a host property.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwPropID">[in] A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.HOSTPROPID" /> enumeration such as <see cref="F:Microsoft.VisualStudio.Shell.Interop.HOSTPROPID.HOSTPROPID_PROJECTNAME" />.</param>
      <param name="pvar">[out] Pointer to a variant containing the property value.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectHost.GetOutputAssembly(System.String@)">
      <summary>Returns the name of the output assembly.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrOutputAssembly">[out] Pointer to a string containing the name of the assembly.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectManager">
      <summary>Enables a project hierarchy node to notify listeners of events that change what appears in IntelliSense tooltips, as well as retrieving particular project information. You can get an instance of the interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsIntellisenseProjectManager" /> (SID_SVsIntellisenseProjectManager) service. Used with contained languages.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectManager.AdviseIntellisenseProjectEvents(Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectEventSink,System.UInt32@)">
      <summary>Registers an event sink to receive load status of an IntelliSense project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pSink"> [In] Pointer to an implementation of <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectEventSink" />.</param>
      <param name="pdwCookie"> [out] Pointer to an object of type VSCOOKIE. Used in the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectManager.UnadviseIntellisenseProjectEvents(System.UInt32)" /> method when unregistering the event sink.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectManager.CloseIntellisenseProject">
      <summary>Called by editors to explicitly close an Intellisense project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectManager.CompleteIntellisenseProjectLoad">
      <summary>Called by editors when an Intellisense project is loading and the editor needs to ensure that loading is complete so that it can complete an action.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectManager.GetContainedLanguageFactory(System.String,Microsoft.VisualStudio.TextManager.Interop.IVsContainedLanguageFactory@)">
      <summary>Obtains the contained language factory for a given language.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrLanguage">[in] String containing the name of the language.</param>
      <param name="ppContainedLanguageFactory">[out] Pointer to an <see cref="T:Microsoft.VisualStudio.TextManager.Interop.IVsContainedLanguageFactory" /> interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectManager.OnEditorReady">
      <summary>Called by editors when they are ready. Use this method to delay generating compiler parameters to allow the project to refresh references.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectManager.UnadviseIntellisenseProjectEvents(System.UInt32)">
      <summary>Disconnects an event sink. The inverse of <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectManager.AdviseIntellisenseProjectEvents(Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectEventSink,System.UInt32@)" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwCookie">[in]  The VSCOOKIE value returned by <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectManager.AdviseIntellisenseProjectEvents(Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectEventSink,System.UInt32@)" /> when you registered the event sink.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsItemTypeResolutionService">
      <summary>Makes the connections among referenced projects and assemblies to provide type information to a project node.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsItemTypeResolutionService.InitializeReferences(System.Object)">
      <summary>Initializes the list of assembly references using the <see cref="P:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies" /> property of the <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="punkCompilerParameters">[In] Pointer to a <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsItemTypeResolutionService.ReferenceAdded(System.String)">
      <summary>Called by the project system when you add a new assembly reference.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszReference">[in] Pointer to a string containing the full path and name of the reference.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsItemTypeResolutionService.ReferenceChanged(System.String)">
      <summary>Called by the project system when you remove a reference.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszReference">[in] Pointer to a string containing the full path and name of the reference.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsItemTypeResolutionService.ReferenceRemoved(System.String)">
      <summary>Called by the project system when a reference changes.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszReference">[in] Pointer to a string containing the full path and name of the reference.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsItemTypeResolutionService.Reset">
      <summary>Resets the service.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsItemTypeResolutionService.SetSite(System.Object)">
      <summary>Sets the site for the type resolution service.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="punkVsItemTypeResolutionSite">[in] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsItemTypeResolutionSite" /> interface.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsItemTypeResolutionSite">
      <summary>Provides callback methods for <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsItemTypeResolutionService" /> to track references and assemblies.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsItemTypeResolutionSite.AddReference(System.String)">
      <summary>Adds a reference to the project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrReferencePath">[in] String containing the reference to add.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsItemTypeResolutionSite.IsCodeDirectoryAssembly(System.String,System.Int32@)">
      <summary>Tests whether or not a reference is to a code assembly.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrAssembly">[in] String containing the assembly path and name.</param>
      <param name="pfIsCodeAssembly">[out] Pointer to a Boolean value. Set to true if the reference is to a code assembly; false otherwise.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsItemTypeResolutionSite.WaitForReferencesReady">
      <summary>Ensures any pending compiler parameter generation concerning references is complete.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsLaunchPad2">
      <summary>Executes a command with output displayed to an output pane in the Visual Studio IDE. Similar to <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsLaunchPad" /> but <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsLaunchPad2.ExecCommandEx(System.String,System.String,System.String,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsOutputWindowPane,System.UInt32,System.UInt32,System.String,Microsoft.VisualStudio.Shell.Interop.IVsLaunchPadEvents,Microsoft.VisualStudio.Shell.Interop.IVsLaunchPadOutputParser,System.UInt32[],System.String[])" /> method allows the parsed output string to be in a non-standard format. Executes a command with output displayed to an output pane in the Visual Studio IDE. Similar to <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsLaunchPad" />, but <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsLaunchPad2.ExecCommandEx(System.String,System.String,System.String,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsOutputWindowPane,System.UInt32,System.UInt32,System.String,Microsoft.VisualStudio.Shell.Interop.IVsLaunchPadEvents,Microsoft.VisualStudio.Shell.Interop.IVsLaunchPadOutputParser,System.UInt32[],System.String[])" /> method allows the parsed output string to be in a non-standard format.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLaunchPad2.ExecCommandEx(System.String,System.String,System.String,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsOutputWindowPane,System.UInt32,System.UInt32,System.String,Microsoft.VisualStudio.Shell.Interop.IVsLaunchPadEvents,Microsoft.VisualStudio.Shell.Interop.IVsLaunchPadOutputParser,System.UInt32[],System.String[])">
      <summary>Executes a command with output displayed to an output pane in the IDE and parses the output string in a specified format.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszApplicationName">[in] Application name that is passed to CreateProcess by the environment.</param>
      <param name="pszCommandLine">[in] Command line string that is passed to CreateProcess by the environment.</param>
      <param name="pszWorkingDir">[in] Working directory that is passed to CreateProcess by the environment. Can be null.</param>
      <param name="lpf">[in] Launch pad flags. All existing values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LAUNCHPAD_FLAGS" /> enumeration and all the new values are from <see cref="T:Microsoft.VisualStudio.Shell.Interop._LAUNCHPAD_FLAGS2" /> enumeration</param>
      <param name="pOutputWindowPane">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsOutputWindowPane" /> interface created by <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsOutputWindow.CreatePane(System.Guid@,System.String,System.Int32,System.Int32)" />.</param>
      <param name="nTaskItemCategory">[in] Task item category, if <paramref name="lpf" /> is set to <see cref="F:Microsoft.VisualStudio.Shell.Interop._LAUNCHPAD_FLAGS.LPF_PipeStdoutToTaskList" />. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTASKCATEGORY" /> enumeration.</param>
      <param name="nTaskItemBitmap">[in] Task item bitmap, if <paramref name="lpf" /> is set to <see cref="F:Microsoft.VisualStudio.Shell.Interop._LAUNCHPAD_FLAGS.LPF_PipeStdoutToTaskList" />.</param>
      <param name="pszTaskListSubcategory">[in] Task list subcategory, if <paramref name="lpf" /> is set to <see cref="F:Microsoft.VisualStudio.Shell.Interop._LAUNCHPAD_FLAGS.LPF_PipeStdoutToTaskList" />.</param>
      <param name="pVsLaunchPadEvents">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsLaunchPadEvents" /> interface</param>
      <param name="pOutputParser">[in] Callback for parsing of information from output (may be null).</param>
      <param name="pdwProcessExitCode">[out] Value returned by process.</param>
      <param name="pbstrOutput">[out] All output that was generated. Can be null.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsLaunchPadOutputParser">
      <summary>Parses tool output lines for task list item or navigation information. Implemented by callers of the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsLaunchPad2.ExecCommandEx(System.String,System.String,System.String,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsOutputWindowPane,System.UInt32,System.UInt32,System.String,Microsoft.VisualStudio.Shell.Interop.IVsLaunchPadEvents,Microsoft.VisualStudio.Shell.Interop.IVsLaunchPadOutputParser,System.UInt32[],System.String[])" /> method of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsLaunchPad2" /> interface.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLaunchPadOutputParser.ParseOutputStringForInfo(System.String,System.String[],System.UInt32[],System.UInt32[],System.String[],System.String[])">
      <summary>Calls ParseOutputStringForInfo to the launch pad If task item text is returned, the launch pad creates a task list item by using the information it returned. If only filename and line number information is returned, the launch pad adds the line to the output window and uses the filename and line number as the navigation information for the output line.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszOutputString">[in] One line of output text.</param>
      <param name="pbstrFilename">[out] Fully qualified file name for task list item (may be null).</param>
      <param name="pnLineNum">[out] File line number for task list item (may be null).</param>
      <param name="pnPriority">[out] Priority for task list item (may be null).</param>
      <param name="pbstrTaskItemText">[out] Description text for task list item (may be null).</param>
      <param name="pbstrHelpKeyword">[out] Help keyword for task list item (may be null).</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2">
      <summary>Describes the library and is used by the Object Manager to access pertinent symbols.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2.AddBrowseContainer(Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA[],System.UInt32@,System.String[])">
      <summary>Adds a browse container to be browsed by the library.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pcdComponent">[in] Specifies attributes that identify the added component.</param>
      <param name="pgrfOptions">[in, out] Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_ADDREMOVEOPTIONS" /> enumeration.</param>
      <param name="pbstrComponentAdded">[out, optional] pointer to a <paramref name="bstr" /> containing the text to display for the added component.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2.CreateNavInfo(Microsoft.VisualStudio.Shell.Interop.SYMBOL_DESCRIPTION_NODE[],System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsNavInfo@)">
      <summary>Reserved for future use.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="rgSymbolNodes">[in] An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.SYMBOL_DESCRIPTION_NODE" /> objects describing each node in the tree.</param>
      <param name="ulcNodes">[in] The number of objects in the <paramref name="rgSymbolNodes" /> array.</param>
      <param name="ppNavInfo">[out] Returns an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> object representing the navigation information for all nodes in the tree.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2.GetBrowseContainersForHierarchy(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSBROWSECONTAINER[],System.UInt32[])">
      <summary>Returns an array of Browse Containers that correspond to the given <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy">[in] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface.</param>
      <param name="celt">[in] The number of elements in the <paramref name="rgBrowseContainers" /> array.</param>
      <param name="rgBrowseContainers">[in, out] On input, null. On output, an array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSBROWSECONTAINER" /> structures.</param>
      <param name="pcActual">[out] The actual number of containers returned in <paramref name="rgBrowseContainers" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2.GetGuid(System.IntPtr@)">
      <summary>Returns a pointer to the GUID of the library.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppguidLib">[out] Pointer to the GUID of the current library.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2.GetLibFlags2(System.UInt32@)">
      <summary>Returns flags associated with the library.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pgrfFlags">[out] Pointer to a flag indicating which flags apply to the current library.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2.GetLibList(Microsoft.VisualStudio.Shell.Interop.LIB_PERSISTTYPE,Microsoft.VisualStudio.Shell.Interop.IVsLiteTreeList@)">
      <summary>Returns the list of browse containers currently being browsed by the library as an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsLiteTreeList" /> interface.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="lptType">[in] Specifies type of library to return. For a list of <paramref name="lptType" /> values, see <see cref="T:Microsoft.VisualStudio.Shell.Interop.LIB_PERSISTTYPE" />.</param>
      <param name="ppList">[out] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsLiteTreeList" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2.GetList2(System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2[],Microsoft.VisualStudio.Shell.Interop.IVsObjectList2@)">
      <summary>Returns the requested list of symbols as an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsObjectList" /> interface.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ListType">[in] Specifies list type. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTTYPE2" /> enumeration.</param>
      <param name="flags">[in] Specifies flags. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTFLAGS" /> enumeration.</param>
      <param name="pobSrch">[in] Specifies a pointer to a <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2" /> structure.</param>
      <param name="ppIVsObjectList2">[out] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsObjectList" /> interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2.GetSeparatorString(System.IntPtr)">
      <summary>Returns the string used to separate symbols for this type of Browse Container.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszSeparator">[out] Pointer to a null-terminated string containing the language specific scope operator.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2.GetSupportedCategoryFields2(System.Int32,System.UInt32@)">
      <summary>Returns the category values supported by the library for a specified category.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="Category">[in] Specifies a library's category type. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_CATEGORY2" /> enumeration.</param>
      <param name="pgrfCatField">[out] Pointer to a category field object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2.LoadState(Microsoft.VisualStudio.OLE.Interop.IStream,Microsoft.VisualStudio.Shell.Interop.LIB_PERSISTTYPE)">
      <summary>Asks the library to load its persisted global Browse Containers.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pIStream">[in] Pointer to an <see cref="T:Microsoft.VisualStudio.OLE.Interop.IStream" /> interface.</param>
      <param name="lptType">[in] Specifies the persisted type of the library. Always <see cref="F:Microsoft.VisualStudio.Shell.Interop.LIB_PERSISTTYPE.LPT_GLOBAL" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2.RemoveBrowseContainer(System.UInt32,System.String)">
      <summary>Removes a Browse Container being browsed by the library.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwReserved">[in] Reserved. Set this parameter to null.</param>
      <param name="pszLibName">[in] Pointer to a null-terminated string containing the library name.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2.SaveState(Microsoft.VisualStudio.OLE.Interop.IStream,Microsoft.VisualStudio.Shell.Interop.LIB_PERSISTTYPE)">
      <summary>Asks the library to save its persisted global Browse Containers.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pIStream">[in] Pointer to an <see cref="T:Microsoft.VisualStudio.OLE.Interop.IStream" /> interface.</param>
      <param name="lptType">[in] Specifies the persisted type of the library. Always <see cref="F:Microsoft.VisualStudio.Shell.Interop.LIB_PERSISTTYPE.LPT_GLOBAL" /> from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.LIB_PERSISTTYPE" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2.UpdateCounter(System.UInt32@)">
      <summary>Returns the current change counter for the library and is used to indicate that the library contents have changed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCurUpdate">[out] Returns the current update counter.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2Ex">
      <summary>Enables libraries to provide different ObjectBrowser information when profiles change, or references are added or removed. Extends, but does not inherit from, <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2Ex.DoIdle">
      <summary>Give idle time to the library.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2Ex.GetNavInfoContainerData(Microsoft.VisualStudio.Shell.Interop.IVsNavInfo,Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA[])">
      <summary>Gets information about the container of an object specified by an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> interface.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pNavInfo">[in] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> interface of the contained object.</param>
      <param name="pcsdComponent">[out] Pointer to a <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA" /> providing information about the container.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2Ex.ProfileSettingsChanged">
      <summary>Tells the library that profile settings have changed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2Ex.SetContainerAsUnchanging(Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA[],System.Int32)">
      <summary>Gives the library a suggestion that the physical is unchanging.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pcsdComponent">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA" /> of the container.</param>
      <param name="fUnchanging">[in] Boolean. Set to true to indicate the container is unchanging.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVSMDTypeResolutionService">
      <summary>Makes an instance of <see cref="T:System.ComponentModel.Design.ITypeResolutionService" /> available that you can use in native (unmanaged) code. You can get an instance of the interface through the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IWebApplicationCtxSvc.GetItemContext(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,Microsoft.VisualStudio.OLE.Interop.IServiceProvider@)" /> method of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProject" /> interface. You can also obtain the interface through the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVSMDTypeResolutionService" /> (SID_SVSMDTypeResoluionService) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVSMDTypeResolutionService.TypeResolutionService(System.Object@)">
      <summary>Gets a pointer to the <see cref="T:System.ComponentModel.Design.ITypeResolutionService" /> interface.</summary>
      <returns>Returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" /> if the method succeeds; otherwise, returns an error code.</returns>
      <param name="ppTrs">[out] Pointer to the type resolution service interface to use when resolving types.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsMenuEditorTransactionEvents">
      <summary>Enables treating a group of menu editor actions as a transaction. Used by the form designer to support undoing actions.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsMenuEditorTransactionEvents.BeginTransaction(System.UInt32)">
      <summary>Marks the beginning of a transaction for an editor event.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="trans">[in] The menu editor action represented by the transaction. A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__MENUEDITOR_TRANSACTION" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsMenuEditorTransactionEvents.EndTransaction(System.UInt32)">
      <summary>Marks the end of a transaction for an editor event.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
      <param name="trans">[in] The menu editor action represented by the transaction. A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__MENUEDITOR_TRANSACTION" /> enumeration.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsMonitorSelection2">
      <summary>Provides information about an empty context (when nothing is selected) and supports implementation of custom selection identifiers. Extends, but does not inherit from, <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsMonitorSelection" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsMonitorSelection2.GetElementID(System.Guid@,System.UInt32@)">
      <summary>Retrieves the element identifier for a VsPackage-defined Element of Selection.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="rguidElement">[in] The GUID of the element whose identifier is being retrieved.</param>
      <param name="pElementId">[out] The element identifier.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsMonitorSelection2.GetEmptySelectionContext(Microsoft.VisualStudio.Shell.Interop.IVsTrackSelectionEx@)">
      <summary>Retrieves the empty selection context.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppEmptySelCtxt">[out] The emply selection context.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsNavigationTool">
      <summary>Replaces <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsClassView" /> and IVsObjectBrowser.to manipulate the ClassView and ObjectBrowser.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsNavigationTool.GetSelectedSymbols(Microsoft.VisualStudio.Shell.Interop.IVsSelectedSymbols@)">
      <summary>Get the symbols selected in the object or class browser.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppIVsSelectedSymbols">[out] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSelectedSymbols" /> interface providing access to the selected symbols.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsNavigationTool.NavigateToNavInfo(Microsoft.VisualStudio.Shell.Interop.IVsNavInfo)">
      <summary>Tells the class or object browser to navigate to a particular item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pNavInfo">[in] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> interface indicating the item to which to navigate. You can get navigation information from the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetNavInfo(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsNavInfo@)" /> method of IVsObjectList2.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsNavigationTool.NavigateToSymbol(System.Guid@,Microsoft.VisualStudio.Shell.Interop.SYMBOL_DESCRIPTION_NODE[],System.UInt32)">
      <summary>Tells the class or object browser to navigate to items in a library.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidLib">[in] The GUID of the library containing the symbol.</param>
      <param name="rgSymbolNodes">[in] An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.SYMBOL_DESCRIPTION_NODE" /> structures describing the symbols.</param>
      <param name="ulcNodes">[in] Number of elements in <paramref name="rgSymbolNodes" />.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo">
      <summary>Identifies a symbol in the hierarchical tree of symbols. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo.EnumCanonicalNodes(Microsoft.VisualStudio.Shell.Interop.IVsEnumNavInfoNodes@)">
      <summary>Defines a collection of nodes contained in the canonical path of the symbol.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppEnum">[out] The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsEnumNavInfoNodes" />. Identifies the collection of nodes in the canonical path of the symbol.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo.EnumPresentationNodes(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsEnumNavInfoNodes@)">
      <summary>Defines a collection of nodes contained in the presentation path of the symbol.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwFlags">[in] One of the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTFLAGS" /> values. Specifies a symbol-browsing tool, such as Class View, Object Browser, or Call Browser (only available in C++).</param>
      <param name="ppEnum">[out] The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsEnumNavInfoNodes" />. Identifies the collection of nodes in the presentation path of the symbol.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo.GetLibGuid(System.Guid@)">
      <summary>Identifies the symbol library. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pGuid">[out] A <see cref="T:System.Guid" /> identifying the library.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo.GetSymbolType(System.UInt32@)">
      <summary>Identifies the type of the symbol. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pdwType">[out] One of the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTTYPE2" /> values. </param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfoNode">
      <summary>Identifies a node in the path of the symbol.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsNavInfoNode.get_Name(System.String@)">
      <summary>Gets the name of the node.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrName">[out] The name of the node. The name must be unique. It can be different from the displayed name. If the node is renamed, the new name is returned. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsNavInfoNode.get_Type(System.UInt32@)">
      <summary>Gets the type of the node.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pllt">[out] One of the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTTYPE2" /> values.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsObjectBrowserDescription3">
      <summary>Provides a means for entering Object Browser description text.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectBrowserDescription3.AddDescriptionText3(System.String,Microsoft.VisualStudio.Shell.Interop.VSOBDESCRIPTIONSECTION,Microsoft.VisualStudio.Shell.Interop.IVsNavInfo)">
      <summary>Adds elements of description text to the Object Browser.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pText">[in] Pointer to the text string that contains the description text to add.</param>
      <param name="obdSect">[in] Identifies which element of the description text is to be filled in by <paramref name="pText" />. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBDESCRIPTIONSECTION" /> enumeration.</param>
      <param name="pHyperJump">[in] Specifies a <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBJECTINFO" /> structure containing navigation information to a source file containing the referenced object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectBrowserDescription3.ClearDescriptionText">
      <summary>Clears the Object Browser description text.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2">
      <summary>Provides information about symbols in a list that is part of an overall organization in the tree view (<see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsLiteTree" />) of the code browsing tools.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.CanDelete(System.UInt32,System.Int32@)">
      <summary>Returns a flag indicating if the given list item can be deleted.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="pfOK">[out] Pointer to a flag indicating whether the item can be deleted.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.CanGoToSource(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSOBJGOTOSRCTYPE,System.Int32@)">
      <summary>Returns a flag indicating if navigation to the given list item's source is supported.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="SrcType">[in] Specifies the source type. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBJGOTOSRCTYPE" /> enumeration.</param>
      <param name="pfOK">[out] Pointer to a flag indicating whether navigation is supported.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.CanRename(System.UInt32,System.String,System.Int32@)">
      <summary>Returns a flag indicating if the given list item can be renamed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="pszNewName">[in] Pointer to a null-terminated string containing the new name.</param>
      <param name="pfOK">[out] Pointer to a flag indicating whether an item can be renamed.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.CountSourceItems(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy@,System.UInt32@,System.UInt32@)">
      <summary>Returns the hierarchy and the number of ItemIDs corresponding to source files for the given list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="ppHier">[out] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface.</param>
      <param name="pItemid">[out] Specifies the <paramref name="itemid" /> of an item within the hierarchy. Values are described in VSITEMID.</param>
      <param name="pcItems">[out] Pointer to the count of items.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.DoDelete(System.UInt32,System.UInt32)">
      <summary>Asks the given list item to do the delete operation.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item to delete.</param>
      <param name="grfFlags">[in] Values taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBJOPFLAGS" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.DoDragDrop(System.UInt32,Microsoft.VisualStudio.OLE.Interop.IDataObject,System.UInt32,System.UInt32@)">
      <summary>Asks the given list item to handle a drag-and-drop operation.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="pDataObject">[in] Pointer to an IDataObject being dropped.</param>
      <param name="grfKeyState">[in] Current state of the keyboard and the mouse modifier keys.</param>
      <param name="pdwEffect">[in, out] On input, the effect being requested. On output, the effect that your object list allows.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.DoRename(System.UInt32,System.String,System.UInt32)">
      <summary>Asks the given list item to do the rename operation.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="pszNewName">[in] Pointer to a null-terminated string containing the new name.</param>
      <param name="grfFlags">[in] Flag indicating that Index is part of a multi-select. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBJOPFLAGS" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.EnumClipboardFormats(System.UInt32,System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSOBJCLIPFORMAT[],System.UInt32[])">
      <summary>Asks the given list item to enumerate its supported clipboard formats.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="grfFlags">[in] Specifies multi-selection. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBJCFFLAGS" /> enumeration.</param>
      <param name="celt">[in] Specifies the element count of <paramref name="rgcfFormats" />.</param>
      <param name="rgcfFormats">[in, out] Specifies an array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBJCLIPFORMAT" /> structures defining the formats supported.</param>
      <param name="pcActual">[out] Pointer to a count of formats in the <paramref name="rgcfformats" /> array actually returned.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.FillDescription(System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsObjectBrowserDescription2)">
      <summary>Asks the list item to provide description text to be used in the object browser.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="grfOptions">[in] Specifies description options. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBJDESCOPTIONS" /> enumeration</param>
      <param name="pobDesc">[in] Specifies a <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsObjectBrowserDescription2" /> interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.FillDescription2(System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsObjectBrowserDescription3)">
      <summary>Asks the list item to provide description text to be used in the object browser.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="grfOptions">[in] Specifies description options. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBJDESCOPTIONS" /> enumeration.</param>
      <param name="pobDesc">[in] Specifies a <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsObjectBrowserDescription3" /> interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetBrowseObject(System.UInt32,System.Object@)">
      <summary>Returns a pointer to the property browse IDispatch for the given list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="ppdispBrowseObj">[out] Pointer to an IDispatch object that is used to populate the Properties window.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetCapabilities2(System.UInt32@)">
      <summary>Returns an object list's capabilities.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pgrfCapabilities">[out] Specifies an object list's capabilities. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTCAPABILITIES" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetCategoryField2(System.UInt32,System.Int32,System.UInt32@)">
      <summary>Returns the value for the specified category for the given list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="Category">[in] Specifies the category of interest. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.LIB_CATEGORY" /> enumeration.</param>
      <param name="pfCatField">[out] Pointer to a variable holding the value returned.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetClipboardFormat(System.UInt32,System.UInt32,Microsoft.VisualStudio.OLE.Interop.FORMATETC[],Microsoft.VisualStudio.OLE.Interop.STGMEDIUM[])">
      <summary>Asks the given list item to renders a specific clipboard format that it supports.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="grfFlags">[in] Specifies multi-selection. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBJCFFLAGS" /> enumeration.</param>
      <param name="pFormatetc">[in] Pointer to a <see cref="T:Microsoft.VisualStudio.OLE.Interop.FORMATETC" /> structure containing clipboard format information.</param>
      <param name="pMedium">[in] Pointer to a <see cref="T:Microsoft.VisualStudio.OLE.Interop.STGMEDIUM" /> structure indicating the data transfer medium.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetContextMenu(System.UInt32,System.Guid@,System.Int32@,Microsoft.VisualStudio.OLE.Interop.IOleCommandTarget@)">
      <summary>Allows the list to provide a different context menu and IOleCommandTarget for the given list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="pclsidActive">[out] Specifies the CLSID of the menu group containing your menu.</param>
      <param name="pnMenuId">[out] Pointer to an integer containing the menu id.</param>
      <param name="ppCmdTrgtActive">[out] Pointer to the list's or the library's IOleCommandTarget interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetDisplayData(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSTREEDISPLAYDATA[])">
      <summary>Retrieves data to draw the requested tree list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the node of interest.</param>
      <param name="pData">[out] Pointer to a <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTREEDISPLAYDATA" /> structure containing the display data.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetExpandable(System.UInt32,System.Int32@)">
      <summary>Method information not provided. Return <see cref="F:Microsoft.VisualStudio.VSConstants.E_NOTIMPL" />.</summary>
      <param name="index">Do not use.</param>
      <param name="pfExpandable">Do not use.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetExpandable3(System.UInt32,System.UInt32,System.Int32@)">
      <summary>Returns a flag indicating whether the given list item is expandable.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="ListTypeExcluded">[in] Specifies the list types to be excluded. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTTYPE" /> enumeration. This is primarily to remove LLT_MEMBERS from consideration in object browser, where they are shown in a separate pane.</param>
      <param name="pfExpandable">[out] Pointer to a flag indicating expandability.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetExpandedList(System.UInt32,System.Int32@,Microsoft.VisualStudio.Shell.Interop.IVsLiteTreeList@)">
      <summary>Expands a tree list node.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the child node of the current tree list to be expanded.</param>
      <param name="pfCanRecurse">[out] Pointer to a flag indicating that the tree list can recurse.</param>
      <param name="pptlNode">[out] Pointer to the selected node's <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsLiteTreeList" /> interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetExtendedClipboardVariant(System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSOBJCLIPFORMAT[],System.Object@)">
      <summary>Asks the given list item to renders a specific clipboard format as a variant.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="grfFlags">[in] Specifies multi-selection. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBJCFFLAGS" /> enumeration.</param>
      <param name="pcfFormat">[in] Specifies a <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBJCLIPFORMAT" /> structure defining the format requested.</param>
      <param name="pvarFormat">[out] Specifies a pointer to a variant where you render the data. The environment frees the variant when it is done with it.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetFlags(System.UInt32@)">
      <summary>Returns the attributes of the current tree list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pFlags">[out] Pointer to a variable indicating attributes of the current tree list. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSTREEFLAGS" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetItemCount(System.UInt32@)">
      <summary>Returns the number of items in the current tree list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCount">[out] Pointer to the count of the tree list items.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetList2(System.UInt32,System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2[],Microsoft.VisualStudio.Shell.Interop.IVsObjectList2@)">
      <summary>Returns a child <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2" /> for the specified category.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="ListType">[in] Specifies the type of list being requested. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTTYPE" /> enumeration.</param>
      <param name="flags">[in] Specifies the flags that control the request for object list information. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTFLAGS" /> enumeration.</param>
      <param name="pobSrch">[in] Unused. Should be ignored.</param>
      <param name="ppIVsObjectList2">[out] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2" /> interface of the returned child list.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetListChanges(System.UInt32@,Microsoft.VisualStudio.Shell.Interop.VSTREELISTITEMCHANGE[])">
      <summary>Returns changes that have occurred in a tree list. For future use only. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pcChanges">[in, out] On input, the size of the <paramref name="prgListChanges" /> array. On output, pointer to a count of changes.</param>
      <param name="prgListChanges">[in] Pointer to an array that receives any changes that have been made to the list.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetMultipleSourceItems(System.UInt32,System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSITEMSELECTION[])">
      <summary>Returns the ItemID corresponding to source files for the given list item if more than one.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="grfGSI">[in] Flag providing information about how the selected items should be returned. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSGSIFLAGS" /> enumeration.</param>
      <param name="cItems">[in] The number of items returned in <paramref name="rgItemSel" />.</param>
      <param name="rgItemSel">[out] Array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSITEMSELECTION" /> structures that contain an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> pointer and item identifier for each selected item.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetNavigationInfo2(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSOBNAVIGATIONINFO3[])">
      <summary>Fills the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBNAVIGATIONINFO2" /> structure for the given list item allowing the list to navigate back to it through <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.LocateNavigationInfo2(Microsoft.VisualStudio.Shell.Interop.VSOBNAVIGATIONINFO3[],Microsoft.VisualStudio.Shell.Interop.VSOBNAVNAMEINFONODE2[],System.Int32,System.Int32@,System.UInt32@)" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="pobNav">[in, out] Specifies navigation information. Values are placed in a <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBNAVIGATIONINFO2" /> structure.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetNavInfo(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsNavInfo@)">
      <summary>Reserved for future use.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] The index of the item for which to get navigation information.</param>
      <param name="ppNavInfo">[out] Returns an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> object that contains the requested information.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetNavInfoNode(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsNavInfoNode@)">
      <summary>Reserved for future use.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] The index of the item for which to get navigation information.</param>
      <param name="ppNavInfoNode">[out] Returns an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfoNode" /> object that contains the requested information.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetProperty(System.UInt32,System.Int32,System.Object@)">
      <summary>Returns the specified property for the specified list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] The index of the item for which to get a property.</param>
      <param name="propid">[in] A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBJLISTELEMPROPID" /> enumeration specifying the property to get.</param>
      <param name="pvar">[out] Returns a VARIANT object containing the requested value.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetSourceContext(System.UInt32,System.IntPtr,System.UInt32@)">
      <summary>Returns a source filename and line number for the given list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="pszFilename">[out] Pointer to a null-terminated string containing the file name. You must allocate this buffer and free it on the list's final Release, but you can reuse this buffer for multiple calls to this method.</param>
      <param name="pulLineNum">[out] Specifies a line number.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetText(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSTREETEXTOPTIONS,System.String@)">
      <summary>Returns a pointer to the text representations for the requested tree list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the zero based index of the item of interest.</param>
      <param name="tto">[in] Specifies the text type being requested. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTREETEXTOPTIONS" /> enumeration.</param>
      <param name="ppszText">[out] Pointer to a text string from the specified tree list item. Implementers must allocate this string and keep the pointer valid as per the remarks below.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetTipText(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSTREETOOLTIPTYPE,System.String@)">
      <summary>Returns a pointer to the tool tip text for the requested tree list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the node of interest.</param>
      <param name="eTipType">[in] Specifies the type of tool tip text. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTREETOOLTIPTYPE" /> enumeration.</param>
      <param name="ppszText">[out] Pointer to a text string containing the tree list item's tip text.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetUserContext(System.UInt32,System.Object@)">
      <summary>Returns the user context object for the given list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="ppunkUserCtx">[out] Pointer to a context bag returned as an IUnknown interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GoToSource(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSOBJGOTOSRCTYPE)">
      <summary>Navigates to the source for the given list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="SrcType">[in] Specifies the source type. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBJGOTOSRCTYPE" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.LocateExpandedList(Microsoft.VisualStudio.Shell.Interop.IVsLiteTreeList,System.UInt32@)">
      <summary>Returns a pointer to an index number of the specified tree list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ExpandedList">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsLiteTreeList" /> interface that specifies an expanded list.</param>
      <param name="iIndex">[out] Pointer to an integer containing the index of the specified tree list.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.LocateNavigationInfo2(Microsoft.VisualStudio.Shell.Interop.VSOBNAVIGATIONINFO3[],Microsoft.VisualStudio.Shell.Interop.VSOBNAVNAMEINFONODE2[],System.Int32,System.Int32@,System.UInt32@)">
      <summary>Returns the index of the list item corresponding to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBNAVIGATIONINFO2" /> structure.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pobNav">[in] Specifies navigation information. Values are in a <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBNAVIGATIONINFO2" /> structure.</param>
      <param name="pobName">[in] Specifies the name of the node of interest. Values are in a <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBNAVNAMEINFONODE" /> structure.</param>
      <param name="fDontUpdate">[in] Flag indicating that no update should be made.</param>
      <param name="pfMatchedName">[out] Pointer to a flag indicating a matched name was found.</param>
      <param name="pIndex">[out] Pointer to the index of the located item.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.LocateNavInfoNode(Microsoft.VisualStudio.Shell.Interop.IVsNavInfoNode,System.UInt32@)">
      <summary>Reserved for future use.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pNavInfoNode">[in] An <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfoNode" /> object representing the navigation information for a node.</param>
      <param name="pulIndex">[out] Returns the index of the list item that corresponds to the specified navigation node.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.OnClose(Microsoft.VisualStudio.Shell.Interop.VSTREECLOSEACTIONS[])">
      <summary>Notifies the current tree list that it is being closed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ptca">[out] Specifies to the tree view the action to take when closing this tree list. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTREECLOSEACTIONS" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.QueryDragDrop(System.UInt32,Microsoft.VisualStudio.OLE.Interop.IDataObject,System.UInt32,System.UInt32@)">
      <summary>Returns a flag indicating whether the given list item supports a drag-and-drop operation.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="pDataObject">[in] Pointer to an IDataObject being dropped.</param>
      <param name="grfKeyState">[in] Current state of the keyboard and the mouse modifier keys.</param>
      <param name="pdwEffect">[in, out] On input, the effect being requested. On output, the effect that your object list allows.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.ShowHelp(System.UInt32)">
      <summary>Allows the list to display help for the given list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.ToggleState(System.UInt32,System.UInt32@)">
      <summary>Tells the requested tree item to toggle its checked state if it has check boxes.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the tree list item of interest.</param>
      <param name="ptscr">[out] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSTREESTATECHANGEREFRESH" /> value.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.UpdateCounter(System.UInt32@,System.UInt32@)">
      <summary>Returns the current change counter for the tree list, and is used to indicate that the list contents have changed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCurUpdate">[out] Pointer to the update counter of the current tree list.</param>
      <param name="pgrfChanges">[out] Specifies changes that have occurred. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSTREEITEMCHANGESMASK" /> enumeration.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsObjectManager2">
      <summary>Used by a VSPackage to register and unregister the symbol libraries with the Visual Studio object manager and create component sets that can be browsed. To obtain a reference to the Visual Studio object manager, call global service provider which is passed to you by the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsPackage.SetSite(Microsoft.VisualStudio.OLE.Interop.IServiceProvider)" /> method. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectManager2.CreateCombinedBrowseComponentSet(Microsoft.VisualStudio.Shell.Interop.IVsCombinedBrowseComponentSet@)">
      <summary>Creates an empty component set which cam be manually populated with the components from simple sets and removes duplicate components. The component set can be used by a library to present project references in the Object Browser.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppCombinedSet">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsCombinedBrowseComponentSet" /> represents an empty component set, which can be populated with the symbols used in the Visual Studio symbol browsing tool such as Class View and Object Browser.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectManager2.CreateProjectReferenceSet(System.Object,Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet@)">
      <summary>Creates a simple component set which is automatically populated and synchronized with Visual Studio project references. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pProject">An object that implements <see cref="T:VSLangProj.VSProject" />.</param>
      <param name="ppSet">A component set populated with Visual Studio project references.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectManager2.CreateSimpleBrowseComponentSet(System.UInt32,System.Guid[],System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet@)">
      <summary>Creates an empty component set which can be manually populated with components that can be browsed. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="Type">One of the <see cref="T:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_TYPE" /> values. </param>
      <param name="rgguidLibs">An array of <see cref="T:System.Guid" /> guids that identify the symbol libraries If <paramref name="Type" /> is set to <see cref="F:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_TYPE.BCST_INCLUDE_LIBRARIES" />, the component set uses the libraries specified in the guid array to browse the components added to the set. The <paramref name="rgguidLibs" /> cannot be a null in this case.If <paramref name="Type" /> is set to <see cref="F:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_TYPE.BCST_EXCLUDE_LIBRARIES" />, the component set excludes the libraries specified in the guid array from browsing the components added to the set. If the <paramref name="rgguidLibs" /> is null, the set does not exclude any libraries.</param>
      <param name="ulcLibs">Number of elements in the guid array.</param>
      <param name="ppSet">An empty set that can be populated with components that can be browsed. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectManager2.EnumLibraries(Microsoft.VisualStudio.Shell.Interop.IVsEnumLibraries2@)">
      <summary>Retrieves a list of all symbol libraries currently registered with the Visual Studio object manager.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppEnum">[out] The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsEnumLibraries2" /> that represents an enumeration of all currently registered symbol libraries.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectManager2.FindLibrary(System.Guid@,Microsoft.VisualStudio.Shell.Interop.IVsLibrary2@)">
      <summary>Finds a specific symbol library registered with the with the Visual Studio object manager.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidLibrary">[in] The <see cref="T:System.Guid" /> that identifies the registered library. For more information, see vsshell80.idl, VS Browse Libraries section. </param>
      <param name="ppLib">[out] The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2" /> that represents requested library. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectManager2.GetListAndIndex(Microsoft.VisualStudio.Shell.Interop.IVsNavInfo,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsObjectList2@,System.UInt32@)">
      <summary>Finds an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2" /> and an index of a symbol defined by <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pNavInfo">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> that identifies a symbol in the hierarchical tree of symbols.</param>
      <param name="dwFlags">A single value or a combination of the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTFLAGS" /> values. Specifies a symbol browsing tool, such as Class View or Object Browser</param>
      <param name="ppList">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2" /> that provides information about the symbol.</param>
      <param name="pIndex">The position of the symbol in the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2" /> zero-based list. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectManager2.ParseDataObject(Microsoft.VisualStudio.OLE.Interop.IDataObject,Microsoft.VisualStudio.Shell.Interop.IVsSelectedSymbols@)">
      <summary>Parses the data object created by Class View during drag-drop or copy operations.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pIDataObject">The IDataObject:IUnknown that contains row data provided by Class View from drag-drop or copy operations. </param>
      <param name="ppSymbols">The symbols currently selected in Class View or Object Browser tools.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectManager2.RegisterLibrary(Microsoft.VisualStudio.Shell.Interop.IVsLibrary2,System.UInt32@)">
      <summary>Registers a symbol library with the Visual Studio object manager.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pLib">[in] The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2" /> that represents a library registered with the object manager.</param>
      <param name="pdwCookie">[out] The Cookie that identifies the registered library.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectManager2.RegisterSimpleLibrary(Microsoft.VisualStudio.Shell.Interop.IVsSimpleLibrary2,System.UInt32@)">
      <summary>Registers a managed code symbol library with the Visual Studio object manager.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pLib">[in] The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleLibrary2" /> that represents a managed code library.</param>
      <param name="pdwCookie">[out]The cookie that identifies the registered library.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectManager2.UnregisterLibrary(System.UInt32)">
      <summary>Unregisters a symbol library.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwCookie">[in] The cookie that identifies the library. The cookie is assigned during the library registration.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsOpenProjectOrSolutionDlg">
      <summary>Opens a Solution or Project using the standard open dialog boxes.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsOpenProjectOrSolutionDlg.OpenProjectOrSolutionViaDlg(System.UInt32,System.String,System.String,System.Guid@)">
      <summary>Opens a Solution or Project using the standard open dialog boxes.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
      <param name="grfProjSlnDlgFlags">[in] The options for the dialog box.</param>
      <param name="pwzStartDirectory">[in] Start directory.</param>
      <param name="pwzDialogTitle">[in] Dialog box title. Leave null for default title.</param>
      <param name="rguidProjectType">[in] Specifies the project type to use with <see cref="F:Microsoft.VisualStudio.Shell.Interop.__VSPROJSLNDLGFLAGS.PSDF_DirectoryPicker" />.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsOutputGroup2">
      <summary>Allows projects to group outputs according to usage.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsOutputGroup2.get_CanonicalName(System.String@)">
      <summary>Returns the canonical name of the output group.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrCanonicalName">[out] Pointer to the canonical name of the output group.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsOutputGroup2.get_DeployDependencies(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsDeployDependency[],System.UInt32[])">
      <summary>Provides access to one or more deployment dependencies.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="celt">[in] Number of requested deployment dependencies.</param>
      <param name="rgpdpd">[in, out] On input, pointer to an interface array of size <paramref name="celt" />. On output, pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDeployDependency" /> interface array that contains either the number of interfaces specified by <paramref name="celt" /> or the number available.</param>
      <param name="pcActual">[out, optional] Pointer to the actual number of dependencies returned in <paramref name="pgpdpd" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsOutputGroup2.get_Description(System.String@)">
      <summary>Returns the description of an output group.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrDescription">[out] Pointer to the description of an output group.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsOutputGroup2.get_DisplayName(System.String@)">
      <summary>Returns the display name of the output group.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrDisplayName">[out] Pointer to the display name.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsOutputGroup2.get_KeyOutput(System.String@)">
      <summary>Returns the canonical name of the key output group.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrCanonicalName">[out] Pointer to the canonical name of the key output group.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsOutputGroup2.get_KeyOutputObject(Microsoft.VisualStudio.Shell.Interop.IVsOutput2@)">
      <summary>Gets an instance of the key output group</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppKeyOutput">[out] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsOutput2" /> interface that contains information about the key output group.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsOutputGroup2.get_Outputs(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsOutput2[],System.UInt32[])">
      <summary>Returns an array of pointers to <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsOutput2" /> interfaces providing access to a configuration's output items.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="celt">[in] Number of output items requested.</param>
      <param name="rgpcfg">[in, out] On input, a pointer to an array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsOutput2" /> interfaces for the requested output items. On output, an array containing the number of entries specified by <paramref name="celt" />.</param>
      <param name="pcActual">[out, optional] Pointer to the number of actual outputs.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsOutputGroup2.get_ProjectCfg(Microsoft.VisualStudio.Shell.Interop.IVsProjectCfg2@)">
      <summary>Returns a pointer to the configuration's <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectCfg2" /> interface.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppIVsProjectCfg2">[out] Back pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectCfg2" /> interface for the requested project configuration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsOutputGroup2.get_Property(System.String,System.Object@)">
      <summary>Gets the value of a property.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszProperty">[in] The name of the property to get.</param>
      <param name="pvar">[out] Pointer to the value of the property.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsOutputWindow2">
      <summary>Provides information about the active pane in of the OutputWindow. Extends, but does not inherit from, <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsOutputWindow" />. Implemented by the environment. You can get an instance of the interface by querying <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsOutputWindow" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsOutputWindow2.GetActivePaneGUID(System.Guid@)">
      <summary>Returns the GUID of the active pane.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pguidPane">[out] Pointer to the GUID of the active pane. Set to GUID_NULL if there is no active pane.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsPackageDynamicToolOwnerEx">
      <summary>Enables dynamic control of tool window visibility. This interface extends the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsPackageDynamicToolOwner" /> interface by adding a parameter for the multi-instance ID. This version controls the number of instances that are shown, while the previous version controls only the kind of tool window that is shown, regardless of its instance ID.This primarily affects tool windows that have the <see cref="F:Microsoft.VisualStudio.Shell.Interop.__VSCREATETOOLWIN.CTW_fForceCreate" /> flag that causes them to be loaded by the shell on startup or when the context is changed. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPackageDynamicToolOwnerEx.QueryShowTool(System.Guid@,System.UInt32,System.Int32@)">
      <summary>Enables the VSPackage to control whether to show or hide the tool window. The shell calls this method when the user switches views or contexts, for example Design, Debugging, Full Screen.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="rguidPersistenceSlot">[in] The GUID of the window.</param>
      <param name="dwId">[in] The instance ID of the tool window.</param>
      <param name="pfShowTool">[out] true if the tool window is to be displayed, otherwise false.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsParentProject2">
      <summary>Creates nested projects. You can get an instance of the interface by querying an instance of <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsParentProject2.AddNestedSolution(System.UInt32,System.UInt32,System.String)">
      <summary>Enables addition of the contents of a solution, in the same that it's done through the user interface, to a project (for example, a solution folder).</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="itemidLoc">[In] The item ID (VSITEMID) of the item to add.</param>
      <param name="grfOpenOpts">[In] Bit flags specifying solution file options. Constructed using values from the <see cref="E:Microsoft.VisualStudio.Shell.Interop.__VSSLNOPENOPTIONS" /> enumeration.</param>
      <param name="pszFilename">[In] Pointer to a string containing the filename.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsParentProject2.CreateNestedProject(System.UInt32,System.Guid@,System.String,System.String,System.String,System.UInt32,System.Guid@,System.Guid@,System.IntPtr@)">
      <summary>Creates and adds a solution to a project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="itemidLoc">[in] The item id (VSITEMID) of the item to add.</param>
      <param name="rguidProjectType">[in] The GUID of the project to add.</param>
      <param name="lpszMoniker">[in] String containing the moniker of the project item.</param>
      <param name="lpszLocation">[in] String containing the full path to the project.</param>
      <param name="lpszName">[in] String containing project name.</param>
      <param name="grfCreateFlags">[in] Bit flags specifying creation options for the project. Constructed using values from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSCREATEPROJFLAGS" /> enumeration.</param>
      <param name="rguidProjectID">[in] The IID of the interface to create. Use <see cref="F:Microsoft.VisualStudio.VSConstants.IID_IUnknown" /> for a generic T:IUnknown interface. You can also use <see cref="F:Microsoft.TeamFoundation.Common.VsConstants.IID_IVsHierarchy" /> to get back a hierarchy interface.</param>
      <param name="iidProject">[in] The item id (VSITEMID) of the item to add.</param>
      <param name="ppProject">[out] Pointer to the created interface for the project.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsParseCommandLine2">
      <summary>Parses command line arguments for implementers of <see cref="T:Microsoft.VisualStudio.OLE.Interop.IOleCommandTarget" />. Extends but does not inherit from <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsParseCommandLine" />. Adds a method to support auto completion. You can get an instance of the interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsParseCommandLine" /> (SID_SVsParseCommandLine) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsParseCommandLine2.GetACParamOrSwitch(System.Int32@,System.Int32@,System.Int32@,System.String@,System.String@)">
      <summary>Retrieves an auto completion command line item or switch.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="piACIndex">[out] Pointer to an index indicating whether or not there is an auto completion item. Set to PCL_AUTO_COMMANDS if there are auto completion items.</param>
      <param name="piACStart">[out] Pointer to the beginning of the auto completion item in the command line buffer.</param>
      <param name="pcchACLength">[out] Pointer to the length of the auto completion item.</param>
      <param name="pbstrCurSwitch">[out] Pointer to a string containing the current switch.</param>
      <param name="pbstrACParam">[out] Pointer to a string containing the current auto completion parameter.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsPathVariableResolver">
      <summary>Encodes or decodes file paths using Visual Studio-specific variables for common path elements. This supports storing file paths in a machine independent format with the vssettings files. You can get an instance of the interface from the SVsPathVariableResolver (SID_SVsPathVariableResolver) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPathVariableResolver.EncodePath(System.String,System.UInt32,System.String@)">
      <summary>Encodes a file path by replacing the installation directory and the user application data directory with the strings %VS_INSTALL_DIRECTORY% and %USER_APPDATA% respectively.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="strPath">[in] String containing the path to encode.</param>
      <param name="dwFlags">[in] Encoding option flag. A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSPROFILEPATHRESOLVERFLAGS" /> enumeration.</param>
      <param name="pbstrEncodedPath">[out] A pointer to a string containing the encoded path.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPathVariableResolver.ResolvePath(System.String,System.UInt32,System.String@)">
      <summary>Resolves (decodes) a file path encoded with <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsPathVariableResolver.EncodePath(System.String,System.UInt32,System.String@)" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="strEncodedPath">[in] String containing the encoded path. </param>
      <param name="dwFlags">[in] Encoding option flag. A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSPROFILEPATHRESOLVERFLAGS" /> enumeration.</param>
      <param name="pbstrPath">[out] Pointer to a string containing the resolved path.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsPersistDocData3">
      <summary>Tells the data document (object implementing <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsPersistDocData" />) whether or not to release its storage for closing or reloading. Extends, but does not inherit from, <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsPersistDocData" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPersistDocData3.HandsOffDocDataStorage">
      <summary>Tells the data document (object implementing <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsPersistDocData" />) to release any hold it has on its storage (i.e. release any file system locks on its file).</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPersistDocData3.HandsOnDocDataStorage">
      <summary>Enables the data document to place locks on its storage.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsPersistSolutionProps2">
      <summary>Supports saving solution properties in a solution (.sln) file by providing a method called when solution loading fails. Implemented by the package. Extends but does not inherit from <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsPersistSolutionProps" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPersistSolutionProps2.OnSolutionLoadFailure(System.String)">
      <summary>Method for the package to call when a solution fails to load.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszKey">[in] Pointer to a string containing the key used when creating the solution.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesEngine">
      <summary>Enables previewing before applying changes made by a given engine. Implemented by the refactoring engine.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesEngine.ApplyChanges">
      <summary>Applies changes.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesEngine.GetConfirmation(System.String@)">
      <summary>Gets the dialog confirmation text.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrConfirmation">[out] The text of the dialog confirmation.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesEngine.GetDescription(System.String@)">
      <summary>Gets the dialog description text.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrDescription">[out] The text of the dialog description.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesEngine.GetHelpContext(System.String@)">
      <summary>Gets the dialog help context.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
      <param name="pbstrHelpContext">[out] The dialog help context.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesEngine.GetRootChangesList(System.Object@)">
      <summary>Gets the root changes list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
      <param name="ppIUnknownPreviewChangesList">[out] Interface to the root changes list.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesEngine.GetTextViewDescription(System.String@)">
      <summary>Gets the dialog text view description.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
      <param name="pbstrTextViewDescription">[out] The text view description.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesEngine.GetTitle(System.String@)">
      <summary>Gets the dialog title text.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
      <param name="pbstrTitle">[out] Title text of the dialog.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesEngine.GetWarning(System.String@,System.Int32@)">
      <summary>Gets the dialog warning text and level.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
      <param name="pbstrWarning">[out] The warning text.</param>
      <param name="ppcwlWarningLevel">[out] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.__PREVIEWCHANGESWARNINGLEVEL" /> value specifying the warning level.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesList">
      <summary>Represents a list of items in the changes tree of the Preview Changes tool window. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesList.GetDisplayData(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSTREEDISPLAYDATA[])">
      <summary>Returns display data for the specified item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] The index of the item for which to get the display data.</param>
      <param name="pData">[in, out] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTREEDISPLAYDATA" /> structure that is filled in with the requested data.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesList.GetExpandable(System.UInt32,System.Int32@)">
      <summary>Determines if the specified item can be expanded.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] The index of the item.</param>
      <param name="pfExpandable">[out] Returns nonzero (TRUE) if the item can be expanded; otherwise, returns zero (FALSE).</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesList.GetExpandedList(System.UInt32,System.Int32@,Microsoft.VisualStudio.Shell.Interop.IVsLiteTreeList@)">
      <summary>Returns the child list of the specified item that has been expanded in the tree view.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] The index of the item for which to get its children.</param>
      <param name="pfCanRecurse">[out] Returns nonzero (TRUE) if the child list can be recursively called to access its children; otherwise, returns zero (FALSE).</param>
      <param name="pptlNode">[out] Returns an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsLiteTreeList" /> object that contains the requested children elements.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesList.GetFlags(System.UInt32@)">
      <summary>Returns a set of flags the describes the preview list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pFlags">[out] Returns a combination of values from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSTREEFLAGS" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesList.GetItemCount(System.UInt32@)">
      <summary>Returns the number of items in the preview list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCount">[out] Returns the number of items in the preview list.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesList.GetListChanges(System.UInt32@,Microsoft.VisualStudio.Shell.Interop.VSTREELISTITEMCHANGE[])">
      <summary>Returns a list of changes made to the items in the preview list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pcChanges">[in, out] If <paramref name="prgListChanges" /> parameter is a null value, this parameter returns the number of changes in the list. If <paramref name="prgListChanges" /> is not a null value, this parameter specifies the number of changes to return.</param>
      <param name="prgListChanges">[in, out] An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTREELISTITEMCHANGE" /> structures that describe the change of each item in the preview list. This parameter can be a null value, in which case the number of changes available is returned in the <paramref name="pcChanges" /> parameter.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesList.GetText(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSTREETEXTOPTIONS,System.String@)">
      <summary>Returns the specified text for the specified item in the preview list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] The index of the item for which to get text.</param>
      <param name="tto">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTREETEXTOPTIONS" /> structure describing what kind of text to return.</param>
      <param name="ppszText">[out] Returns a string containing the requested text.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesList.GetTipText(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSTREETOOLTIPTYPE,System.String@)">
      <summary>Returns the ToolTip text for the specified item in the preview list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] The index of the item for which to get the ToolTip text.</param>
      <param name="eTipType">[in] A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTREETOOLTIPTYPE" /> enumeration specifying the kind of ToolTip text to return.</param>
      <param name="ppszText">[out] Returns a string containing the ToolTip text.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesList.LocateExpandedList(Microsoft.VisualStudio.Shell.Interop.IVsLiteTreeList,System.UInt32@)">
      <summary>Given a child list, locate its parent item in the preview list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ExpandedList">[in] An <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsLiteTreeList" /> object that contains the child list.</param>
      <param name="iIndex">[out] Returns the index of the item that is the parent of the child list.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesList.OnClose(Microsoft.VisualStudio.Shell.Interop.VSTREECLOSEACTIONS[])">
      <summary>Called when this preview list is closed (unexpanded).</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ptca">[out] Returns a value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTREECLOSEACTIONS" /> enumeration describing what to do with the children of this item.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesList.OnRequestSource(System.UInt32,System.Object)">
      <summary>Loads the source for the specified preview item and displays it in the given text view.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] The index of the item to display.</param>
      <param name="pIUnknownTextView">[in] An IUnknown object that represents the text view. This is typically an <see cref="T:Microsoft.VisualStudio.TextManager.Interop.IVsTextView" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesList.ToggleState(System.UInt32,System.UInt32@)">
      <summary>Toggles the checked state of the specified item in the preview list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] The index of the item for which to change the checked state.</param>
      <param name="ptscr">[out] Returns a value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSTREESTATECHANGEREFRESH" /> enumeration indicating whether any children of this item also need to be refreshed in the display.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesList.UpdateCounter(System.UInt32@,System.UInt32@)">
      <summary>Updates the current change counter and returns whether any changes have been made to the preview list and if so, what kind of changes.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCurUpdate">[out] Returns the current update counter.</param>
      <param name="pgrfChanges">[out] Returns a combination of values from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSTREEITEMCHANGESMASK" /> enumeration specifying what kind of changes have been made since the last time this method was called.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesService">
      <summary>Displays the PreviewChanges dialog box used in refactoring code. You can get an instance of the interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsPreviewChangesService" /> (SID_SVsPreviewChangesService) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesService.PreviewChanges(Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesEngine)">
      <summary>Preview the refactoring changes by displaying the Preview Changes dialog.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pIVsPreviewChangesEngine">[In] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesEngine" /> interface.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsPrioritizedSolutionEvents">
      <summary>Defines high priority event methods for a solution.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPrioritizedSolutionEvents.PrioritizedOnAfterAsynchOpenProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.Int32)">
      <summary>Defines a method called after the asynchronous opening of a project and before <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents4.OnAfterAsynchOpenProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.Int32)" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
      <param name="pHierarchy">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the project.</param>
      <param name="fAdded">[in] Boolean. Set to true if the open added the project.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPrioritizedSolutionEvents.PrioritizedOnAfterChangeProjectParent(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)">
      <summary>Defines a method called after the parent of a project changes and before <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents4.OnAfterChangeProjectParent(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the project.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPrioritizedSolutionEvents.PrioritizedOnAfterCloseSolution(System.Object)">
      <summary>Defines a method called after a solution closes and before <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents2.OnAfterCloseSolution(System.Object)" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pUnkReserved">[in] Reserved for future use.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPrioritizedSolutionEvents.PrioritizedOnAfterClosingChildren(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)">
      <summary>Defines a method called after closing the children of a project and before <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents3.OnAfterClosingChildren(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy">[in] Pointer to the IVsHierarchy interface for the project.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPrioritizedSolutionEvents.PrioritizedOnAfterLoadProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)">
      <summary>Defines a method called after loading a project but before <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents.OnAfterLoadProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pStubHierarchy">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the placeholder hierarchy for the unloaded project.</param>
      <param name="pRealHierarchy">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the project that was loaded.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPrioritizedSolutionEvents.PrioritizedOnAfterMergeSolution(System.Object)">
      <summary>Defines a method called after merging solutions but before <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents2.OnAfterMergeSolution(System.Object)" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pUnkReserved">[in] Reserved for future use.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPrioritizedSolutionEvents.PrioritizedOnAfterOpeningChildren(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)">
      <summary>Defines a method called after opening children of the project but before calling <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents3.OnAfterOpeningChildren(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the project.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPrioritizedSolutionEvents.PrioritizedOnAfterOpenProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.Int32)">
      <summary>Defines a method called after opening a project but before calling <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents.OnAfterOpenProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.Int32)" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy">[in] Pointer to the IVsHierarchy interface of the project.</param>
      <param name="fAdded">[in] Boolean. Set to true if the project was added to the solution.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPrioritizedSolutionEvents.PrioritizedOnAfterOpenSolution(System.Object,System.Int32)">
      <summary>Defines a method called after opening a solution but before <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents.OnAfterOpenSolution(System.Object,System.Int32)" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pUnkReserved">[in] Reserved for future use.</param>
      <param name="fNewSolution">[in] Boolean. Set to true if this is a new solution.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPrioritizedSolutionEvents.PrioritizedOnAfterRenameProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)">
      <summary>Defines a method called after renaming a project and before calling <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolution.OnAfterRenameProject(Microsoft.VisualStudio.Shell.Interop.IVsProject,System.String,System.String,System.UInt32)" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the project.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPrioritizedSolutionEvents.PrioritizedOnBeforeCloseProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.Int32)">
      <summary>Defines a method called after <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents.OnBeforeCloseProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.Int32)" /> and before closing a project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the project.</param>
      <param name="fRemoved">[in] Boolean. Set to true if the project was removed from the solution.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPrioritizedSolutionEvents.PrioritizedOnBeforeCloseSolution(System.Object)">
      <summary>Defines a method called after <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents.OnBeforeCloseSolution(System.Object)" /> and before closing the solution.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pUnkReserved">[in] Reserved for future use.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPrioritizedSolutionEvents.PrioritizedOnBeforeClosingChildren(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)">
      <summary>Defines a method called after <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents3.OnBeforeClosingChildren(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)" /> and before closing the children of a project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the project.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPrioritizedSolutionEvents.PrioritizedOnBeforeOpeningChildren(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)">
      <summary>Defines a method called after <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents3.OnBeforeOpeningChildren(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)" /> but before opening the children of a project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the project.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPrioritizedSolutionEvents.PrioritizedOnBeforeUnloadProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)">
      <summary>Defines a method called after <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents.OnBeforeUnloadProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)" /> but before unloading the project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pRealHierarchy">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the project that was loaded.</param>
      <param name="pStubHierarchy">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the placeholder hierarchy for the unloaded project.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProfferCommands3">
      <summary>Adds, finds, renames, and removes commands from the user interface.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfferCommands3.AddCommandBar(System.String,System.UInt32,System.Object,System.UInt32,System.Object@)">
      <summary>Adds a command bar to the user interface.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszCmdBarName">[in] The name of the command bar.</param>
      <param name="dwType">[in] A value from the <see cref="T:EnvDTE.vsCommandBarType" /> enumeration.</param>
      <param name="pCmdBarParent">[in] The parent of the command bar. Use null for a top-level command bar.</param>
      <param name="dwIndex">[in] Location (index) in which to insert the new command bar on the parent.</param>
      <param name="ppCmdBar">[out] The new command bar.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfferCommands3.AddCommandBarControl(System.String,System.Object,System.UInt32,System.UInt32,System.Object@)">
      <summary>Adds a control to a command bar.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszCmdNameCanonical">[in] The fully-qualified (canonical) name of the control to add.</param>
      <param name="pCmdBarParent">[in] The parent command bar.</param>
      <param name="dwIndex">[in] The index of the position to place the control.</param>
      <param name="dwCmdType">[in] A value from the <see cref="T:EnvDTE.vsCommandBarType" /> enumeration.</param>
      <param name="ppCmdBarCtrl">[out] The new control.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfferCommands3.AddNamedCommand(System.Guid@,System.Guid@,System.String,System.UInt32@,System.String,System.String,System.String,System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Guid[])">
      <summary>Adds a named command.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pguidPackage">[in] The package GUID. Use null for addins.</param>
      <param name="pguidCmdGroup">[in] The GUID for the group to receive the new command. Use GUID_Macro or GUID_AddIn defined in vbapkg.idl.</param>
      <param name="pszCmdNameCanonical">[in] The full name of the command.</param>
      <param name="pdwCmdId">[outThe ID for the new command.</param>
      <param name="pszCmdNameLocalized">[in] A localized version of the string. May be null.</param>
      <param name="pszBtnText">[in] The text to display on a button. Use null if the added command isn't a button.</param>
      <param name="pszCmdTooltip">[in] The ToolTip text to display. May be null.</param>
      <param name="pszSatelliteDLL">[in] The full path to a satellite DLL implementing the command. May be null.</param>
      <param name="dwBitmapResourceId">[in] The resource identifier for the icon to display for the command. Use zero (0) if there is no bitmap.</param>
      <param name="dwBitmapImageIndex">[in] The index of the bitmap within the bitmap file.</param>
      <param name="dwCmdFlagsDefault">[in] Use zero (0) for the default values to make the command active and visible.</param>
      <param name="cUIContexts">[in] The number of contexts pointed to by the <paramref name="rgguidUIContexts" /> parameter.</param>
      <param name="rgguidUIContexts">[in] An array of GUIDs for the user interface contexts indicating options for displaying the command. For more information, see the UIContext_ members of <see cref="T:Microsoft.VisualStudio.VSConstants" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfferCommands3.AddNamedCommand2(System.Guid@,System.Guid@,System.String,System.UInt32@,System.String,System.String,System.String,System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Guid[],System.UInt32)">
      <summary>Adds a named command. This version has a parameter that specifies a UI element.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pguidPackage">[in] The package GUID. Use null for addins.</param>
      <param name="pguidCmdGroup">[in] The GUID for the group to receive the new command. Use GUID_Macro or GUID_AddIn defined in vbapkg.idl.</param>
      <param name="pszCmdNameCanonical">[in] The full name of the command.</param>
      <param name="pdwCmdId">[outThe ID for the new command.</param>
      <param name="pszCmdNameLocalized">[in] A localized version of the string. May be null.</param>
      <param name="pszBtnText">[in] The text to display on a button. Use null if the added command isn't a button.</param>
      <param name="pszCmdTooltip">[in] The ToolTip text to display. May be null.</param>
      <param name="pszSatelliteDLL">[in] The full path to a satellite DLL implementing the command. May be null.</param>
      <param name="dwBitmapResourceId">[in] The resource identifier for the icon to display for the command. Use zero (0) if there is no bitmap.</param>
      <param name="dwBitmapImageIndex">[in] The index of the bitmap within the bitmap file.</param>
      <param name="dwCmdFlagsDefault">[in] Use zero (0) for the default values to make the command active and visible.</param>
      <param name="cUIContexts">[in] The number of contexts pointed to by the <paramref name="rgguidUIContexts" /> parameter.</param>
      <param name="rgguidUIContexts">[in] An array of GUIDs for the user interface contexts indicating options for displaying the command. For more information, see the UIContext_ members of <see cref="T:Microsoft.VisualStudio.VSConstants" />.</param>
      <param name="dwUIElementType">[in] Integer. A value from the <see cref="T:EnvDTE80.vsCommandControlType" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfferCommands3.FindCommandBar(System.Object,System.Guid@,System.UInt32,System.Object@)">
      <summary>Find a specific toolbar.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pToolbarSet">[in] Use null.</param>
      <param name="pguidCmdGroup">[in] The GUID of the toolbar or menu to find. You can use GUID_Macro or GUID_AddIn (depending on the way the item was created), which are auto-generated GUIDs defined in vbapkg.idl.</param>
      <param name="dwMenuId">[in] The ID of the toolbar or menu..</param>
      <param name="ppdispCmdBar">[out] The toolbar.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfferCommands3.RemoveCommandBar(System.Object)">
      <summary>Removes a command bar.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCmdBar">[in] The command bar to remove.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfferCommands3.RemoveCommandBarControl(System.Object)">
      <summary>Remove a control from a command bar.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCmdBarCtrl">[in] The control.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfferCommands3.RemoveNamedCommand(System.String)">
      <summary>Removes a named command.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszCmdNameCanonical">[in] The canonical (fully-qualified) name of the command to remove.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfferCommands3.RenameNamedCommand(System.String,System.String,System.String)">
      <summary>Renames a named command.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszCmdNameCanonical">[in] The canonical (fully-qualified) name of the command.</param>
      <param name="pszCmdNameCanonicalNew">[in] The new canonical name.</param>
      <param name="pszCmdNameLocalizedNew">[in] The new localized canonical name. May be null.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProfileDataManager">
      <summary>Provides access to the profile manager and to programmatic control of settings. You can get an instance of the interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsProfileDataManager" /> (SID_SVsProfileDataManager) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileDataManager.AutoSaveAllSettings(Microsoft.VisualStudio.Shell.Interop.IVsSettingsErrorInformation@)">
      <summary>Saves, and then at intervals automatically saves, settings.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppsettingsErrorInformation">[out] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSettingsErrorInformation" /> interface reporting any errors. Set to null if there are no errors.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileDataManager.CheckUpdateTeamSettings(System.UInt32)">
      <summary>Checks and, if necessary, updates team profile settings.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwFlags">[in] A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSPROFILETEAMSETTINGSFLAGS" /> enumeration indicating whether to check for an update or always to update.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileDataManager.ExportAllSettings(System.String,Microsoft.VisualStudio.Shell.Interop.IVsSettingsErrorInformation@)">
      <summary>Exports all settings to a file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrFilePath">[in] String containing the path and name of the file to use for saving the settings.</param>
      <param name="ppsettingsErrorInformation">[out] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSettingsErrorInformation" /> interface reporting any errors. Set to null if there are no errors.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileDataManager.ExportSettings(System.String,Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree,Microsoft.VisualStudio.Shell.Interop.IVsSettingsErrorInformation@)">
      <summary>Export settings to a file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrFilePath">[in] String containing the path and name of the file to use for exporting settings.</param>
      <param name="pSettingsTree">[in] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree" /> interface containing the profile settings information. Retrieved by <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileDataManager.GetSettingsForExport(Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree@)" />.</param>
      <param name="ppsettingsErrorInformation">[out] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSettingsErrorInformation" /> interface reporting any errors. Set to null if there are no errors.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileDataManager.GetDefaultSettingsLocation(System.String@)">
      <summary>Retrieves the location for the default settings file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrSettingsLocation">[out] Pointer to a string containing the full path to the default settings file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileDataManager.GetSettingsFileExtension(System.String@)">
      <summary>Retrieves the extension of the settings file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrSettingsFileExtension">[out] Pointer to a string containing the extension of the settings file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileDataManager.GetSettingsFiles(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsFileCollection@)">
      <summary>Retrieves one or more settings files.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="fileLocations">[in] Bit flags indicating which locations to check for settings files. Constructed from values in the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSPROFILELOCATIONS" /> enumeration.</param>
      <param name="ppCollection">[out] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsFileCollection" /> interface for the retrieved settings files.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileDataManager.GetSettingsForExport(Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree@)">
      <summary>Retrieves the settings information in a form ready for export.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppSettingsTree">[out] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree" /> interface containing the settings information.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileDataManager.GetUniqueExportFileName(System.UInt32,System.String@)">
      <summary>Retrieves a unique filename to use when saving Settings.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="flags">[in] Bit flags. Constructed using values from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSPROFILEGETFILENAME" /> enumeration.</param>
      <param name="pbstrExportFile">[out] Pointer to a string containing the path and name of the file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileDataManager.ImportSettings(Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree,Microsoft.VisualStudio.Shell.Interop.IVsSettingsErrorInformation@)">
      <summary>Import settings from an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pSettingsTree">[in] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree" /> interface containing the profile settings information.</param>
      <param name="ppsettingsErrorInformation">[out] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSettingsErrorInformation" /> interface reporting any errors. Set to null if there are no errors.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileDataManager.LastResetPoint(System.String@)">
      <summary>Returns the path and name of the file most recently used to reset profile settings information. This is either the default settings file or the file the user most recently used to save settings.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrResetFilename">[out] Pointer to a string containing the path and filename of the file most recently used when resetting profile settings.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileDataManager.ReportTeamSettingsChanged(System.UInt32)">
      <summary>Determines which team settings changes are reported.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwFlags">[in] Bit flags indicating which changes to report. Constructed from values in the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSPROFILETEAMSETTINGSCHANGEDFLAGS" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileDataManager.ResetSettings(Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsFileInfo,Microsoft.VisualStudio.Shell.Interop.IVsSettingsErrorInformation@)">
      <summary>Resets settings values.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pFileInfo">[in] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsFileInfo" /> interface containing information about the settings file.</param>
      <param name="ppsettingsErrorInformation">[out] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSettingsErrorInformation" /> interface reporting any errors. Set to null if there are no errors.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileDataManager.ShowProfilesUI">
      <summary>Displays the UI for profile settings.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsFileCollection">
      <summary>Represents the profile settings files.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsFileCollection.AddBrowseFile(System.String,Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsFileInfo@)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrFilePath">[in]</param>
      <param name="ppFileInfo">[out]Adds a file to the file collection.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsFileCollection.GetCount(System.Int32@)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCount">[out]</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsFileCollection.GetSettingsFile(System.Int32,Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsFileInfo@)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in]</param>
      <param name="ppFileInfo">[out]</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsFileInfo">
      <summary>Represents profile settings file information.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsFileInfo.GetDescription(System.String@)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrDescription">[out]</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsFileInfo.GetFileLocation(System.UInt32@)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfileLocation">[out]</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsFileInfo.GetFilePath(System.String@)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrFilePath">[out]</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsFileInfo.GetFriendlyName(System.String@)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrFriendlyName">[out]</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsFileInfo.GetSettingsForImport(Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree@)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppSettingsTree">[out]</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree">
      <summary>Represents the profile settings tree.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.AddChildTree(Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree)">
      <summary>Adds a specified tree as a child tree.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pChildTree">[in] Adds the given tree as a child tree.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.FindChildTree(System.String,Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree@)">
      <summary>Finds a child tree.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrNameSearch">[in] The name of the tree to find.</param>
      <param name="ppChildTree">[out] An <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree" /> interface to the child tree.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.GetAlternatePath(System.String@)">
      <summary>Gets the name of the parent node for a node's placeholder node.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrAlternatePath">[out] The name of the parent node for this node's placeholder node.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.GetCategory(System.String@)">
      <summary>Gets the category of a tree.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrCategory">[out] The category of the tree.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.GetChild(System.Int32,Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree@)">
      <summary>Gets a child tree.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[out] The location of the child tree.</param>
      <param name="ppChildTree">[out] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree" /> interface to the child tree.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.GetChildCount(System.Int32@)">
      <summary>Gets the number of children.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCount">[out] The number of children.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.GetDescription(System.String@)">
      <summary>Gets the description of a node.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrDescription">[out] The description of the node.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.GetDisplayName(System.String@)">
      <summary>Gets the display name of a node.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrName">[out] The name of the node.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.GetEnabled(System.Int32@)">
      <summary>Specifies whether the tree is enabled.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfEnabled">[out] A BOOL value; true if the tree is enabled.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.GetEnabledChildCount(System.Int32@)">
      <summary>Gets the number of enabled child nodes.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCount">[out] The number of child nodes.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.GetFullPath(System.String@)">
      <summary>Gets the full path of a node.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrFullPath">[out] The full path of the node.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.GetIsAutomationPropBased(System.Int32@)">
      <summary>Determines if automation is property based.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfAutoProp">[out] A BOOL value; true if automation is property-based.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.GetIsPlaceholder(System.Int32@)">
      <summary>Determines if the node is a placeholder.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfPlaceholder">[out] Determines whether this is a placeholder node.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.GetNameForID(System.String@)">
      <summary>Gets the name of a node for identification.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrNameForID">[out] The name of the node.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.GetPackage(System.String@)">
      <summary>Gets the package associated with the tree.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrPackage">[out] path to the package.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.GetRegisteredName(System.String@)">
      <summary>Gets the registered name of the node.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrRegisteredName">[out] The registered node.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.GetRepresentedNode(Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree@)">
      <summary>Determines whether a placeholder node has a represented node.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppRepresentedNode">[out] Indicates that a placeholder node has a represented node.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.GetSecurityLevel(System.UInt32@)">
      <summary>Gets the security level of a node.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pSecurityLevel">[out] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSPROFILECATEGORYSECURITY" /> value specifying the security level.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.GetSensitivityLevel(System.UInt32@)">
      <summary>The sensitivity level of a node.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pSensitivityLevel">[out] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSPROFILECATEGORYSENSITIVITY" /> specifying the sensitivity level.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.GetVisible(System.Int32@)">
      <summary>Determines if a placeholder node is visible.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfVisible">[out] BOOL; true if the placeholder nodes are invisible.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.RevisePlacements(Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree,Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree,System.String)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pTreeRoot">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree" /> interface to the tree root.</param>
      <param name="pTreeRootBasis">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree" /> interface to the tree rood basis.</param>
      <param name="bstrCurrentParent">[in] If this tree has an alternate root specified, then adds self as a child in that tree.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsTree.SetEnabled(System.Int32,System.Int32)">
      <summary>Specifies if a node is enabled.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="fEnabled">[in] BOOL; true if the node is enabled.</param>
      <param name="fIncludeChildren">[in] BOOL; true if the node and it's children are enabled.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProfilesManagerUI">
      <summary>Internal interface to allow communication between native and managed code.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProfilesManagerUI.ShowProfilesUI(Microsoft.VisualStudio.Shell.Interop.IVsProfileDataManager)"></member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectBuildSystem">
      <summary>Provides access to the MSBuild system objects. Enables putting the build system into batch mode to control commitment of changes. You get an implementation of the interface when you create a VSPackage.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectBuildSystem.BuildTarget(System.String,System.Boolean@)">
      <summary>Sets the build target.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszTargetName">[in] Pointer to a string containing the target name.</param>
      <param name="pbSuccess">[out] Pointer to a Boolean. Set to true if setting the target succeeds. Otherwise set to false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectBuildSystem.CancelBatchEdit">
      <summary>Cancels an MSBuild batch edit.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectBuildSystem.EndBatchEdit">
      <summary>Ends a batch operation and commits the changes.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectBuildSystem.GetBuildSystemKind(System.UInt32@)">
      <summary>Returns the type or kind of build system.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pBuildSystemKind">[out] Pointer to an integer indicating the type of build system. For MSBuild, this value is <see cref="F:Microsoft.VisualStudio.Shell.Interop._BuildSystemKindFlags.BSK_MSBUILD" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectBuildSystem.SetHostObject(System.String,System.String,System.Object)">
      <summary>Sets the object used to communicate between MSBuild and the host IDE.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszTargetName">[in] Pointer to a string containing the name of the build target.</param>
      <param name="pszTaskName">[in] Pointer to a string containing the name of the task for MSBuild to perform.</param>
      <param name="punkHostObject">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.IUnknown" /> interface of the host object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectBuildSystem.StartBatchEdit">
      <summary>Starts a batch operation with MSBuild.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectDataConnection">
      <summary>Provides a data connection for the debugger. Used when stepping through a SQL document.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectDataConnection.GetProjectSqlConnection(System.Object@)">
      <summary>Gets the SQL connection for the project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pConnection">[out] Pointer to the <see cref="T:Microsoft.VisualStudio.IUnknown" /> interface of the object representing the SQL connection.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectDebugTargetProvider">
      <summary>Gets information about a debug target, a file launched in the debugger. Implemented in projects that want to control launching of the debugger. You must register your implementation using <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsRegisterProjectDebugTargetProvider" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectDebugTargetProvider.SupplyDebugTarget(System.String@,System.String@)">
      <summary>Gets information about a debug target if the current debug target is appropriate.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrTarget">[out] Pointer to a string containing the name of the target.</param>
      <param name="pbstrCommandLine">[out] Pointer to a string containing arguments for the provider.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectFactory2">
      <summary>Provides a method indicating whether the environment can open the project asynchronously. Extends, but does not inherit from, <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectFactory" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectFactory2.GetAsynchOpenProjectType(System.UInt32@)">
      <summary>Returns the asynchronous open type that the project supports.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pType">[out] The asynchronous open type.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectFlavorCfg">
      <summary>The project subtype configuration object implements IVsProjectFlavorCfg to give the project subtype access to various configuration interfaces.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectFlavorCfg.Close">
      <summary>Closes the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectFlavorCfg" /> object.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectFlavorCfg.get_CfgType(System.Guid@,System.IntPtr@)">
      <summary>Provides access to a configuration interfaces such as <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsBuildableProjectCfg2" /> or <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="iidCfg">[in] Interface identifier of the <paramref name="ppCfg" /> to access.</param>
      <param name="ppCfg">[out, iid_is(iidCfg)] Pointer to the configuration interface identified by <paramref name="iidCfg" />.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectFlavorCfgOutputGroups">
      <summary>Gives a project subtype access to the content of the project output group. IVsProjectFlavorCfgOutputGroups interface also allows the project subtype to influence the project's ability to group outputs according to usage.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectFlavorCfgOutputGroups.CustomizeOutputGroup(Microsoft.VisualStudio.Shell.Interop.IVsOutputGroup,Microsoft.VisualStudio.Shell.Interop.IVsOutputGroup@)">
      <summary>Gives the base project access to <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectFlavorCfgOutputGroups" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pIn">[in] Pointer to the base projects <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsOutputGroup" /> object.</param>
      <param name="pOut">[out] <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsOutputGroup" /> object of the project subtype.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectFlavorCfgProvider">
      <summary>Functions as the factory for the project subtype's configuration objects.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectFlavorCfgProvider.CreateProjectFlavorCfg(Microsoft.VisualStudio.Shell.Interop.IVsCfg,Microsoft.VisualStudio.Shell.Interop.IVsProjectFlavorCfg@)">
      <summary>Allows the base project to ask the project subtype to create an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectFlavorCfg" /> object corresponding to each one of its (project subtype's) configuration objects.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pBaseProjectCfg">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsCfg" /> object of the base project.</param>
      <param name="ppFlavorCfg">[out] The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectFlavorCfg" /> object of the project subtype.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectFlavorReferences">
      <summary>Gives a project subtype (flavor) control over references and of being referenced.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectFlavorReferences.QueryAddProjectReference(System.Object,System.Int32@)">
      <summary>Called before adding a reference to a flavored project. Allows the project to reject a reference.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pReferencedProject">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.IUnknown" /> interface of the referenced project (project to be added).</param>
      <param name="pbCanAdd">[out] Boolean. Set to true if the project can be added; false otherwise.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectFlavorReferences.QueryCanBeReferenced(System.Object,System.Int32@)">
      <summary>Called before another project attempts to make a reference to this flavored project. The project can refuse being referenced.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pReferencingProject">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.IUnknown" /> interface of the project wanting to reference this project.</param>
      <param name="pbAllowReferenced">[out] Pointer to a Boolean. Set to true if the other project can reference this project. Otherwise, set to false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectFlavorReferences.QueryRefreshReferences(System.UInt32,System.Int32@)">
      <summary>Called before updating a project reference. This flavored project may advise against updating the references.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="Reason">[in] Integer indicating the reason for updating references. A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__UPDATE_REFERENCE_REASON" /> enumeration.</param>
      <param name="pbUpdate">[out] Pointer to a Boolean. Set to true if this project advises (favors) updating references. Otherwise, set to false.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectUpgradeViaFactory">
      <summary>Upgrade the project using the project factory. Used by the solution before opening the project. This interface must be available through querying the project factory.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectUpgradeViaFactory.GetSccInfo(System.String,System.String@,System.String@,System.String@,System.String@)">
      <summary>Gets source code control information.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrProjectFileName">[in] Name of the project file.</param>
      <param name="pbstrSccProjectName">[out] Name of the source control project.</param>
      <param name="pbstrSccAuxPath">[out] Auxiliary path to the source control depot.</param>
      <param name="pbstrSccLocalPath">[out] Local path to the source control depot.</param>
      <param name="pbstrProvider">[out] Source control provider.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectUpgradeViaFactory.UpgradeProject(System.String,System.UInt32,System.String,System.String@,Microsoft.VisualStudio.Shell.Interop.IVsUpgradeLogger,System.Int32@,System.Guid@)">
      <summary>Upgrades a project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrFileName">[in] Project file of project to update.</param>
      <param name="fUpgradeFlag">[out] Upgrade types specified by the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSPPROJECTUPGRADEVIAFACTORYFLAGS" /> enumeration. Only one may be specified.</param>
      <param name="bstrCopyLocation">[in] Location of the copy upgrade, or the backup copy location.</param>
      <param name="pbstrUpgradedFullyQualifiedFileName">[out] Copy upgrade will have a different path - others may change the project name.</param>
      <param name="pLogger">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUpgradeLogger" /> interface to the upgrade logger.</param>
      <param name="pUpgradeRequired">[out] true if the project needs upgrading. false if the project is already up-to-date.</param>
      <param name="pguidNewProjectFactory">[out] If a different project factory is used to create the upgraded project, the GUID should be returned here.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectUpgradeViaFactory.UpgradeProject_CheckOnly(System.String,Microsoft.VisualStudio.Shell.Interop.IVsUpgradeLogger,System.Int32@,System.Guid@,System.UInt32@)">
      <summary>Checks to see if a project needs to be upgraded.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrFileName">[in] Project file of project to update.</param>
      <param name="pLogger">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUpgradeLogger" /> interface to the upgrade logger.</param>
      <param name="pUpgradeRequired">[out] true if the project needs upgrading. false if the project is already up-to-date.</param>
      <param name="pguidNewProjectFactory">[out] If a different project factory is used to create the upgraded project, the GUID should be returned here.</param>
      <param name="pUpgradeProjectCapabilityFlags">[in] Upgrade types specified by the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSPPROJECTUPGRADEVIAFACTORYFLAGS" /> enumeration. Only one may be specified.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectUpgradeViaFactory2">
      <summary>Extends, but does not inherit from, <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectUpgradeViaFactory" /> by providing a method to call on cancellation of the project upgrade.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProjectUpgradeViaFactory2.OnUpgradeProjectCancelled(System.String)">
      <summary>Cleans up cached items associated with the given project file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrFileName">[in] String containing the project file name.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsPropertyPage2">
      <summary>Provides for getting and setting property values on the property page. Extends, but does not inherit from, <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsPropertyPage" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPropertyPage2.GetProperty(System.UInt32,System.Object@)">
      <summary>Gets the information for the specified property.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="propid">[in] Property identifier. For a list of <paramref name="propid" /> values, see <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSPPPID" />.</param>
      <param name="pvar">[out] Property information is passed back to the caller through this parameter.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPropertyPage2.SetProperty(System.UInt32,System.Object)">
      <summary>Sets the information contained by the property.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="propid">[in] Identifier of the property. For a list of <paramref name="propid" /> values, see <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSPPPID" />.</param>
      <param name="var">[in] Pointer to VARIANT that contains the property settings.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsProvideUserContext2">
      <summary>Enables an object to provide a user context and a priority. Extends, but does not inherit from, <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProvideUserContext" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsProvideUserContext2.GetUserContextEx(Microsoft.VisualStudio.Shell.Interop.IVsUserContext@,System.Int32@)">
      <summary>Gets a user context and priority for an object.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppctx">[out] Pointer to the IVsUserContext interface.</param>
      <param name="iPriority">[out] Integer. The priority.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsPublishableProjectCfg">
      <summary>Enables a project to control its publication. Publication includes such things as moving the project to a file server or a Web site.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPublishableProjectCfg.AdvisePublishStatusCallback(Microsoft.VisualStudio.Shell.Interop.IVsPublishableProjectStatusCallback,System.UInt32@)">
      <summary>Establishes a callback for publishing status.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pIVsPublishStatusCallback">[in] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsPublishableProjectStatusCallback" /> interface.</param>
      <param name="pdwCookie">[out] Integer. A VSCOOKIE representing the added callback. Used in <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsPublishableProjectCfg.UnadvisePublishStatusCallback(System.UInt32)" /> to identify the callback.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPublishableProjectCfg.GetPublishProperty(System.UInt32,System.Object@)">
      <summary>Retrieves the value of a publish property by property type.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="propid">[in] Integer. The type of property to retrieve. A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSPUBLISHOPTS" /> enumeration.</param>
      <param name="pvar">[out] Pointer to a variant containing the property value.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPublishableProjectCfg.QueryStartPublish(System.UInt32,System.Int32[],System.Int32[])">
      <summary>Queries whether the project supports publishing and whether or not the project is ready for publishing.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwOptions">[in] Integer. Bit flags specifying query options. Left to the implementer.</param>
      <param name="pfSupported">[out] Optional. Boolean. Set to true if publishing is supported. Otherwise, false.</param>
      <param name="pfReady">[out] Optional. Boolean. Set to true if the project is ready for publishing. Otherwise, false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPublishableProjectCfg.QueryStatusPublish(System.Int32@)">
      <summary>Queries about the status of an ongoing publishing operation.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfPublishDone">[out] Pointer to a Boolean. Set to true if the publishing is done, false otherwise.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPublishableProjectCfg.ShowPublishPrompt(System.Int32@)">
      <summary>Displays a prompt to ask whether or not a publishing operation should be done.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfContinue">[out] Boolean. Set to true if the publishing should continue.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPublishableProjectCfg.StartPublish(Microsoft.VisualStudio.Shell.Interop.IVsOutputWindowPane,System.UInt32)">
      <summary>Begins publishing.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pIVsOutputWindowPane">[in] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsOutputWindowPane" /> to use for output.</param>
      <param name="dwOptions">[in] Integer. Specifies publishing options. Implementation dependant.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPublishableProjectCfg.StopPublish(System.Int32)">
      <summary>Halts a publishing operation.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="fSync">[in] Boolean. Use true if the publishing operation is synchronous. Otherwise, use false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPublishableProjectCfg.UnadvisePublishStatusCallback(System.UInt32)">
      <summary>Unregisters a callback used for monitoring publishing status.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwCookie">[in] Integer. The VSCOOKIE from the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsPublishableProjectCfg.AdvisePublishStatusCallback(Microsoft.VisualStudio.Shell.Interop.IVsPublishableProjectStatusCallback,System.UInt32@)" /> call that registered the callback interface.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsPublishableProjectStatusCallback">
      <summary>Defines methods for controlling and reporting on publication of a project. Implemented by the environment.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPublishableProjectStatusCallback.PublishBegin(System.Int32@)">
      <summary>Notifies the environment that a publishing operation has begun.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfContinue">[in, out] Pointer to a flag that is set to true if the publishing operation can continue, or false if it should be terminated.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPublishableProjectStatusCallback.PublishEnd(System.Int32)">
      <summary>Notifies the environment that a publishing operation has ended.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="fSuccess">[in] Indicates whether the publishing operation completed successfully. If true, the publishing operation completed successfully.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsPublishableProjectStatusCallback.Tick(System.Int32@)">
      <summary>Notifies the environment that a publishing operation is in progress.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfContinue">[in, out] Pointer to a flag that is set to true if the publishing operation can continue, or false if it should be terminated.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsQueryDebuggableProjectCfg">
      <summary>Responds to queries about how the project would launch the debugger. An optional interface implemented on the project configuration object by projects that can be start projects.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsQueryDebuggableProjectCfg.QueryDebugTargets(System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo2[],System.UInt32[])">
      <summary>Returns information about a project's debugging targets.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="grfLaunch">[in] Integer containing bit flags representing options for launching the debugger. Constructed from values in the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSDBGLAUNCHFLAGS" /> enumeration.</param>
      <param name="cTargets">[in] Integer. The maximum number of debug targets—the length of the <paramref name="rgDebugTargetInfo" /> array.</param>
      <param name="rgDebugTargetInfo">[out] Array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo2" /> structures representing debug targets.</param>
      <param name="pcActual">[out] Pointer to an integer. The number of debug targets found and returned in <paramref name="rgDebugTargetInfo" />.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsRefactorNotify">
      <summary>Notifies code generators about the occurrence of refactoring operations.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRefactorNotify.OnAddParams(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.String,System.UInt32,System.UInt32[],System.String[],System.String[])">
      <summary>Called after a method had the parameters added.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHier">A hierarchy of the designer-owned item associated with the file that the language service changed.</param>
      <param name="itemid">The VSITEMID of the designer-owned item associated with the file that the language service changed.</param>
      <param name="lpszRQName">A method that has parameters added.</param>
      <param name="cParams">The number of parameters added.</param>
      <param name="rgszParamIndexes">The indexes of the new parameters.</param>
      <param name="rgszRQTypeNames">The types of the new parameters.</param>
      <param name="rgszParamNames">The names of the new parameters.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRefactorNotify.OnBeforeAddParams(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.String,System.UInt32,System.UInt32[],System.String[],System.String[],System.Array@)">
      <summary>Called when a method is about to have the parameters added.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHier">A hierarchy of the designer-owned item associated with the file that the language service changed.</param>
      <param name="itemid">The VSITEMID of the designer-owned item associated with the file that the language service is about to change.</param>
      <param name="lpszRQName">A method that has parameters added.</param>
      <param name="cParams">The number of parameters added.</param>
      <param name="rgszParamIndexes">The indexes of the new parameters.</param>
      <param name="rgszRQTypeNames">The types of the new parameters.</param>
      <param name="rgszParamNames">The names of the new parameters.</param>
      <param name="prgAdditionalCheckoutVSITEMIDs">An array of VSITEMIDs to be checked out during the add parameter operation, if the IVsRefactorNotify implementer needs to modify additional files as a part of the refactoring operation. Implementers must return the VSITEMID of the designer-owned item, if that file is modified during the refactoring operation.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRefactorNotify.OnBeforeGlobalSymbolRenamed(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.UInt32,System.String[],System.String,System.Array@)">
      <summary>Called when a symbol is about to be renamed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHier">The hierarchy of the designer-owned item associated with the file that the language service changed. </param>
      <param name="itemid">The VSITEMID of the designer-owned item associated with the file that the language service changed.</param>
      <param name="cRQNames">The number of the renamed symbols. The number can be greater than one if an overloaded symbol is renamed. </param>
      <param name="rglpszRQName">A name of the symbol before the rename.</param>
      <param name="lpszNewName">A name of the symbol after the rename.</param>
      <param name="prgAdditionalCheckoutVSITEMIDs">An array of VSITEMIDs to be checked out during the rename operation, if the IVsRefactorNotify implementer must modify additional files as a part of the refactoring operation. Implementers must return the VSITEMID of the designer-owned item, if that file is modified during the refactoring operation.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRefactorNotify.OnBeforeRemoveParams(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.String,System.UInt32,System.UInt32[],System.Array@)">
      <summary>Called when a method is about to have the parameters removed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHier">A hierarchy of the designer-owned item associated with the file that the language service changed.</param>
      <param name="itemid">The VSITEMID of the designer-owned item associated with the file that the language service changed.</param>
      <param name="lpszRQName">A method that has parameters removed.</param>
      <param name="cParamIndexes">The number of parameters removed.</param>
      <param name="rgParamIndexes">An array of parameter indexes where each value indicates the index of the parameter being removed.</param>
      <param name="prgAdditionalCheckoutVSITEMIDs">An array of VSITEMIDs to be checked out during the remove parameter operation, if the IVsRefactorNotify implementer must modify additional files as a part of the refactoring operation. Implementers must return the VSITEMID of the designer-owned item, if that file is modified during the refactoring operation.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRefactorNotify.OnBeforeReorderParams(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.String,System.UInt32,System.UInt32[],System.Array@)">
      <summary>Called when a method is about to have the parameters reordered.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHier">A hierarchy of the designer-owned item associated with the file that the language service changed.</param>
      <param name="itemid">The VSITEMID of the designer-owned item associated with the file that the language service changed.</param>
      <param name="lpszRQName">A method that has parameters reordered.</param>
      <param name="cParamIndexes">The number of parameters reordered.</param>
      <param name="rgParamIndexes">An array of parameter indexes. The index indicates the position of the parameter after reordering. The value at the index indicates the position of the parameter before reordering.</param>
      <param name="prgAdditionalCheckoutVSITEMIDs">An array of VSITEMIDs to be checked out during the reorder parameters operation, if the IVsRefactorNotify implementer must modify additional files as a part of the refactoring operation. Implementers must return the VSITEMID of the designer-owned item, if that file is modified during the refactoring operation.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRefactorNotify.OnGlobalSymbolRenamed(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.UInt32,System.String[],System.String)">
      <summary>Called after a symbol is renamed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHier">A hierarchy of the designer-owned item associated with the file that the language service changed.</param>
      <param name="itemid">The VSITEMID of the designer-owned item associated with the file that the language service changed.</param>
      <param name="cRQNames">The number of the renamed symbols. The number can be greater than one, if an overloaded symbol is renamed.</param>
      <param name="rglpszRQName">A name of the symbol before the rename.</param>
      <param name="lpszNewName">A name of the symbol after the rename.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRefactorNotify.OnRemoveParams(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.String,System.UInt32,System.UInt32[])">
      <summary>Called after a method had the parameters removed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHier">A hierarchy of the designer-owned item associated with the file that the language service changed.</param>
      <param name="itemid">The VSITEMID of the designer-owned item associated with the file that the language service changed.</param>
      <param name="lpszRQName">A method that has parameters removed.</param>
      <param name="cParamIndexes">The number of parameters removed.</param>
      <param name="rgParamIndexes">An array of parameter indexes where each value indicates the index of the removed parameter.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRefactorNotify.OnReorderParams(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.String,System.UInt32,System.UInt32[])">
      <summary>Called after a method had the parameters reordered.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHier">A hierarchy of the designer-owned item associated with the file that the language service changed.</param>
      <param name="itemid">The VSITEMID of the designer-owned item associated with the file that the language service changed.</param>
      <param name="lpszRQName">A method that has parameters reordered.</param>
      <param name="cParamIndexes">The number of parameters reordered.</param>
      <param name="rgParamIndexes">An array of parameter indexes. The index indicates the position of the parameter after reordering. The value at the index indicates the position of the parameter before reordering.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsRegisterNewDialogFilters">
      <summary>Installs custom filters for the AddNewProject or AddNewItem dialogs. You can get an instance of the interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsRegisterNewDialogFilters" /> (SID_SVsRegisterNewDialogFilters) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRegisterNewDialogFilters.RegisterAddNewItemDialogFilter(Microsoft.VisualStudio.Shell.Interop.IVsFilterAddProjectItemDlg,System.UInt32@)">
      <summary>Registers a filter for the AddNewItem dialog.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pFilter">[in] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsFilterAddProjectItemDlg" /> interface representing the filter to register.</param>
      <param name="pdwFilterCookie">[out] Pointer to an integer containing a VSCOOKIE uniquely identifying the filter just registered. Needed for the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsRegisterNewDialogFilters.UnregisterAddNewItemDialogFilter(System.UInt32)" /> method.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRegisterNewDialogFilters.RegisterNewProjectDialogFilter(Microsoft.VisualStudio.Shell.Interop.IVsFilterNewProjectDlg,System.UInt32@)">
      <summary>Registers a new filter for the AddNewProject dialog.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pFilter">[in] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsFilterNewProjectDlg" /> interface representing the filter to register.</param>
      <param name="pdwFilterCookie">[out] Pointer to an integer containing a VSCOOKIE uniquely identifying the filter just registered. Needed for the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsRegisterNewDialogFilters.UnregisterNewProjectDialogFilter(System.UInt32)" /> method.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRegisterNewDialogFilters.UnregisterAddNewItemDialogFilter(System.UInt32)">
      <summary>Unregisters a filter for the AddNewItem dialog.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwFilterCookie">[in] Pointer to an integer containing a VSCOOKIE uniquely identifying the filter. From the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsRegisterNewDialogFilters.RegisterAddNewItemDialogFilter(Microsoft.VisualStudio.Shell.Interop.IVsFilterAddProjectItemDlg,System.UInt32@)" /> method call.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRegisterNewDialogFilters.UnregisterNewProjectDialogFilter(System.UInt32)">
      <summary>Unregisters a filter for the AddNewProject dialog.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwFilterCookie">[in] Pointer to an integer containing a VSCOOKIE uniquely identifying the filter. From the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsRegisterNewDialogFilters.RegisterNewProjectDialogFilter(Microsoft.VisualStudio.Shell.Interop.IVsFilterNewProjectDlg,System.UInt32@)" /> method call.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsRegisterProjectDebugTargetProvider">
      <summary>Maintains a linked list of debug target providers (<see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProjectDebugTargetProvider" />). You can get an instance of the interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsRegisterDebugTargetProvider" /> (SID_SVsRegisterProjectDebugTargetProvider) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRegisterProjectDebugTargetProvider.AddDebugTargetProvider(Microsoft.VisualStudio.Shell.Interop.IVsProjectDebugTargetProvider,Microsoft.VisualStudio.Shell.Interop.IVsProjectDebugTargetProvider@)">
      <summary>Adds a debug target provided to the linked list of debug target providers.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pNewDbgTrgtProvider">[in] The new debug target provider to be added.</param>
      <param name="ppNextDbgTrgtProvider">[out] The next debug target provider in the linked list.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRegisterProjectDebugTargetProvider.RemoveDebugTargetProvider(Microsoft.VisualStudio.Shell.Interop.IVsProjectDebugTargetProvider)">
      <summary>Removes the specified debug target provider from the linked list of debug target providers.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pDbgTrgtProvider">[in] The debug target provider to remove.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsRegisterScciProvider">
      <summary>This interface is used to register the source control package with Visual Studio.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRegisterScciProvider.RegisterSourceControlProvider(System.Guid)">
      <summary>This method is called by the source control package when the package is loaded.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidProviderService">[in] GUID of the source control provider.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsResourceManager">
      <summary>Loads managed and unmanaged resources from Satellite DLLs.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsResourceManager.GetSatelliteAssemblyPath(System.String,System.Int32,System.String@)">
      <summary>Retrieves the path to the satellite assembly</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="assemblyPath">[in] Path to the assembly where the resource is to be loaded.</param>
      <param name="lcid">[in] A LCID value specifying the culture for which the resource is valid. Supplying a value of 0 will select the LCID that the user selected when the application was started.</param>
      <param name="pbstrPath">[out, retval] Path to the satellite assembly.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsResourceManager.LoadResourceBitmap(System.Guid@,System.Int32,System.String,System.IntPtr@)">
      <summary>Loads the resource bitmap into the specified package.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidPackage">[in] Guid of the package into which the resource will be loaded.</param>
      <param name="culture">[in] A LCID value specifying the culture for which the resource is valid. Supplying a value of 0 will select the LCID that the user selected when the application was started.</param>
      <param name="pszResourceName">[in] The name of the resource.</param>
      <param name="hbmpValue">[out, retval] Pointer to the resource.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsResourceManager.LoadResourceBitmap2(System.String,System.Int32,System.String,System.IntPtr@)">
      <summary>Loads the resource bitmap into the specified assembly.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszAssemblyPath">[in] Path to the assembly where the resource is to be loaded.</param>
      <param name="culture">[in] A LCID value specifying the culture for which the resource is valid. Supplying a value of 0 will select the LCID that the user selected when the application was started.</param>
      <param name="szResourceName">[in] The name of the resource.</param>
      <param name="hbmpValue">[out, retval] Pointer to the resource.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsResourceManager.LoadResourceBlob(System.Guid@,System.Int32,System.String,System.IntPtr@,System.Int32@)">
      <summary>Loads the resource blob into the specified package.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidPackage">[in] Guid of the package into which the resource will be loaded.</param>
      <param name="culture">[in] A LCID value specifying the culture for which the resource is valid. Supplying a value of 0 will select the LCID that the user selected when the application was started.</param>
      <param name="pszResourceName">[in] The name of the resource.</param>
      <param name="pBytes">[out] Size in bytes of the blob.</param>
      <param name="lAllocated">[out] Bytes allocated for the blob.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsResourceManager.LoadResourceBlob2(System.String,System.Int32,System.String,System.IntPtr@,System.Int32@)">
      <summary>Loads a resource blob into the specified assembly.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszAssemblyPath">[in] Path to the assembly where the resource is to be loaded.</param>
      <param name="culture">[in] A LCID value specifying the culture for which the resource is valid. Supplying a value of 0 will select the LCID that the user selected when the application was started.</param>
      <param name="pszResourceName">[in] The name of the resource.</param>
      <param name="pBytes">[out] Size in bytes of the blob.</param>
      <param name="lAllocated">[out] Number of bytes allocated for the blob.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsResourceManager.LoadResourceIcon(System.Guid@,System.Int32,System.String,System.Int32,System.Int32,System.IntPtr@)">
      <summary>Loads the resource icon into the specified package.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidPackage">[in] Guid of the package into which the resource will be loaded.</param>
      <param name="culture">[in] A LCID value specifying the culture for which the resource is valid. Supplying a value of 0 will select the LCID that the user selected when the application was started.</param>
      <param name="pszResourceName">[in] The name of the resource.</param>
      <param name="cx">[in] Width of the icon.</param>
      <param name="cy">[in] Height of the icon.</param>
      <param name="hicoValue">[out, retval] Pointer to the resource.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsResourceManager.LoadResourceIcon2(System.String,System.Int32,System.String,System.Int32,System.Int32,System.IntPtr@)">
      <summary>Loads a resource icon into the specified assembly.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszAssemblyPath">[in] Path to the assembly where the resource is to be loaded.</param>
      <param name="culture">[in] A LCID value specifying the culture for which the resource is valid. Supplying a value of 0 will select the LCID that the user selected when the application was started.</param>
      <param name="pszResourceName">[in] The name of the resource.</param>
      <param name="cx">[in] Width of the icon.</param>
      <param name="cy">[in] Height of the icon.</param>
      <param name="hicoValue">[out, retval] Pointer to the resource.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsResourceManager.LoadResourceString(System.Guid@,System.Int32,System.String,System.String@)">
      <summary>Loads the resource string into the specified package.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidPackage">[in] Guid of the package into which the string will be loaded.</param>
      <param name="culture">[in] A LCID value specifying the culture for which the string is valid. Supplying a value of 0 will select the LCID that the user selected when the application was started.</param>
      <param name="pszResourceName">[in] The name of the resource.</param>
      <param name="pbstrValue">[out, retval] Pointer to the resource.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsResourceManager.LoadResourceString2(System.String,System.Int32,System.String,System.String@)">
      <summary>Loads a resource string into the specified assembly.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszAssemblyPath">[in] Path to the assembly where the resource is to be loaded.</param>
      <param name="culture">[in] A LCID value specifying the culture for which the string is valid. Supplying a value of 0 will select the LCID that the user selected when the application was started.</param>
      <param name="pszResourceName">[in] The name of the resource.</param>
      <param name="pbstrValue">[out, retval]Pointer to the resource.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsRunningDocTableEvents4">
      <summary>Implements methods that fire in response to changes to documents in the Running Document Table (RDT).</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRunningDocTableEvents4.OnAfterLastDocumentUnlock(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.String,System.Int32)">
      <summary>Fired after the last document in the Running Document Table (RDT) is unlocked.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHier">[in] The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> object that owns the document about to be locked.</param>
      <param name="itemid">[in] The item ID in the hierarchy. This is a unique identifier or it can be one of the following values: <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_NIL" />, <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_ROOT" />, or <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_SELECTION" />.</param>
      <param name="pszMkDocument">[in] The path to the document about to be locked.</param>
      <param name="fClosedWithoutSaving">[in] true if the document was closed without saving; otherwise false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRunningDocTableEvents4.OnAfterSaveAll">
      <summary>Fired after a Save All command is executed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRunningDocTableEvents4.OnBeforeFirstDocumentLock(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.String)">
      <summary>Called before a document is locked in the Running Document Table (RDT) for the first time.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHier">[in] The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> object that owns the document about to be locked.</param>
      <param name="itemid">[in] The item ID in the hierarchy. This is a unique identifier or it can be one of the following values: <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_NIL" />, <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_ROOT" />, or <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_SELECTION" />.</param>
      <param name="pszMkDocument">[in] The path to the document about to be locked.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsRunningDocumentTable2">
      <summary>Represents the running document table (RDT) and provides additional functionality beyond the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsRunningDocumentTable" /> interface.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRunningDocumentTable2.CloseDocuments(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32)">
      <summary>Closes one or more documents.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="grfSaveOptions">[in] Flags from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__FRAMECLOSE" /> enumeration.</param>
      <param name="pHierarchy">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> object whose documents are to be closed. See Remarks.</param>
      <param name="docCookie">[in] An abstract value representing the document to be closed. See Remarks.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRunningDocumentTable2.FindAndLockDocumentEx(System.UInt32,System.String,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy@,System.UInt32@,System.IntPtr@,System.UInt32@)">
      <summary>Locates a document in the RDT using the document file name, then obtains a read or edit lock on that document.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="grfRDTLockType">[in] Flags whose values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSRDTFLAGS" /> enumeration.</param>
      <param name="pszMkDocument">[in] Path to the located document.</param>
      <param name="pHierPreferred">[out, optional] Returns preferred the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface for the located document.</param>
      <param name="itemidPreferred">[out, optional] Returns an item identifier of the located document. This is a unique identifier or it can be one of the following values: <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_NIL" />, <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_ROOT" />, or <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_SELECTION" />.</param>
      <param name="ppHierActual">[out, optional] Returns the actual <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface for the located document.</param>
      <param name="pitemidActual">[out, optional] Returns an item identifier of the located document. This is a unique identifier or it can be one of the following values: <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_NIL" />, <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_ROOT" />, or <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_SELECTION" />.</param>
      <param name="ppunkDocDataActual">[out, optional] Returns the IUnknown interface.</param>
      <param name="pdwCookie">[out, optional] Returns an abstract value for the document.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRunningDocumentTable2.FindOrRegisterAndLockDocument(System.UInt32,System.String,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.IntPtr,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy@,System.UInt32@,System.IntPtr@,System.UInt32@)">
      <summary>Adds a lock to a registered or unregistered document.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="grfRDTLockType">[in] Flags whose values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSRDTFLAGS" /> enumeration.</param>
      <param name="pszMkDocument">[in] Path to the located document.</param>
      <param name="pHierPreferred">[out, optional] Returns preferred the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface for the located document.</param>
      <param name="itemidPreferred">[out, optional] Returns an item identifier of the located document. This is a unique identifier or it can be one of the following values: <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_NIL" />, <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_ROOT" />, or <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_SELECTION" />.</param>
      <param name="punkDocData">[out, optional] Returns the IUnknown interface.</param>
      <param name="ppHierActual">[out, optional] Returns the actual <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface for the located document.</param>
      <param name="pitemidActual">[out, optional] Returns an item identifier of the located document. This is a unique identifier or it can be one of the following values: <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_NIL" />, <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_ROOT" />, or <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_SELECTION" />.</param>
      <param name="ppunkDocDataActual">[out, optional] Returns the IUnknown interface.</param>
      <param name="pdwCookie">[out, optional] Returns an abstract value for the document.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsRunningDocumentTable2.QueryCloseRunningDocument(System.String,System.Int32@)">
      <summary>Closes the specified document, with possible confirmation, if it is open in an incompatible editor.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszMkDocument">[in] The path to the document to close.</param>
      <param name="pfFoundAndClosed">[out] Returns non-zero (TRUE) if the document was found and closed; otherwise, returns zero (FALSE). See Remarks.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSccAddWebProjectFromSourceControl">
      <summary>This interface adds a Web-based project to the current solution from source control.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccAddWebProjectFromSourceControl.AddWebProjectFromSourceControl(System.String,System.String,System.String,System.String,System.String)">
      <summary>Adds the specified Web-based project to the current solution, storing it at the specified location.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrLocalPath">[in] The local path where the Web-based project will be stored.</param>
      <param name="bstrDatabasePath">[in] The location of the project in the source control.</param>
      <param name="bstrAuxiliarPath">[in] An additional path that can be used to locate the project in source control.</param>
      <param name="bstrProviderName">[in] A string identifying the source code control provider.</param>
      <param name="bstrDebuggingPath">[in] A path to be used when the project is opened with the solution and if the project will be opened as a "localhost" Web project.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccAddWebProjectFromSourceControl.BrowseForServerLocation(System.String@,System.String@,System.String@,System.String@,System.String@)">
      <summary>Presents a dialog box to the user to browse for a source control server location.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. The method returns <see cref="F:Microsoft.VisualStudio.VSConstants.E_FAIL" /> if the user cancels the dialog box. Otherwise, the method returns an error code.</returns>
      <param name="pbstrLocationDescription">[out] Returns a user-friendly description of the returned path (for example, "Project &lt;MyProject&gt; from database &lt;GemSS&gt;").</param>
      <param name="pbstrLocalPath">[out] Returns a suggested local path where the project will be stored. The user can override this string.</param>
      <param name="pbstrDatabasePath">[out] Returns the location of the database (this will not be shown to the user). This value is passed directly to the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSccAddWebProjectFromSourceControl.AddWebProjectFromSourceControl(System.String,System.String,System.String,System.String,System.String)" /> method.</param>
      <param name="pbstrAuxiliarPath">[out] Returns an additional path if the source control package requires it. This is passed directly to the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSccAddWebProjectFromSourceControl.AddWebProjectFromSourceControl(System.String,System.String,System.String,System.String,System.String)" /> method.</param>
      <param name="pbstrProviderName">[out] Returns a string identifying the source control package being used. This string is passed directly to the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSccAddWebProjectFromSourceControl.AddWebProjectFromSourceControl(System.String,System.String,System.String,System.String,System.String)" /> method.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccAddWebProjectFromSourceControl.IsAddWebProjectSupported(System.Boolean@)">
      <summary>Determines whether the addition of a Web-based project to the current solution directly from source control is supported.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If <see cref="F:Microsoft.VisualStudio.VSConstants.E_FAIL" /> is returned, there is no active source control package or the current source control package does not support this functionality. If this method fails, it returns an error code.</returns>
      <param name="pfResult">[out] Returns true (nonzero) if the addition of a Web-based project from source control is supported; otherwise, returns false (zero).</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSccControlNewSolution">
      <summary>Adds a newly created solution automatically to source control.  .</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccControlNewSolution.AddNewSolutionToSourceControl">
      <summary>Adds the current solution to source control.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccControlNewSolution.GetDisplayStringForAction(System.String@)">
      <summary>Retrieves the text to be displayed with the "Add to Source Control" check box in the New Projects dialog box.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrActionName">[out] Returns the text to be used for the "Add to Source Control" check box.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSccEnlistmentPathTranslation">
      <summary>Used by the solution to translate project paths.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccEnlistmentPathTranslation.TranslateEnlistmentPathToProjectPath(System.String,System.String@)">
      <summary>Translates a physical project path to a (possibly) virtual project path.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="lpszEnlistmentPath">[in] The physical path (either the local path or the enlistment UNC path) to be translated.</param>
      <param name="pbstrProjectPath">[out] The (possibly) virtual project path.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccEnlistmentPathTranslation.TranslateProjectPathToEnlistmentPath(System.String,System.String@,System.String@)">
      <summary>Translates a possibly virtual project path to a local path and an enlistment physical path.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="lpszProjectPath">[in] The project's (possibly) virtual path as obtained from the solution file.</param>
      <param name="pbstrEnlistmentPath">[out] The local path used by the solution for loading and saving the project.</param>
      <param name="pbstrEnlistmentPathUNC">[out] The path used by the source control system for managing the enlistment ("\\<paramref name="drive" />\<paramref name="path" />", "[<paramref name="drive" />]:\<paramref name="path" />", "<paramref name="file" />://<paramref name="server" />/<paramref name="path" />").</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSccGlyphs">
      <summary>Allows full customization of source control glyphs.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccGlyphs.GetCustomGlyphList(System.UInt32,System.UInt32@)">
      <summary>Called by the IDE to get a custom glyph image list for source control status.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="BaseIndex">[in] Value to add when returning glyph index.</param>
      <param name="pdwImageListHandle">[out] Handle to the custom image list.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSccManagerTooltip">
      <summary>This interface provides access to source control data to construct the ToolTip text in Solution Explorer.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccManagerTooltip.GetGlyphTipText(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.String@)">
      <summary>Provides ToolTip text based on the source control data for a specific node in the project's hierarchy Solution Explorer.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="phierHierarchy">[in] Owner hierarchy of node (null if it is a solution).</param>
      <param name="itemidNode">[in] The ID of the node for which the ToolTip is requested.</param>
      <param name="pbstrTooltipText">[out] ToolTip text.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSccOpenFromSourceControl">
      <summary>Adds items to an enlistment directly from source code control. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccOpenFromSourceControl.AddItemFromSourceControl(Microsoft.VisualStudio.Shell.Interop.IVsProject,System.UInt32,System.UInt32,System.String[],System.IntPtr,System.UInt32,System.Guid@,System.String,System.Guid@,Microsoft.VisualStudio.Shell.Interop.VSADDRESULT[])">
      <summary>Adds the specified item or items to the specified project directly from source control.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pProject">[in] <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProject" /> interface for the project to add the items to.Note   <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProject" /> is an old interface that is not used directly. Instead, query the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProject3" /> interface for the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProject" /> interface and pass that in.</param>
      <param name="itemidLoc">[in] A value indicating where in the project hierarchy to add the items. This is a unique identifier for a project or folder item or one of the following values: <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_NIL" />, <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_ROOT" />, or <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_SELECTION" />.</param>
      <param name="cFilesToAdd">[in] Number of files specified in <paramref name="rgpszFilesToAdd" /> array.</param>
      <param name="rgpszFilesToAdd">[in] Array of files names to add to the project from source control.</param>
      <param name="hwndDlgOwner">[in] Handle to the parent of the dialog box that will be used.</param>
      <param name="grfEditorFlags">[in] A combination of flags from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSSPECIFICEDITORFLAGS" /> enumeration.</param>
      <param name="rguidEditorType">[in] GUID that specifies the type of editor being used.</param>
      <param name="pszPhysicalView">[in] Name of the physical view being used.</param>
      <param name="rguidLogicalView">[in] GUID that identifies the logical view.</param>
      <param name="pResult">[out] Returns a <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSADDRESULT" /> code indicating the overall status of the add process.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccOpenFromSourceControl.AddProjectFromSourceControl(System.String)">
      <summary>Adds the specified project to the current solution directly from source control.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszProjectStoreUrl">[in] The URL of the project in the source control to be added to the current solution (for example, msss://server/…/MyProject.proj).</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccOpenFromSourceControl.GetNamespaceExtensionInformation(System.Int32,System.String@,System.String@,System.String@)">
      <summary>Retrieves the source control Namespace Extension (NSE) information for use in Open dialog boxes..</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.E_NOTIMPL" /> or an error code.</returns>
      <param name="vsofsdDlg">[in] A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSOPENFROMSCCDLG" /> enumeration specifying the type of dialog box that will be opened.</param>
      <param name="pbstrNamespaceGUID">[out] Returns the GUID (in string form) of the NSE allowing the dialog boxes to explore the NSE space.</param>
      <param name="pbstrTrayDisplayName">[out] Returns the display name of the NSE (which can appear in the Places section of the Window border of the dialog boxes).</param>
      <param name="pbstrProtocolPrefix">[out] Returns the NSE protocol prefix (for example, "msss://").</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccOpenFromSourceControl.OpenSolutionFromSourceControl(System.String)">
      <summary>Opens the specified solution directly from source control, creating a local copy as necessary.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszSolutionStoreUrl">[in] The URL of the solution in source control to be opened (for example, msss://server/.../MySolution.sln).</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSccProjectEnlistmentChoice">
      <summary>Indicates the choices a user will be given by a project when a project is retrieved from source control, otherwise known as enlisting in a project.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccProjectEnlistmentChoice.GetEnlistmentChoice(Microsoft.VisualStudio.Shell.Interop.VSSCCENLISTMENTCHOICE[])">
      <summary>Determines whether an enlistment choice should be given to the user each time a project is checked out from source control.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pvscecEnlistmentChoice">[out] Returns a value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSSCCENLISTMENTCHOICE" /> enumeration indicating whether an enlistment choice is required, optional, or not supported.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSccProjectEnlistmentFactory">
      <summary>Provides a browse dialog box in which the user can select where a project under source control is to be saved. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccProjectEnlistmentFactory.BrowseEnlistment(System.String,System.String,System.String@,System.String@)">
      <summary>Displays a browse dialog box allowing the user to change the enlistment choice.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. It returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_FALSE" /> if the browse dialog box was canceled. If it fails, this method returns an error code.</returns>
      <param name="lpszProjectPath">[in] The original project path.</param>
      <param name="lpszInitialEnlistment">[in] The user's latest edited version of the enlistment choice.</param>
      <param name="pbstrChosenEnlistment">[out] Returns the (possibly) new enlistment choice as chosen by the user.</param>
      <param name="pbstrChosenEnlistmentUNC">[out] Returns the enlistment choice as a fully qualified path (UNC-style, [drive:]\path, or file://path).</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccProjectEnlistmentFactory.GetDefaultEnlistment(System.String,System.String@,System.String@)">
      <summary>Retrieves the suggested enlistment path based on the specified project path. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="lpszProjectPath">[in] The project's path as read from the solution file (this is the name the project is known as to the solution).</param>
      <param name="pbstrDefaultEnlistment">[out] Returns the suggested enlistment destination. If there is no suggestion, then this will be a null value.</param>
      <param name="pbstrDefaultEnlistmentUNC">[out] Returns the suggested enlistment destination as a fully qualified path (UNC-style, [drive:]\path, or file://path).</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccProjectEnlistmentFactory.GetEnlistmentFactoryOptions(System.UInt32@)">
      <summary>Retrieves the options that control the enlistment choice selection.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pvscefoOptions">[out] Returns a combination of <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSSCCENLISTMENTFACTORYOPTIONS" /> enumeration values.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccProjectEnlistmentFactory.OnAfterEnlistmentCreate(System.String,System.String,System.String)">
      <summary>Called by the environment after an enlistment has been completely created.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code (a typical error is <see cref="F:Microsoft.VisualStudio.VSConstants.E_NOTIMPL" />).</returns>
      <param name="lpszProjectPath">[in] The original project path.</param>
      <param name="lpszEnlistment">[in] The enlistment choice used to create the enlistment.</param>
      <param name="lpszEnlistmentUNC">[in] The enlistment choice as a fully qualified path (UNC-style, [drive:]\path, or file://path).</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccProjectEnlistmentFactory.OnBeforeEnlistmentCreate(System.String,System.String,System.String)">
      <summary>Allows the project to do any special operations before the enlistment is actually created.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.NoteIf this method returns an error code, the enlistment will not be created.</returns>
      <param name="lpszProjectPath">[in] The original project path.</param>
      <param name="lpszEnlistment">[in] The enlistment path to be used.</param>
      <param name="lpszEnlistmentUNC">[in] The enlistment path as a fully qualified path (UNC-style, [drive:]\path, or file://path).</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccProjectEnlistmentFactory.ValidateEnlistmentEdit(System.Int32,System.String,System.String,System.String@,System.Int32@)">
      <summary>Validates an enlistment choice made by the user. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="fQuick">[in] Nonzero (true) if the validation should be fast (this allows the validation to be used during editing and to not slow down for things like network access).</param>
      <param name="lpszProjectPath">[in] The original project path. This is the name by which the project is known to the solution.</param>
      <param name="lpszChosenEnlistment">[in] The user's edited enlistment choice.</param>
      <param name="pbstrChosenEnlistmentUNC">[out] Returns the edited enlistment choice as a full path (UNC-style, [drive:]\path, or file://path).</param>
      <param name="pfValidEnlistment">[out] Returns true (nonzero) if the enlistment choice is valid; returns false (0) if not valid.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSccProjectProviderBinding">
      <summary>Allows a project type to force the choice of a particular source control package.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccProjectProviderBinding.BrowseServerPath(System.String,System.String@)">
      <summary>Displays a browse dialog box so that the user can browse for a source control server location.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. It returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_FALSE" /> if the browse dialog box was canceled. If it fails, this method returns an error code (a typical error code is <see cref="F:Microsoft.VisualStudio.VSConstants.E_NOTIMPL" />, indicating that the method is not supported although the rest of the interface may be).</returns>
      <param name="lpszServerPath">[in] The server path to start from (based on the user's latest edits).</param>
      <param name="pbstrNewServerPath">[out] Returns the new enlistment path (local system path).</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccProjectProviderBinding.GetProviderBinding(Microsoft.VisualStudio.Shell.Interop.VSSCCPROVIDERBINDING[])">
      <summary>Determines if this project requires a specific source control package or if the project should be put under source control.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pvscpbBinding">[out] Returns a value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSSCCPROVIDERBINDINGOPTIONS" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccProjectProviderBinding.GetProviderBindingOptions(System.UInt32@)">
      <summary>Retrieves the flags that control editing of the source control server path.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pvscpboOptions">[out] Returns a combination of values from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSSCCPROVIDERBINDINGOPTIONS" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccProjectProviderBinding.GetProviderService(System.Guid@)">
      <summary>This method retrieves the service ID (SID) of a service object that will be used to instantiate a source control package.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pguidService">[out] Returns the service GUID (SID) of a service object that will be used to instantiate a source control package.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccProjectProviderBinding.GetProviderSession(System.Object@)">
      <summary>Returns a session object for a Version API (VAPI)-style source control package.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="punkSession">[out] A session object to be used with a VAPI-style source control package.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccProjectProviderBinding.TranslateEnlistmentPath(System.String,System.Int32@,System.String@)">
      <summary>Translates an enlistment path into a displayable path. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. A typical error can be <see cref="F:Microsoft.VisualStudio.VSConstants.E_NOTIMPL" /> if the project does not use dual paths.</returns>
      <param name="lpszPath">[in] The enlistment path (a local path) to be translated.</param>
      <param name="pfAlternateIsDisplay">[out] Returns true (nonzero) if the alternate path is the preferred path for display; otherwise, returns false (0) if the path supplied as <paramref name="lpszPath" /> is preferred for display.</param>
      <param name="pbstrAlternatePath">[out] Returns an alternate path that can be used for display if <paramref name="pfAlternatedIsDisplay" /> is true.Note   The alternate path should never be empty: if an alternate path is not needed, then this method should return the original path as the alternate path.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccProjectProviderBinding.ValidateServerPathEdit(System.Int32,System.String,System.Int32@)">
      <summary>Determines if the given source control server path is valid.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="fQuick">[in] Nonzero (true) if the validation should be fast (this allows the validation to be used during editing and does not slow it down for things like network access).</param>
      <param name="lpszServerPath">[in] The server path to be validated.</param>
      <param name="pfValidServer">[out] Returns nonzero (true) if the path is valid; otherwise, returns zero (false).</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSccProvider">
      <summary>Toggles the current activity status of the provider.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccProvider.AnyItemsUnderSourceControl(System.Int32@)">
      <summary>Determines if any item in the solution are under source control.</summary>
      <returns>The method returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />.</returns>
      <param name="pfResult">[out] Returns non-zero (TRUE) if there is at least one item under source control; otherwise, returns zero (FALSE).</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccProvider.SetActive">
      <summary>Called by environment to mark a particular source control package as active.</summary>
      <returns>The method returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccProvider.SetInactive">
      <summary>Called by environment to mark a particular source control package as inactive.</summary>
      <returns>The method returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSccToolsOptions">
      <summary>Retrieves and updates various options associated with source control.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccToolsOptions.GetSccToolsOption(Microsoft.VisualStudio.Shell.Interop.SccToolsOptionsEnum,System.Object@)">
      <summary>Retrieves the value associated with the specified source control option.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="sctoOptionToBeSet">[in] A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__SccToolsOptionsEnum" /> enumeration.</param>
      <param name="pvarValueToGet">[out] Returns the value associated with the specified option.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccToolsOptions.SetSccToolsOption(Microsoft.VisualStudio.Shell.Interop.SccToolsOptionsEnum,System.Object)">
      <summary>This method sets a specified source control option to the specified value.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="sctoOptionToBeSet">[in] A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__SccToolsOptionsEnum" /> enumeration.</param>
      <param name="varValueToBeSet">[in] The value to set on the option (typically, this will be nonzero for true and zero for false, but other values are possible depending on the option). See the individual options in SccToolsOptionsEnum for the appropriate values to use.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSccVirtualFolders">
      <summary>Gets a list of virtual folders within a project.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccVirtualFolders.GetVirtualFolders(System.UInt32,Microsoft.VisualStudio.OLE.Interop.CALPOLESTR[])">
      <summary>This method retrieves a list of virtual folders that appear under a specified node in a project hierarchy.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="itemid">[in] A node type in a project hierarchy. This is a unique identifier for a project or folder item or one of the following values: <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_NIL" />, <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_ROOT" />, or <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_SELECTION" />.</param>
      <param name="pCaStringsOut">[in, out] The pre-allocated <see cref="T:Microsoft.VisualStudio.OLE.Interop.CALPOLESTR" /> structure is filled with an array of virtual folder names that appear under the node specified by <paramref name="itemid" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSccVirtualFolders.IsItemChildOfVirtualFolder(System.String,System.Boolean@)">
      <summary>This method determines if a specified item is a child of any virtual folder.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszItemName">[in] The name of the child item.</param>
      <param name="pfResult">[out] Returns true if the item is a file or subfolder of any virtual folder. Otherwise, it returns false.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSelectedSymbol">
      <summary>Provides the name and navigation information (library name, and so on) for a single symbol. An element in an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSelectedSymbols" /> collection.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSelectedSymbol.GetName(System.String@)">
      <summary>Gets the symbol name.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrName">[out] The symbol name.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSelectedSymbol.GetNavInfo(Microsoft.VisualStudio.Shell.Interop.IVsNavInfo@)">
      <summary>Gets an object that can be used to identify a symbol in the hierarchical tree of symbols.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
      <param name="ppNavInfo">[out] The object used to identify a symbol.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSelectedSymbols">
      <summary>A collection of <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSelectedSymbol" /> interfaces that provide name and navigation information about symbols in a selection. You can get an instance of this interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsClassView" /> (SID_SVsClassView) service or <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsObjBrowser" /> (SID_SVsObjBrowser) service for class view or the object browser.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSelectedSymbols.EnumSelectedSymbols(Microsoft.VisualStudio.Shell.Interop.IVsEnumSelectedSymbols@)">
      <summary>Gets an object that enumerates a collection of selected symbols.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
      <param name="ppIVsEnumSelectedSymbols">[out] An enumeration object that can be used to enumerate the selected symbols.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSelectedSymbols.GetCount(System.UInt32@)">
      <summary>Gets the number of selected symbols in the collection.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pcItems">[out] The number of selected symbols.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSelectedSymbols.GetItem(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsSelectedSymbol@)">
      <summary>Gets the selected symbol from the location in the collection specified by the item number.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="iItem">[in] The location from which to retrieve the selected symbel</param>
      <param name="ppIVsSelectedSymbol">[out] The selected symbol.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSelectedSymbols.GetItemTypes(System.UInt32@)">
      <summary>Gets the type of the symbols.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pgrfTypes">[out] One of the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTTYPE2" /> values.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSettingsErrorInformation">
      <summary>Implemented by the IDE. This is an internal interface used to allow communication between native and managed code in the IDE.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsErrorInformation.GetCompletionStatus(System.UInt32@)">
      <summary>Gets completion status.</summary>
      <returns>The HRESULT.</returns>
      <param name="pdwCompletionStatus">[out] The completion status.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsErrorInformation.GetErrorCount(System.Int32@)">
      <summary>Gets the error count.</summary>
      <returns>The HRESULT.</returns>
      <param name="pnErrors">[out] The error count.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsErrorInformation.GetErrorInfo(System.Int32,System.UInt32@,System.String@)">
      <summary>Gets the error info.</summary>
      <returns>The HRESULT.</returns>
      <param name="nErrorIndex">The error index.</param>
      <param name="pdwErrorType">The error type.</param>
      <param name="pbstrError">The error.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSettingsReader">
      <summary>Provides read access to configuration information stored in the Visual Studio settings file.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsReader.ReadCategoryVersion(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
      <summary>Returns the value of a category version object stored in the Visual Studio settings file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pnMajor">[out] The major version number of the category.</param>
      <param name="pnMinor">[out] The minor version number of the category.</param>
      <param name="pnBuild">[out] The build number of the category.</param>
      <param name="pnRevision">[out] The revision number of the category.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsReader.ReadFileVersion(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
      <summary>Returns the value of a file version object stored in the Visual Studio settings file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pnMajor">[out] The major version number of the file.</param>
      <param name="pnMinor">[out] The minor version number of the file.</param>
      <param name="pnBuild">[out] The build number of the file.</param>
      <param name="pnRevision">[out] The revision number of the file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsReader.ReadSettingAttribute(System.String,System.String,System.String@)">
      <summary>Returns the value of an attribute object stored in the Visual Studio settings file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszSettingName">[in] String uniquely identifying the data element to be retrieved.</param>
      <param name="pszAttributeName">[in] Sting uniquely identifying the attribute.</param>
      <param name="pbstrSettingValue">[out] String retrieved from the specified data element of the Visual Studio settings file</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsReader.ReadSettingBoolean(System.String,System.Int32@)">
      <summary>Returns the value of a Boolean object stored in the Visual Studio settings file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszSettingName">[in] String uniquely identifying the data element to be retrieved.</param>
      <param name="pfSettingValue">[out] Boolean value retrieved from the specified data element of the Visual Studio settings file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsReader.ReadSettingBytes(System.String,System.Byte@,System.Int32@,System.Int32)">
      <summary>Returns the values of an array stored in the Visual Studio settings file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszSettingName">[in] String uniquely identifying the data element to be retrieved.</param>
      <param name="pSettingValue">[in, out] Buffer to receive byte data retrieved from the specified data element of the Visual Studio settings file.</param>
      <param name="plDataLength">[out] Number of byte values returned.</param>
      <param name="lDataMax">[in] Maximum number of bytes to be returned. If size of the stored data is greater than <paramref name="lDataMax" />, an error is returned.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsReader.ReadSettingLong(System.String,System.Int32@)">
      <summary>Returns the value of a Long object stored in the Visual Studio settings file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszSettingName">[in] String uniquely identifying the data element to be retrieved.</param>
      <param name="plSettingValue">[out] Long (32-bit integer) value retrieved from the specified data element of the Visual Studio settings file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsReader.ReadSettingString(System.String,System.String@)">
      <summary>Returns the value of a String object stored in the Visual Studio settings file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszSettingName">[in] String uniquely identifying the data element to be retrieved.</param>
      <param name="pbstrSettingValue">[out] String retrieved from the specified data element of the Visual Studio settings file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsReader.ReadSettingXml(System.String,System.Object@)">
      <summary>Returns the value of an XML object stored in the Visual Studio settings file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszSettingName">[in] String uniquely identifying the data element to be retrieved.</param>
      <param name="ppIXMLDOMNode">[out, retval] An IXMLDOMNode object retrieved from the specified data element of the Visual Studio settings file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsReader.ReadSettingXmlAsString(System.String,System.String@)">
      <summary>Returns the value of an XML setting as a string object stored in the Visual Studio settings file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszSettingName">[in] String uniquely identifying the data element to be retrieved.</param>
      <param name="pbstrXML">[out, retval] String retrieved from the specified data element of the Visual Studio settings file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsReader.ReportError(System.String,System.UInt32)">
      <summary>Reports the error status of the settings file read operation.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszError">[in] The error status string.</param>
      <param name="dwErrorType">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSSETTINGSERRORTYPES" /> that specifies the type of error status.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSettingsWriter">
      <summary>Provides VSPackages a mechanism for storing configuration information in the Visual Studio settings file.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsWriter.ReportError(System.String,System.UInt32)">
      <summary>Reports the error status of the settings file write operation.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszError">[in] The error status string.</param>
      <param name="dwErrorType">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSSETTINGSERRORTYPES" /> that specifies the type of error status.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsWriter.WriteCategoryVersion(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Sets the value of a category version object stored in the Visual Studio settings file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="nMajor">[in] The major version number of the category.</param>
      <param name="nMinor">[in] The minor version number of the category.</param>
      <param name="nBuild">[in] The build number of the category.</param>
      <param name="nRevision">[in] The revision number of the category.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsWriter.WriteSettingAttribute(System.String,System.String,System.String)">
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszSettingName">[in] String uniquely identifying the data element to be stored.</param>
      <param name="pszAttributeName">[in] The attribute name.</param>
      <param name="pszSettingValue">[in] The value to be stored as the specified data element of the Visual Studio settings file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsWriter.WriteSettingBoolean(System.String,System.Int32)">
      <summary>Stores the value of a Boolean object in the Visual Studio settings file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszSettingName">[in] String uniquely identifying the data element to be stored.</param>
      <param name="fSettingValue">[in] Boolean value to be stored as the specified data element of the Visual Studio settings file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsWriter.WriteSettingBytes(System.String,System.Byte[],System.Int32)">
      <summary>Stores the values of an array in the Visual Studio settings file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszSettingName">[in] String uniquely identifying the data element to be stored.</param>
      <param name="pSettingValue">[in, size_is(lDataLength)] Buffer to be stored as the specified data element of the Visual Studio settings file.</param>
      <param name="lDataLength">[in] Number of byte values to be stored.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsWriter.WriteSettingLong(System.String,System.Int32)">
      <summary>Stores the value of a Long object in the Visual Studio settings file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszSettingName">[in] String uniquely identifying the data element to be stored</param>
      <param name="lSettingValue">[in] Long (32-bit Integer) value to be stored as the specified data element of the Visual Studio settings file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsWriter.WriteSettingString(System.String,System.String)">
      <summary>Stores a string value in the Visual Studio settings file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszSettingName">[in] String uniquely identifying the data element to be stored</param>
      <param name="pszSettingValue">[in] String to be stored as the specified data element of the Visual Studio settings file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsWriter.WriteSettingXml(System.Object)">
      <summary>Stores the value of an XML object in the Visual Studio settings file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pIXMLDOMNode">[in] An IXMLDOMNode object to be stored as the specified data element of the Visual Studio settings file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSettingsWriter.WriteSettingXmlFromString(System.String)">
      <summary>Stores the value of an XML setting as a string object in the Visual Studio settings file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="szXML">[in] String to be stored as the specified data element of the Visual Studio settings file.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsShell2">
      <summary>Supplies shell services in addition to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsShell" /> interface. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsShell2.LoadPackageStringWithLCID(System.Guid@,System.UInt32,System.UInt32,System.String@)">
      <summary>Loads a localized string resource from a VSPackage satellite DLL.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidPackage">[in] GUID of the VSPackage whose satellite DLL contains the string resource.</param>
      <param name="resid">[in] Specifies a resource ID of the string.</param>
      <param name="lcid">[in] Specifies the locale ID, LCID. For example, LCID = 1033 for English.</param>
      <param name="pbstrOut">[out] Pointer to the requested string.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet">
      <summary>Populates the component set with browsable components, such as Visual Studio projects, external .NET Framework components and type (.tlb) libraries. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet.AddComponent(System.Guid@,Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA[],Microsoft.VisualStudio.Shell.Interop.IVsNavInfo@,Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA[])">
      <summary>Adds a component to a component set.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidLib">[in]The <see cref="T:System.Guid" /> that identifies the registered library.</param>
      <param name="pcsdComponent">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA" /> value specifying the attributes of component to find.</param>
      <param name="ppRealLibNavInfo">[out] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> interface of the found components.</param>
      <param name="pcsdAddedComponent">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA" /> value specifying the attributes of the added component.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet.CreateNavInfo(System.Guid@,Microsoft.VisualStudio.Shell.Interop.SYMBOL_DESCRIPTION_NODE[],System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsNavInfo@)">
      <summary>Creates <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> for a symbol defined in the <paramref name="rgSymbolNodes" /> array of symbols.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidLib">[in]The <see cref="T:System.Guid" /> that identifies the registered library. For more information, see vsshell80.idl, VS Browse Libraries.</param>
      <param name="rgSymbolNodes">[in] An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.SYMBOL_DESCRIPTION_NODE" /> objects describing each node in the tree.</param>
      <param name="ulcNodes">[in] The number of objects in the <paramref name="rgSymbolNodes" /> array.</param>
      <param name="ppNavInfo">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> that represents the navigation information of a symbol in the hierarchical tree of symbols.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet.FindComponent(System.Guid@,Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA[],Microsoft.VisualStudio.Shell.Interop.IVsNavInfo@,Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA[])">
      <summary>Finds a component in the component set.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="guidLib">[in]The <see cref="T:System.Guid" /> that identifies the registered library. Can be GUID_NULL.</param>
      <param name="pcsdComponent">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA" /> value specifying the attributes of component to find.</param>
      <param name="ppRealLibNavInfo">[out] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> interface of the found components.</param>
      <param name="pcsdExistingComponent">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA" /> value specifying the attributes of the found component.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet.get_ChildListOptions(System.UInt32@)">
      <summary>Returns the options for the child list of a symbol. The list is described by the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2" /> interface.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pdwOptions">One value or a combination of <see cref="T:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_OPTIONS" /> values.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet.get_ComponentsListOptions(System.UInt32@)">
      <summary>Returns the options for the list of components.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pdwOptions">One value or a combination of <see cref="T:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_OPTIONS" /> values.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet.get_Owner(System.Object@)">
      <summary>Identifies the component set by the owner.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppOwner">An object that implements <see cref="T:VSLangProj.VSProject" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet.get_RootNavInfo(Microsoft.VisualStudio.Shell.Interop.IVsNavInfo@)">
      <summary>Provides the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> for the root node of the component set.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pRootNavInfo">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> that represents the navigation information for the root node of the component set.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet.GetList2(System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2[],Microsoft.VisualStudio.Shell.Interop.IVsObjectList2,Microsoft.VisualStudio.Shell.Interop.IVsObjectList2@)">
      <summary>Returns the requested list of symbols.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ListType">[in] One of the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTTYPE2" /> values.</param>
      <param name="flags">[in] One of the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTFLAGS" /> values.</param>
      <param name="pobSrch">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2" /> that describes the search criteria.</param>
      <param name="pExtraListToCombineWith">A <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2" /> list of symbols that is a part of the resulting <paramref name="ppIVsObjectList2 " />list.</param>
      <param name="ppIVsObjectList2">[out]Returns a <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2" /> list of requested items.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet.GetSupportedCategoryFields2(System.Int32,System.UInt32@)">
      <summary>Returns the category values supported by the component set for a specified category.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="Category">A category type that the component set supports. One value or a combination of the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_CATEGORY2" /> values.</param>
      <param name="pgrfCatField">[out] A category field. See Remarks for possible values.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet.put_ChildListOptions(System.UInt32)">
      <summary>Sets the options for the child <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2" /> list of a symbol in the hierarchical tree of symbols.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwOptions">One value or a combination of <see cref="T:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_OPTIONS" /> values.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet.put_ComponentsListOptions(System.UInt32)">
      <summary>Sets the options for the list of components.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwOptions">One value or a combination of <see cref="T:Microsoft.VisualStudio.Shell.Interop._BROWSE_COMPONENT_SET_OPTIONS" /> values.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet.put_Owner(System.Object)">
      <summary>Sets the owner for the component set.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pOwner">An object that implements <see cref="T:VSLangProj.VSProject" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet.put_RootNavInfo(Microsoft.VisualStudio.Shell.Interop.IVsNavInfo)">
      <summary>Sets the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> for the root node of the component set.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pRootNavInfo">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> that represents the navigation information for the root node of the component set.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet.RemoveAllComponents">
      <summary>Removes all components from the component set.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet.RemoveComponent(Microsoft.VisualStudio.Shell.Interop.IVsNavInfo)">
      <summary>Removes a component from the component set.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pRealLibNavInfo">The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> that represents the navigation information that does not include the root node navigation information. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleBrowseComponentSet.UpdateCounter(System.UInt32@)">
      <summary>Returns the current state of the set counter. Indicates that the set contents have changed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCurUpdate">The current state of the update counter.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleLibrary2">
      <summary>A simplified version of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2" /> interface.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleLibrary2.AddBrowseContainer(Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA[],System.UInt32@,System.String@)">
      <summary>Adds a browse container to be browsed by the library.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pcdComponent">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSCOMPONENTSELECTORDATA" /> object which specifies attributes that identify the added component.</param>
      <param name="pgrfOptions">[in, out] Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_ADDREMOVEOPTIONS" /> enumeration.</param>
      <param name="pbstrComponentAdded">[out] Returns a string containing the text to display for the added component.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleLibrary2.CreateNavInfo(Microsoft.VisualStudio.Shell.Interop.SYMBOL_DESCRIPTION_NODE[],System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsNavInfo@)">
      <summary>Reserved for future use.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="rgSymbolNodes">[in] An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.SYMBOL_DESCRIPTION_NODE" /> objects describing each node in the tree.</param>
      <param name="ulcNodes">[in] The number of objects in the <paramref name="rgSymbolNodes" /> array.</param>
      <param name="ppNavInfo">[out] Returns an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> object representing the navigation information for all nodes in the tree.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleLibrary2.GetBrowseContainersForHierarchy(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSBROWSECONTAINER[],System.UInt32[])">
      <summary>Returns an array of Browse Containers that correspond to the given <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" />.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy">[in] An <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> object representing the hierarchy.</param>
      <param name="celt">[in] The number of elements in the <paramref name="rgBrowseContainers" /> array.</param>
      <param name="rgBrowseContainers">[in, out] On input, null. On output, an array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSBROWSECONTAINER" /> structures.</param>
      <param name="pcActual">[out] The actual number of containers that were returned in <paramref name="rgBrowseContainers" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleLibrary2.GetGuid(System.Guid@)">
      <summary>Returns the GUID of the library.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pguidLib">[out] Returns the GUID that identifies this library.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleLibrary2.GetLibFlags2(System.UInt32@)">
      <summary>Returns flags associated with the library.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pgrfFlags">[out] Returns a combination of flags from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_FLAGS2" /> enumeration that apply to the current library.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleLibrary2.GetList2(System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2[],Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2@)">
      <summary>Returns the requested list of symbols as an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2" /> interface.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ListType">[in] Specifies list type. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTTYPE2" /> enumeration.</param>
      <param name="flags">[in] Specifies flags. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTFLAGS" /> enumeration.</param>
      <param name="pobSrch">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2" /> structure describing the search criteria.</param>
      <param name="ppIVsSimpleObjectList2">[out]Returns an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2" /> object that contains the list of requested items.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleLibrary2.GetSeparatorStringWithOwnership(System.String@)">
      <summary>Returns the string used to separate symbols for this type of Browse Container.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrSeparator">[out] Returns a string containing the language specific scope operator.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleLibrary2.GetSupportedCategoryFields2(System.Int32,System.UInt32@)">
      <summary>Returns the category values supported by the library for a specified category.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="Category">[in] Specifies a library's category type. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_CATEGORY2" /> enumeration. </param>
      <param name="pgrfCatField">[out] Pointer to a category field object. See Remarks for possible values.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleLibrary2.LoadState(Microsoft.VisualStudio.OLE.Interop.IStream,Microsoft.VisualStudio.Shell.Interop.LIB_PERSISTTYPE)">
      <summary>Asks the library to load its persisted global Browse Containers.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pIStream">[in] An <see cref="T:Microsoft.VisualStudio.OLE.Interop.IStream" /> object to read from.</param>
      <param name="lptType">[in] Specifies the persisted type of the library. Always <see cref="F:Microsoft.VisualStudio.Shell.Interop.LIB_PERSISTTYPE.LPT_GLOBAL" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleLibrary2.RemoveBrowseContainer(System.UInt32,System.String)">
      <summary>Removes a Browse Container being browsed by the library.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwReserved">[in] Reserved. Set this parameter to null.</param>
      <param name="pszLibName">[in] A string containing the library name.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleLibrary2.SaveState(Microsoft.VisualStudio.OLE.Interop.IStream,Microsoft.VisualStudio.Shell.Interop.LIB_PERSISTTYPE)">
      <summary>Asks the library to save its persisted global Browse Containers.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pIStream">[in] An <see cref="T:Microsoft.VisualStudio.OLE.Interop.IStream" /> object to write to.</param>
      <param name="lptType">[in] Specifies the persisted type of the library. Always <see cref="F:Microsoft.VisualStudio.Shell.Interop.LIB_PERSISTTYPE.LPT_GLOBAL" /> from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.LIB_PERSISTTYPE" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleLibrary2.UpdateCounter(System.UInt32@)">
      <summary>Returns the current change counter for the library and is used to indicate that the library contents have changed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCurUpdate">[out] Returns the current update counter.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2">
      <summary>A simplified version of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2" /> interface.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.CanDelete(System.UInt32,System.Int32@)">
      <summary>Returns a flag indicating if the given list item can be deleted.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="pfOK">[out] Pointer to a flag indicating whether the item can be deleted.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.CanGoToSource(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSOBJGOTOSRCTYPE,System.Int32@)">
      <summary>Returns a flag indicating if navigation to the given list item's source is supported.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="SrcType">[in] Specifies the source type. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBJGOTOSRCTYPE" /> enumeration.</param>
      <param name="pfOK">[out] Pointer to a flag indicating whether navigation is supported.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.CanRename(System.UInt32,System.String,System.Int32@)">
      <summary>Returns a flag indicating if the given list item can be renamed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="pszNewName">[in] Pointer to a null-terminated string containing the new name.</param>
      <param name="pfOK">[out] Pointer to a flag indicating whether an item can be renamed.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.CountSourceItems(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy@,System.UInt32@,System.UInt32@)">
      <summary>Returns the hierarchy and the number of ItemIDs corresponding to source files for the given list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="ppHier">[out] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface.</param>
      <param name="pItemid">[out] Specifies the <paramref name="itemid" /> of an item within the hierarchy. Values are described in VSITEMID.</param>
      <param name="pcItems">[out] Pointer to the count of items.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.DoDelete(System.UInt32,System.UInt32)">
      <summary>Asks the given list item to do the delete operation.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item to delete.</param>
      <param name="grfFlags">[in] Values taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBJOPFLAGS" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.DoDragDrop(System.UInt32,Microsoft.VisualStudio.OLE.Interop.IDataObject,System.UInt32,System.UInt32@)">
      <summary>Asks the given list item to handle a drag-and-drop operation.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="pDataObject">[in] Pointer to an IDataObject being dropped.</param>
      <param name="grfKeyState">[in] Current state of the keyboard and the mouse modifier keys.</param>
      <param name="pdwEffect">[in, out] On input, the effect being requested. On output, the effect that your object list allows.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.DoRename(System.UInt32,System.String,System.UInt32)">
      <summary>Asks the given list item to do the rename operation.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="pszNewName">[in] Pointer to a null-terminated string containing the new name.</param>
      <param name="grfFlags">[in] Flag indicating that Index is part of a multi-select. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBJOPFLAGS" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.EnumClipboardFormats(System.UInt32,System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSOBJCLIPFORMAT[],System.UInt32[])">
      <summary>Asks the given list item to enumerate its supported clipboard formats.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="grfFlags">[in] Specifies multi-selection. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBJCFFLAGS" /> enumeration.</param>
      <param name="celt">[in] Specifies the element count of <paramref name="rgcfFormats" />.</param>
      <param name="rgcfFormats">[in, out] Specifies an array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBJCLIPFORMAT" /> structures defining the formats supported.</param>
      <param name="pcActual">[out] Pointer to a count of formats in the <paramref name="rgcfformats" /> array actually returned.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.FillDescription2(System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsObjectBrowserDescription3)">
      <summary>Asks the list item to provide description text to be used in the object browser.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="grfOptions">[in] Specifies description options. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBJDESCOPTIONS" /> enumeration</param>
      <param name="pobDesc">[in] Specifies an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsObjectBrowserDescription3" /> interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.GetBrowseObject(System.UInt32,System.Object@)">
      <summary>Returns a pointer to the property browse IDispatch for the given list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="ppdispBrowseObj">[out] Pointer to an IDispatch object that is used to populate the Properties window.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.GetCapabilities2(System.UInt32@)">
      <summary>Returns an object list's capabilities.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pgrfCapabilities">[out] Specifies an object list's capabilities. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTCAPABILITIES" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.GetCategoryField2(System.UInt32,System.Int32,System.UInt32@)">
      <summary>Returns the value for the specified category for the given list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="Category">[in] Specifies the category of interest. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.LIB_CATEGORY" /> enumeration.</param>
      <param name="pfCatField">[out] Pointer to a variable holding the value returned.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.GetClipboardFormat(System.UInt32,System.UInt32,Microsoft.VisualStudio.OLE.Interop.FORMATETC[],Microsoft.VisualStudio.OLE.Interop.STGMEDIUM[])">
      <summary>Asks the given list item to renders a specific clipboard format that it supports.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="grfFlags">[in] Specifies multi-selection. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBJCFFLAGS" /> enumeration.</param>
      <param name="pFormatetc">[in] Pointer to a <see cref="T:Microsoft.VisualStudio.OLE.Interop.FORMATETC" /> structure containing clipboard format information.</param>
      <param name="pMedium">[in] Pointer to a <see cref="T:Microsoft.VisualStudio.OLE.Interop.STGMEDIUM" /> structure indicating the data transfer medium.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.GetContextMenu(System.UInt32,System.Guid@,System.Int32@,Microsoft.VisualStudio.OLE.Interop.IOleCommandTarget@)">
      <summary>Allows the list to provide a different context menu and IOleCommandTarget for the given list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="pclsidActive">[out] Specifies the CLSID of the menu group containing your menu.</param>
      <param name="pnMenuId">[out] Pointer to an integer containing the menu id.</param>
      <param name="ppCmdTrgtActive">[out] Pointer to the list's or the library's IOleCommandTarget interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.GetDisplayData(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSTREEDISPLAYDATA[])">
      <summary>Retrieves data to draw the requested tree list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the node of interest.</param>
      <param name="pData">[out] Pointer to a <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTREEDISPLAYDATA" /> structure containing the display data.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.GetExpandable3(System.UInt32,System.UInt32,System.Int32@)">
      <summary>Returns a flag indicating whether the given list item is expandable.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="ListTypeExcluded">[in] Specifies the list types to be excluded. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTTYPE" /> enumeration. This is primarily to remove LLT_MEMBERS from consideration in object browser, where they are shown in a separate pane.</param>
      <param name="pfExpandable">[out] Pointer to a flag indicating expandability.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.GetExtendedClipboardVariant(System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSOBJCLIPFORMAT[],System.Object@)">
      <summary>Asks the given list item to renders a specific clipboard format as a variant.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="grfFlags">[in] Specifies multi-selection. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBJCFFLAGS" /> enumeration.</param>
      <param name="pcfFormat">[in] Specifies a <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBJCLIPFORMAT" /> structure defining the format requested.</param>
      <param name="pvarFormat">[out] Specifies a pointer to a variant where you render the data. The environment frees the variant when it is done with it.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.GetFlags(System.UInt32@)">
      <summary>Returns the attributes of the current tree list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pFlags">[out] Pointer to a variable indicating attributes of the current tree list. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSTREEFLAGS" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.GetItemCount(System.UInt32@)">
      <summary>Returns the number of items in the current tree list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCount">[out] Pointer to the count of the tree list items.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.GetList2(System.UInt32,System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2[],Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2@)">
      <summary>Returns a child <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2" /> for the specified category.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="ListType">[in] Specifies the type of list being requested. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTTYPE" /> enumeration.</param>
      <param name="flags">[in] Specifies the flags that control the request for object list information. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._LIB_LISTFLAGS" /> enumeration.</param>
      <param name="pobSrch">[in] Unused. Should be ignored.</param>
      <param name="ppIVsSimpleObjectList2">[out] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2" /> interface of the returned child list.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.GetMultipleSourceItems(System.UInt32,System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSITEMSELECTION[])">
      <summary>Returns the ItemID corresponding to source files for the given list item if more than one.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="grfGSI">[in] Flag providing information about how the selected items should be returned. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSGSIFLAGS" /> enumeration.</param>
      <param name="cItems">[in] The number of items returned in <paramref name="rgItemSel" />.</param>
      <param name="rgItemSel">[out] Array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSITEMSELECTION" /> structures that contain an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> pointer and item identifier for each selected item.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.GetNavInfo(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsNavInfo@)">
      <summary>Reserved for future use.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] The index of the item for which to get navigation information.</param>
      <param name="ppNavInfo">[out] Returns an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> object that contains the requested information.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.GetNavInfoNode(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsNavInfoNode@)">
      <summary>Reserved for future use.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] The index of the item for which to get navigation information.</param>
      <param name="ppNavInfoNode">[out] Returns an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfoNode" /> object that contains the requested information.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.GetProperty(System.UInt32,System.Int32,System.Object@)">
      <summary>Returns the specified property for the specified list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] The index of the item for which to get a property.</param>
      <param name="propid">[in] A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBJLISTELEMPROPID" /> enumeration specifying the property to get.</param>
      <param name="pvar">[out] Returns a VARIANT object containing the requested value.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.GetSourceContextWithOwnership(System.UInt32,System.String@,System.UInt32@)">
      <summary>Returns a source filename and line number for the given list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="pbstrFilename">[out] Returns a string containing the file name.</param>
      <param name="pulLineNum">[out] Returns a line number associated with the list item.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.GetTextWithOwnership(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSTREETEXTOPTIONS,System.String@)">
      <summary>Returns the text representations for the requested tree list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the zero based index of the item of interest.</param>
      <param name="tto">[in] Specifies the text type being requested. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTREETEXTOPTIONS" /> enumeration.</param>
      <param name="pbstrText">[out] Returns the text for the specified tree list item.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.GetTipTextWithOwnership(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSTREETOOLTIPTYPE,System.String@)">
      <summary>Returns the tool tip text for the requested tree list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the node of interest.</param>
      <param name="eTipType">[in] Specifies the type of tool tip text. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTREETOOLTIPTYPE" /> enumeration.</param>
      <param name="pbstrText">[out] Returns a string containing the tree list item's tip text.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.GetUserContext(System.UInt32,System.Object@)">
      <summary>Returns the user context object for the given list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="ppunkUserCtx">[out] Pointer to a context bag returned as an IUnknown interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.GoToSource(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSOBJGOTOSRCTYPE)">
      <summary>Navigates to the source for the given list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="SrcType">[in] Specifies the source type. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBJGOTOSRCTYPE" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.LocateNavInfoNode(Microsoft.VisualStudio.Shell.Interop.IVsNavInfoNode,System.UInt32@)">
      <summary>Reserved for future use.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pNavInfoNode">[in] An <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfoNode" /> object representing the navigation information for a node.</param>
      <param name="pulIndex">[out] Returns the index of the list item that corresponds to the specified navigation node.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.OnClose(Microsoft.VisualStudio.Shell.Interop.VSTREECLOSEACTIONS[])">
      <summary>Notifies the current tree list that it is being closed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ptca">[out] Specifies to the tree view the action to take when closing this tree list. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTREECLOSEACTIONS" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.QueryDragDrop(System.UInt32,Microsoft.VisualStudio.OLE.Interop.IDataObject,System.UInt32,System.UInt32@)">
      <summary>Returns a flag indicating whether the given list item supports a drag-and-drop operation.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
      <param name="pDataObject">[in] Pointer to an IDataObject being dropped.</param>
      <param name="grfKeyState">[in] Current state of the keyboard and the mouse modifier keys.</param>
      <param name="pdwEffect">[in, out] On input, the effect being requested. On output, the effect that your object list allows.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.ShowHelp(System.UInt32)">
      <summary>Allows the list to display help for the given list item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] Specifies the index of the list item of interest.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimpleObjectList2.UpdateCounter(System.UInt32@)">
      <summary>Returns the current change counter for the tree list, and is used to indicate that the list contents have changed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCurUpdate">[out] Pointer to the update counter of the current tree list.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSimplePreviewChangesList">
      <summary>This is a simplified version of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesList" /> interface.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimplePreviewChangesList.GetDisplayData(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSTREEDISPLAYDATA[])">
      <summary>Returns display data for the specified item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] The index of the item for which to get the display data.</param>
      <param name="pData">[in, out] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTREEDISPLAYDATA" /> structure that is filled in with the requested data.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimplePreviewChangesList.GetExpandable(System.UInt32,System.Int32@)">
      <summary>Determines if the specified item can be expanded.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] The index of the item.</param>
      <param name="pfExpandable">[out] Returns nonzero (TRUE) if the item can be expanded; otherwise, returns zero (FALSE).</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimplePreviewChangesList.GetExpandedList(System.UInt32,System.Int32@,Microsoft.VisualStudio.Shell.Interop.IVsSimplePreviewChangesList@)">
      <summary>Returns the child list of the specified item that has been expanded in the tree view.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] The index of the item for which to get its children.</param>
      <param name="pfCanRecurse">[out] Returns nonzero (TRUE) if the child list can be recursively called to access its children; otherwise, returns zero (FALSE).</param>
      <param name="ppIVsSimplePreviewChangesList">[out] Returns an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimplePreviewChangesList" /> object that contains the requested children elements.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimplePreviewChangesList.GetItemCount(System.UInt32@)">
      <summary>Returns the number of items in the preview list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pCount">[out] Returns the number of items in the preview list.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimplePreviewChangesList.GetTextWithOwnership(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSTREETEXTOPTIONS,System.String@)">
      <summary>Returns the specified text for the specified item in the preview list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] The index of the item for which to get text.</param>
      <param name="tto">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTREETEXTOPTIONS" /> structure describing what kind of text to return.</param>
      <param name="pbstrText">[out] Returns a string containing the requested text.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimplePreviewChangesList.GetTipTextWithOwnership(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSTREETOOLTIPTYPE,System.String@)">
      <summary>Returns the ToolTip text for the specified item in the preview list.</summary>
      <returns>f the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] The index of the item for which to get the ToolTip text.</param>
      <param name="eTipType">[in] A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTREETOOLTIPTYPE" /> enumeration specifying the kind of ToolTip text to return.</param>
      <param name="pbstrText">[out] Returns a string containing the ToolTip text.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimplePreviewChangesList.LocateExpandedList(Microsoft.VisualStudio.Shell.Interop.IVsSimplePreviewChangesList,System.UInt32@)">
      <summary>Given a child list, locate its parent item in the preview list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pIVsSimplePreviewChangesListChild">[in] An <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSimplePreviewChangesList" /> object that contains the child list.</param>
      <param name="piIndex">[out] Returns the index of the item that is the parent of the child list.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimplePreviewChangesList.OnClose(Microsoft.VisualStudio.Shell.Interop.VSTREECLOSEACTIONS[])">
      <summary>Called when this preview list is closed (unexpanded).</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ptca">[out] Returns a value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSTREECLOSEACTIONS" /> enumeration describing what to do with the children of this item.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimplePreviewChangesList.OnRequestSource(System.UInt32,System.Object)">
      <summary>Loads the source for the specified preview item and displays it in the given text view.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] The index of the item to display.</param>
      <param name="pIUnknownTextView">[in] An IUnknown object that represents the text view. This is typically an <see cref="T:Microsoft.VisualStudio.TextManager.Interop.IVsTextView" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSimplePreviewChangesList.ToggleState(System.UInt32,System.UInt32@)">
      <summary>Toggles the checked state of the specified item in the preview list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="index">[in] The index of the item for which to change the checked state.</param>
      <param name="ptscr">[out] Returns a value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSTREESTATECHANGEREFRESH" /> enumeration indicating whether any children of this item also need to be refreshed in the display.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSingleFileGeneratorFactory">
      <summary>Manipulates the generator prog ID for a single type of file.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSingleFileGeneratorFactory.CreateGeneratorInstance(System.String,System.Int32@,System.Int32@,System.Int32@,Microsoft.VisualStudio.Shell.Interop.IVsSingleFileGenerator@)">
      <summary>Creates a generator instance.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="wszProgId">[in] The prog ID of the generator factory.</param>
      <param name="pbGeneratesDesignTimeSource">[out] Boolean value; true if the factory generates source at design time.</param>
      <param name="pbGeneratesSharedDesignTimeSource">[out] Boolean value; true if the factory generates shared source at design time.</param>
      <param name="pbUseTempPEFlag">[out] Boolean value; true if the factory uses temporary PE flags.</param>
      <param name="ppGenerate">[out] The GUID of the factory.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSingleFileGeneratorFactory.GetDefaultGenerator(System.String,System.String@)">
      <summary>Gets the default generator prog ID for a specified file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="wszFilename">[in] The file for which to get the generator prog ID.</param>
      <param name="pbstrGenProgID">[out] The default generator prog ID.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSingleFileGeneratorFactory.GetGeneratorInformation(System.String,System.Int32@,System.Int32@,System.Int32@,System.Guid@)">
      <summary>Gets information about a generator factory.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="wszProgId">[in] The prog ID of the generator factory.</param>
      <param name="pbGeneratesDesignTimeSource">[out] Boolean value; true if the factory generates source at design time.</param>
      <param name="pbGeneratesSharedDesignTimeSource">[out] Boolean value; true if the factory generates shared source at design time.</param>
      <param name="pbUseTempPEFlag">[out] Boolean value; true if the factory uses temporary PE flags.</param>
      <param name="pguidGenerator">[out] The GUID of the factory.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSmartOpenScope">
      <summary>Opens an existing assembly and maps the assembly's metadata to memory. The interface provides smart opening, automatically choosing between opening the scope with or without locking. You can get an instance of this interface using the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsSmartOpenScope" /> (SID_SVsSmartOpenScope) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSmartOpenScope.OpenScope(System.String,System.UInt32,System.Guid@,System.Object@)">
      <summary>Open a scope and return a requested interface on it.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="wszScope">[in] String containing the name of the file.</param>
      <param name="dwOpenFlags">[in] Bit flags indicating how to open the file. Constructed using values from the CorOpenFlags Enumeration.</param>
      <param name="riid">[in] Pointer to the GUID of the desired return interface.</param>
      <param name="ppIUnk">[out] Pointer to the requested interface on the scope.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSolution3">
      <summary>Creates, updates, and saves project files.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolution3.CheckForAndSaveDeferredSaveSolution(System.Int32,System.String,System.String,System.UInt32)">
      <summary>Checks if the solution is in the deferred-save state.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="fCloseSolution">[in] Boolean value; specifies whether to close the solution after it is saved.</param>
      <param name="pszMessage">[in] A string specifying the text displayed when the user is prompted to save or discard changes.</param>
      <param name="pszTitle">[in] A string specifying the title of the dialog box prompting the user to save or discard changes.</param>
      <param name="grfFlags">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSSAVEDEFERREDSAVEFLAGS" /> value specifying save options.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolution3.CreateNewProjectViaDlgEx(System.String,System.String,System.String,System.String,System.String,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsBrowseProjectLocation)">
      <summary>Opens the New Project dialog and expands specified nodes.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszDlgTitle">[in] Title of the dialog box.</param>
      <param name="pszTemplateDir">[in] Location of the template folder.</param>
      <param name="pszExpand">[in] The node to expand.</param>
      <param name="pszSelect">[in] The node to select.</param>
      <param name="pszHelpTopic">[in] Help topic ID.</param>
      <param name="cnpvdeFlags">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSCREATENEWPROJVIADLGEXFLAGS" /> value specifying project creation options.</param>
      <param name="pBrowse">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsBrowseProjectLocation" /> specifying a project browser location. </param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolution3.GetUniqueUINameOfProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.String@)">
      <summary>Generates a unique name for a project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
      <param name="pHierarchy">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> for the project hierarchy.</param>
      <param name="pbstrUniqueName">[out] The unique UI name for the project.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolution3.UpdateProjectFileLocationForUpgrade(System.String,System.String)">
      <summary>Notifies a solution to update project file locations.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
      <param name="pszCurrentLocation">[in] The current project file location.</param>
      <param name="pszUpgradedLocation">[in] The updated project file location.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSolutionBuildManager3">
      <summary>Provides access to <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUpdateSolutionEvents3" /> events.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionBuildManager3.AdviseUpdateSolutionEvents3(Microsoft.VisualStudio.Shell.Interop.IVsUpdateSolutionEvents3,System.UInt32@)">
      <summary>Establishes client notification of solution events.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pIVsUpdateSolutionEvents3">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents3" /> interface on the object requesting notification of solution events.</param>
      <param name="pdwCookie">[out] Pointer to a double word containing the cookie.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionBuildManager3.AreProjectsUpToDate(System.UInt32)">
      <summary>Determines if projects are up to date.</summary>
      <returns>If projects are up to date, returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If one or more projects are not, returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_FALSE" />.</returns>
      <param name="dwOptions">Options governing the up-to-date check. This parameter can contain values from <see cref="T:Microsoft.VisualStudio.Shell.Interop.VsUpToDateCheckFlags" /> and <see cref="T:Microsoft.VisualStudio.Shell.Interop.VsUpToDateCheckFlags2" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionBuildManager3.HasHierarchyChangedSinceLastDTEE">
      <summary>Determines whether the hierarchy has changed since last design time expression evaluation.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionBuildManager3.QueryBuildManagerBusyEx(System.UInt32@)">
      <summary>Determines if the build manager is busy.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pdwBuildManagerOperation">[out] Pointer to a flag indicating that the build manager is busy.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionBuildManager3.UnadviseUpdateSolutionEvents3(System.UInt32)">
      <summary>Removes the caller from the list of listeners for <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUpdateSolutionEvents3" /> events.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwCookie">[in] Double word containing the cookie received from a previous call to AdviseUpdateSolutionEvents.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents4">
      <summary>Listening interface that monitors any notifications of changes to the solution.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents4.OnAfterAsynchOpenProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.Int32)">
      <summary>Notifies listening clients that a project has been opened asynchronously.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the project being loaded.</param>
      <param name="fAdded">[in] true if the project is added to the solution after the solution is opened. false if the project is added to the solution while the solution is being opened.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents4.OnAfterChangeProjectParent(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)">
      <summary>Notifies listening clients that a project parent has changed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the changed project parent.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents4.OnAfterRenameProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy)">
      <summary>Notifies listening clients that a project has been renamed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the renamed project.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEvents4.OnQueryChangeProjectParent(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.Int32@)">
      <summary>Queries listening clients as to whether a parent project has changed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the project parent.</param>
      <param name="pNewParentHier">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the changed project parent.</param>
      <param name="pfCancel">[in, out] true if the client vetoed the closing of the project. false if the client approved the closing of the project.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEventsProjectUpgrade">
      <summary>Provides a method called after the upgrade of a project.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionEventsProjectUpgrade.OnAfterUpgradeProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,System.String,Microsoft.VisualStudio.Shell.Interop.SYSTEMTIME,Microsoft.VisualStudio.Shell.Interop.IVsUpgradeLogger)">
      <summary>Defines a method to call after a project upgrade.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHierarchy">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the project.</param>
      <param name="fUpgradeFlag">[in] Integer. Flag indicating the nature of the upgrade. Values taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSPPROJECTUPGRADEVIAFACTORYFLAGS" /> enumeration. Will only be PUVFF_COPYUPGRADE, PUVFF_SXSBACKUP, or PUVFF_COPYBACKUP.</param>
      <param name="bstrCopyLocation">[in] String containing the location of the copy upgrade (PUVFF_COPYUPGRADE) or back up copy (PUVFF_COPYBACKUP).</param>
      <param name="stUpgradeTime">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.SYSTEMTIME" /> value. The time the upgrade was done.</param>
      <param name="pLogger">[in] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUpgradeLogger" /> interface to use for logging upgrade messages.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSpecifyProjectDesignerPages">
      <summary>Supports editing project properties with an editor (project designer) rather than through the Project Properties dialog. Implemented on the browse object of the project instead of <see cref="T:Microsoft.VisualStudio.OLE.Interop.ISpecifyPropertyPages" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSpecifyProjectDesignerPages.GetProjectDesignerPages(Microsoft.VisualStudio.OLE.Interop.CAUUID[])">
      <summary>Gets the pages of the project designer.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pPages">[out] Pointer to a counted array of GUID types (<see cref="T:Microsoft.VisualStudio.OLE.Interop.CAUUID" />) specifying the designer pages.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSQLCLRReferences">
      <summary>Manages references to SQL procedures compiled into assemblies. Handles the AddNewReference dialog as well as coordinating the local cache and SQL Server. You can get an instance of the interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsSQLCLRReferences" /> (SID_SVsSQLCLRReferences) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSQLCLRReferences.InvokeNewReferencesDlg(System.Object,System.Object,System.UInt32,System.String,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsComponentUser)">
      <summary>Invokes the Add New Reference dialog.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pConnection">[in] Pointer to the IUnknown interface of the connection object.</param>
      <param name="pAssemblySupport">[in] Pointer to the IUnknown interface of the assembly supporting the dialog.</param>
      <param name="dwAddNewReferenceFlags">[in] Integer. Flags specifying add options. Values taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._SqlAddNewReferenceFlags" /> enumeration.</param>
      <param name="szLocalCache">[in] String containing the path to a file to use for a cache.</param>
      <param name="dwProjectPermisionLevel">[in] Integer containing a value from the __SQL_ASSEMBLY_PERMISSION_SET enumeration. Indicates the permission level on the assembly: SQLAP_SAFE (1), SQLAP_EXTERNAL (2), or SQLAP_UNRESTRICTED (3).</param>
      <param name="pComponentUserCallback">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsComponentUser" /> to use for callbacks.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSQLCLRReferences.UpdateReferences(System.Object,System.Object,System.UInt32,System.UInt32,System.String[],System.String,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsSQLCLRReferencesUpdateCallback)">
      <summary>Use to synchronizes the local cache and the server.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pConnection">[in] Pointer to the IUnknown interface of the connection object.</param>
      <param name="pAssemblySupport">[in] Pointer to the IUnknown interface of the assembly.</param>
      <param name="dwReferenceUpdateFlags">[in] Integer. Flags specifying update options. Taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._SqlReferenceUpdateFlags" /> enumeration.</param>
      <param name="cAssemblyCount">[in] Integer. The number of assembly names in <paramref name="rgszAssemblies" />.</param>
      <param name="rgszAssemblies">[in] Array of strings containing the names of the assemblies to update.</param>
      <param name="szLocalCache">[in] String containing the path to a file to use for a cache.</param>
      <param name="dwProjectPermisionLevel">[in] Integer containing a value from the __SQL_ASSEMBLY_PERMISSION_SET enumeration. Indicates the permission level on the assembly: SQLAP_SAFE (1), SQLAP_EXTERNAL (2), or SQLAP_UNRESTRICTED (3).</param>
      <param name="pCallBack">[in] Pointer to a <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSQLCLRReferencesUpdateCallback" /> interface to use for callbacks.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSQLCLRReferencesUpdateCallback">
      <summary>Defines the callback function for reporting changes in SQL procedures compiled into assemblies.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSQLCLRReferencesUpdateCallback.UpdateResult(System.String,System.UInt32,System.Int32,Microsoft.VisualStudio.Shell.Interop.IErrorInfo,System.UInt32)">
      <summary>Reports the result of updating an assembly.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="szAssembly">[in] String containing the name of the assembly updated.</param>
      <param name="dwPermisionLevel">[in] Integer containing a value from the __SQL_ASSEMBLY_PERMISSION_SET enumeration. Indicates the permission level on the assembly: SQLAP_SAFE (1), SQLAP_EXTERNAL (2), or SQLAP_UNRESTRICTED (3).</param>
      <param name="hrUpdateResult">[in] The HRESULT returned by the update operation.</param>
      <param name="pErrorInfo">[in] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IErrorInfo" /> interface reporting any error information.</param>
      <param name="updateAction">[in] Integer—the action taken. A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._SqlReferenceUpdateAction" /> enumeration.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsStartPageDownload">
      <summary>Implemented by the Start Page Download service. Allows the Start Page client to kick a downloading service for the Start Page on a background thread. This should only be used internally by the Start Page implementation.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsStartPageDownload.StartDownloadService">
      <summary>Starts the download service.</summary>
      <returns>The HRESULT.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsStartPageDownload.StopDownloadService">
      <summary>Stops the download service.</summary>
      <returns>The HRESULT.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsStrongNameKeys">
      <summary>Provides common strong name key utility methods. You can get an instance of this interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsStrongNameKeys" /> (SID_SVsStrongNameKeys) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsStrongNameKeys.ChangePassword(System.String,System.String,System.String)">
      <summary>Changes the password of an existing file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="szPfxFile">[in] The name of the file whose password is to be changed.</param>
      <param name="szOldPassword">[in] The old password.</param>
      <param name="szNewPassword">[in] The new password.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsStrongNameKeys.CreateNewKey(System.String,System.String@)">
      <summary>Creates a new key to be used for signing, exporting to a file, and creating a new key container.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="szFileLocation">[in] The location to save the key file.</param>
      <param name="pbstrFilename">[in] The name of the file in which to store the key.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsStrongNameKeys.CreateNewKeyNoUI(System.String,System.String)">
      <summary>Creates a new key to be used for signing, exporting to a file, and creating a new key container, without using the UI.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="szFile">[in] The file in which to store the encryption key.</param>
      <param name="szPassword">[in] The password for the key being generated.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsStrongNameKeys.CreateNewKeyWithName(System.String,System.String,System.String)">
      <summary>Create a new key to be used for signing, exporting to a file, and creating a new key container, for the specified name.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="szFile">[in] The file in which to store the encryption key.</param>
      <param name="szPassword">[in] The password for the key being generated.</param>
      <param name="szSubjectName">[in] The name that goes after “CN=” in the certificate name.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsStrongNameKeys.EnumContainers(System.String,Microsoft.VisualStudio.Shell.Interop.IVsEnumCryptoProviderContainers@)">
      <summary>Enumerates the key containers in the specified cryptography provider.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="szProvider">[in] The cryptography provider.</param>
      <param name="ppEnumContainers">[out] The enumerator for all of the key containers in a cryptography provider.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsStrongNameKeys.EnumProviders(Microsoft.VisualStudio.Shell.Interop.IVsEnumCryptoProviders@)">
      <summary>Enumerates the cryptography providers.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppEnumProviders">[out] The enumerator for the cryptography providers.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsStrongNameKeys.ImportKeyFromPFX(System.String,System.String@)">
      <summary>Imports a PFX-encrypted file to a key container.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="szFile">[in] The PFX-encrypted file to import.</param>
      <param name="pbstrContainerName">[out] The key container in which the PFX-encrypted file was imported.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSupportCodeDefView">
      <summary>Indicates that the implementing doc data object supports the CodeDefinitionView window.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsSupportItemHandoff2">
      <summary>Gives the receiver project a chance to do any necessary processing of the document to be handed off. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsSupportItemHandoff2.OnBeforeHandoffItem(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsProject3)">
      <summary>Allows preprocessing of a document to be handed off (primarily saving an untitled document to the directory of the destination project).</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="itemid">[in] The item identifier in the project where the document will be removed.</param>
      <param name="pProjDest">[in] The project to which the document will be transferred.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsTaskItem3">
      <summary>Adds content to the TaskList window.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskItem3.GetColumnValue(System.Int32,System.UInt32@,System.UInt32@,System.Object@,System.String@)">
      <summary>Returns the value of this task for a given column.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="iField">[in] An integer containing the Field Column to be used.</param>
      <param name="ptvtType">[out] A pointer to an object of type <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSTASKVALUETYPE" />.</param>
      <param name="ptvfFlags">[out] A pointer to an object of type <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSTASKVALUEFLAGS" />.</param>
      <param name="pvarValue">[out] A pointer to an object of type VARIANT.</param>
      <param name="pbstrAccessibilityName">[out] A pointer to a string containing the Accessibility Name.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskItem3.GetDefaultEditField(System.Int32@)">
      <summary>If the user starts editing the task in a way that does not select a specific field, this method specifies the field in which editing will begin.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="piField">[out] A pointer to an integer containing the field number from which editing will begin.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskItem3.GetEnumCount(System.Int32,System.Int32@)">
      <summary>Given a column field, returns the number of possible values this task may have for that column.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="iField">[in] An integer value.</param>
      <param name="pnValues">[out] A pointer to an integer value.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskItem3.GetEnumValue(System.Int32,System.Int32,System.Object@,System.String@)">
      <summary>Given a column field and value index, returns the indexed value for this task and column.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="iField">[in] An integer value containing the column field.</param>
      <param name="iValue">[in] An integer value index.</param>
      <param name="pvarValue">[out] A pointer to a value of type VARIANT.</param>
      <param name="pbstrAccessibilityName">[out] A pointer to a string containing the Accessibility Name.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskItem3.GetNavigationStatusText(System.String@)">
      <summary>This method returns the text that will be placed on the status bar when the task is successfully navigated to.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrText">[out] A pointer to the string containing the text.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskItem3.GetSurrogateProviderGuid(System.Guid@)">
      <summary>If the task implements this method, it will be listed under the surrogate provider in the list, as if it belongs to the surrogate provider.  This overrides the surrogate provider specified by IVsTaskProvider.GetSurrogateProviderGuid, if any.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pguidProvider">[out] A pointer to a Provider Identifier of type GUID.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskItem3.GetTaskName(System.String@)">
      <summary>Returns a string naming or describing the task.  Used for accessibility.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrName">[out] A pointer to a string naming or describing the task.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskItem3.GetTaskProvider(Microsoft.VisualStudio.Shell.Interop.IVsTaskProvider3@)">
      <summary>Gets the provider that owns this item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppProvider">[out] A pointer to a pointer to an object of type IVsTaskProvider3.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskItem3.GetTipText(System.Int32,System.String@)">
      <summary>Returns the tip text for the given field.  If this method fails or returns an empty string, the task list will use the text of the item itself (if any) or the accessibility name as the tip text.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="iField">[in] An integer value representing the field column to use for the Tip Text.</param>
      <param name="pbstrTipText">[out] A pointer to a string containing the Tip Text.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskItem3.IsDirty(System.Int32@)">
      <summary>Determines if a task list item has changed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfDirty">[out] Returns true if the task list item has changed, otherwise false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskItem3.OnLinkClicked(System.Int32,System.Int32)">
      <summary>If the user clicks on an underlined link in a value of type TVT_LINKTEXT, this method is called with the column field and the link index (the first link in a given value is link 0). The task item should take whatever action is appropriate.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="iField">[in] An integer value representing the Field Column to use.</param>
      <param name="iLinkIndex">[in] An integer value containing the Link Index.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskItem3.SetColumnValue(System.Int32,System.Object@)">
      <summary>When the user edits a task, this method is called for each edited column once the edit is committed.  </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="iField">[in] An integer containing the Field Column to be used.</param>
      <param name="pvarValue">[in] A pointer to an object of type VARIANT.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsTaskList2">
      <summary>Manipulates items in the TaskList window. Implemented by the environment, although you can write your own implementation to provide custom task items.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskList2.BeginTaskEdit(Microsoft.VisualStudio.Shell.Interop.IVsTaskItem,System.Int32)">
      <summary>Scrolls if necessary to make the task visible, selects it, and enters edit mode with the focus on the specified field. If the task does not belong to the active provider or the specified field is not a visible, editable field, the method will fail.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pItem">[In] A pointer to an object of type <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsTaskItem" />.</param>
      <param name="iFocusField">[In] An integer value containing the specified Field Index.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskList2.EnumSelectedItems(Microsoft.VisualStudio.Shell.Interop.IVsEnumTaskItems@)">
      <summary>Returns an enumerator that will enumerate all the selected items, in order from last selected to first selected.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppEnum">[Out] A pointer to a pointer to an object of type <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsEnumTaskItems" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskList2.GetActiveProvider(Microsoft.VisualStudio.Shell.Interop.IVsTaskProvider@)">
      <summary>Starting in Visual Studio 2015, returns <see cref="F:Microsoft.VisualStudio.VSConstants.E_NOTIMPL" />.</summary>
      <returns>Starting in Visual Studio 2015, returns <see cref="F:Microsoft.VisualStudio.VSConstants.E_NOTIMPL" />.</returns>
      <param name="ppProvider">[Out] A pointer to a pointer to an object of type <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsTaskProvider" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskList2.GetCaretPos(Microsoft.VisualStudio.Shell.Interop.IVsTaskItem@)">
      <summary>Returns the item that currently has the caret.  This item is always among the selected items.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppItem">[out] A pointer to a pointer to an object of type <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsEnumTaskItems" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskList2.GetSelectionCount(System.Int32@)">
      <summary>Returns the count of selected items, which may be anywhere from zero to the total count of items in the task list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pnItems">[out] A pointer to an integer value containing the Count.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskList2.RefreshAllProviders">
      <summary>Refreshes all tasks from all registered providers.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskList2.RefreshOrAddTasks(System.UInt32,System.Int32,Microsoft.VisualStudio.Shell.Interop.IVsTaskItem[])">
      <summary>Refreshes all cached information for the given tasks.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="vsProviderCookie">[in] The task provider ID given by the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskList.RegisterTaskProvider(Microsoft.VisualStudio.Shell.Interop.IVsTaskProvider,System.UInt32@)" /> method.</param>
      <param name="nTasks">[in] The number of tasks to refresh.</param>
      <param name="prgTasks">[in] An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsTaskList" /> items to refresh.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskList2.RemoveTasks(System.UInt32,System.Int32,Microsoft.VisualStudio.Shell.Interop.IVsTaskItem[])">
      <summary>Removes tasks from the tasklist.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="vsProviderCookie">[in] The task provider ID given by the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskList.RegisterTaskProvider(Microsoft.VisualStudio.Shell.Interop.IVsTaskProvider,System.UInt32@)" /> method.</param>
      <param name="nTasks">[in] The number of tasks to remove</param>
      <param name="prgTasks">[in] An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsTaskList" /> items to remove.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskList2.SelectItems(System.Int32,Microsoft.VisualStudio.Shell.Interop.IVsTaskItem[],System.UInt32,System.UInt32)">
      <summary>Selects zero or more items.  Pass in zero for nItems to remove the selection entirely. All non-filtered items in pItems will be selected and the last one will become the caret item.  Filtered items are ignored.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="nItems">[in] Integer value containing Zero or the number of items selected. Set to zero to remove the selection entirely.</param>
      <param name="pItems">[in] An array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsTaskList" /> objects.</param>
      <param name="tsfSelType">[in] An object of <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSTASKLISTSELECTIONTYPE" /> type.</param>
      <param name="tsspScrollPos">[in] An object of <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSTASKLISTSELECTIONSCROLLPOS" /> type.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskList2.SetActiveProvider(System.Guid@)">
      <summary>Selects the provider currently displayed in the tasklist.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="rguidProvider">[in] A Provider Identifier; an object of type REFGUID.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsTaskProvider3">
      <summary>Supports adding content to the Task View window. Defines the provider of information along with manipulating the window columns.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskProvider3.GetColumn(System.Int32,Microsoft.VisualStudio.Shell.Interop.VSTASKCOLUMN[])">
      <summary>Gets the definition of an indexed column (0 &lt;= iColumn &lt; nColumns)</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="iColumn">[in] A value of type integer containing the Column Index.</param>
      <param name="pColumn">[out] A pointer to an array of objects of type VSTASKCOLUMN.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskProvider3.GetColumnCount(System.Int32@)">
      <summary>Returns the total number of columns supported by this provider, including columns that are not visible by default.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pnColumns">[out] A pointer to an integer type containing the number of columns supported by the provider.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskProvider3.GetProviderFlags(System.UInt32@)">
      <summary>Returns the behavior flags for this provider.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="tpfFlags">[out] A pointer to an object of type VSTASKPROVIDERFLAGS.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskProvider3.GetProviderGuid(System.Guid@)">
      <summary>Returns a unique Identifier for this provider.  This is used to persist &amp; restore per-provider data managed by the task list, such as user customizations of column width &amp; order.  If it is not practical to assign a GUID to this provider (e.g. the provider is dynamically created at run-time and the identity cannot be preserved across VS sessions), you may return GUID_NULL.  However, you should be aware that certain functionality (such as UI settings persistence and the IVsTaskList2.SetActiveProvider method) will not work in that case.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pguidProvider">[out] A pointer to a Provider Identifier (an object of type GUID).</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskProvider3.GetProviderName(System.String@)">
      <summary>Returns a localized human-readable name for this data provider.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrName">[out] A pointer to a string containing the data provider human-readable name.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskProvider3.GetProviderToolbar(System.Guid@,System.UInt32@)">
      <summary>Returns a group GUID and toolbar ID indicating which toolbar should be displayed when this provider is active. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pguidGroup">[out] A pointer to a Group Identifier (an object of type GUID).</param>
      <param name="pdwID">[out] A pointer to an identifier (a value of unsigned integer type).</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskProvider3.GetSurrogateProviderGuid(System.Guid@)">
      <summary>If a provider implements this method, all its tasks will be listed under the surrogate provider in the list, as if they belong to the surrogate provider.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pguidProvider">[out] A pointer to a Provider Identifier (an object of type GUID).</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskProvider3.OnBeginTaskEdit(Microsoft.VisualStudio.Shell.Interop.IVsTaskItem)">
      <summary>Called when the user begins editing a task in-place.  Providers may want to avoid scrolling the tasklist or changing the selection during editing, since these actions can force in-place edit mode to be canceled abruptly.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pItem">[in] A pointer to an object of type IVsTaskItem.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTaskProvider3.OnEndTaskEdit(Microsoft.VisualStudio.Shell.Interop.IVsTaskItem,System.Int32,System.Int32@)">
      <summary>Called when the user finishes editing a task in-place.  fCommitChanges indicates whether the user chose to commit the changes or discard them.  This method may set *pfAllowChanges to FALSE to disallow the user from exiting edit mode.  If fCommitChanges is TRUE, the changes will have already been persisted down to the task item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pItem">[in] A pointer to an object of type IVsTaskItem.</param>
      <param name="fCommitChanges">[in] A Boolean value set to TRUE if the user chooses to commit the changes.</param>
      <param name="pfAllowChanges">[out] A Boolean value set to FALSE to disallow the user from exiting edit mode, or to TRUE if the changes were already persisted down to the task item.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsThreadedWaitDialog">
      <summary>Shows a dialog used while waiting for an action to end. The dialog is displayed on a separate, background thread to allow the environment to appear responsive even when busy. You can get an instance of this interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsThreadedWaitDialog" /> (SID_SVsThreadedWaitDialog) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsThreadedWaitDialog.EndWaitDialog(System.Int32@)">
      <summary>Ends the Wait dialog.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfCancelled">Indicates whether the operation was cancelled.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsThreadedWaitDialog.GiveTimeSlice(System.String,System.String,System.Int32,System.Int32@)">
      <summary>Allows updating the text in the dialog, and checks if the user has cancelled the wait.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrUpdatedWaitMessage">[in] The updated wait message. Can be null.</param>
      <param name="bstrIfTruncateAppend">[in] Can be null, should be a short string e.g. L"..." or L"...\""</param>
      <param name="fDisableCancel">[in] Disable the button if the operation can no longer be cancelled. </param>
      <param name="pfCancelled">[out] Returns true if the operation was cancelled.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsThreadedWaitDialog.StartWaitDialog(System.String,System.String,System.String,System.UInt32,System.Object,System.String)">
      <summary>Starts the Wait dialog.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrWaitCaption">[in] Caption text of the wait message box.</param>
      <param name="bstrWaitMessage">[in] Message text of the wait message box.</param>
      <param name="bstrIfTruncateAppend">[in] Can be null.</param>
      <param name="dwFlags">[in] Display the Cancel button</param>
      <param name="varStatusBmpAnim">[in] Optional. Should be a VT_INT_PTR containing a valid BMP, or VT_NULL.</param>
      <param name="bstrStatusBarText">[in] Can be null.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsThreadPool">
      <summary>Manages background operations in the environment.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsThreadPool.ScheduleTask(System.UInt32,System.UInt32,System.UInt32)">
      <summary>Schedules a task to run.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pTaskProc">[in] The environment explicitly casts this pointer to a PVsBackgroundTask_Function_Pointer prior to being called</param>
      <param name="pvParam">[in] The value passed to the task procedure in <paramref name="pTaskProc" /> when the task is started.</param>
      <param name="priority">[in] This parameter should be set to <see cref="F:Microsoft.VisualStudio.Shell.Interop.__VSBACKGROUNDTASKPRIORITY.VSBACKGROUNDTASKPRIORITY_STANDARD" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsThreadPool.ScheduleWaitableTask(System.UInt32,System.UInt32,System.UInt32)">
      <summary>Deprecated. Schedules a task and a handle to wait on before running the task.</summary>
      <returns>Returns E_NOTIMPL.</returns>
      <param name="hWait">[in] HANDLE to wait upon</param>
      <param name="pTaskProc">[in] The environment explicitly casts this pointer to a PVsBackgroundTask_Function_Pointer prior to being called.</param>
      <param name="pvParam">[in] The value passed to the task procedure in <paramref name="pTaskProc" /> when the task is started.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsThreadPool.UnscheduleWaitableTask(System.UInt32)">
      <summary>Deprecated. Removes a handle and task from the list of waitable tasks.</summary>
      <returns>Returns E_NOTIMPL.</returns>
      <param name="hWait">[in] HANDLE to remove.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsToolbox3">
      <summary>Provides persistence and localization support for a Toolbox. Extends, but does not inherit from, <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsToolbox2" />. You can get an instance of the interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SVsToolbox" /> (SID_SVsToolbox) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsToolbox3.GetGeneralTabID(System.String@)">
      <summary>Gets the ID for the General tab.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrTabID">[out] The locale-invariant ID of the Toolbox tab.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsToolbox3.GetIDOfTab(System.String,System.String@)">
      <summary>Retrieves the canonical ID for the given localized name of the Toolbox tab.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="lpszTabName">[in] The localized name of the Toolbox tab.</param>
      <param name="pbstrTabID">[out] The locale-invariant ID of the Toolbox tab.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsToolbox3.GetItemDisplayName(Microsoft.VisualStudio.OLE.Interop.IDataObject,System.String@)">
      <summary>Gets the display name of an item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pDO">An <see cref="T:Microsoft.VisualStudio.OLE.Interop.IDataObject" /> interface to the item.</param>
      <param name="pbstrName">The name of the item.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsToolbox3.GetItemID(Microsoft.VisualStudio.OLE.Interop.IDataObject,System.String@)">
      <summary>Gets the unique ID of a item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pDO">An <see cref="T:Microsoft.VisualStudio.OLE.Interop.IDataObject" /> interface to the item.</param>
      <param name="pbstrID">The ID of the item. If the item is found, but has no ID then this values is null.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsToolbox3.GetLastModifiedTime(Microsoft.VisualStudio.Shell.Interop.SYSTEMTIME[])">
      <summary>Returns the most recent time at which the Toolbox contents were modified.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pst">[out] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.SYSTEMTIME" /> structure containing the most recent time at which the Toolbox contents were modified.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsToolbox3.GetTabOfID(System.String,System.String@)">
      <summary>Retrieves the localized name of a Toolbox tab, given its canonical ID.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="lpszTabID">[in] The locale-invariant ID of the Toolbox tab.</param>
      <param name="pbstrTabName">[out] The localized name of the Toolbox tab.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsToolbox3.SetIDOfTab(System.String,System.String)">
      <summary>Sets the canonical ID for the given Toolbox tab.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="lpszTabName">[in] The localized name of the Toolbox tab.</param>
      <param name="lpszTabID">[in] The locale-invariant ID of the Toolbox tab.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsToolboxActiveUserHook">
      <summary>Provides support for intercepting and modifying Toolbox interactions, including drag and drop.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsToolboxActiveUserHook.InterceptDataObject(Microsoft.VisualStudio.OLE.Interop.IDataObject,Microsoft.VisualStudio.OLE.Interop.IDataObject@)">
      <summary>This method is called by the Toolbox whenever one of its data objects participates in a drag-and-drop operation.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pIn">[in] An <see cref="T:System.Runtime.InteropServices.ComTypes.IDataObject" /> containing the object being dropped on the Toolbox user.</param>
      <param name="ppOut">[out] An <see cref="T:System.Runtime.InteropServices.ComTypes.IDataObject" /> containing a modified object which will be handled by the Toolbox user.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsToolboxActiveUserHook.ToolboxSelectionChanged(Microsoft.VisualStudio.OLE.Interop.IDataObject)">
      <summary>This method is called by the Toolbox whenever there is a change in which Toolbox item has been selected.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pSelected">[in] An <see cref="T:System.Runtime.InteropServices.ComTypes.IDataObject" /> containing the currently selected Toolbox item.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsToolboxDataProvider2">
      <summary>Provides support for additional Toolbox features. In particular, IVsToolboxDataProvider2 is used to implement Toolbox persistence through the vssettings feature. Users will save and retrieve such information through the Import/Export Settings command, found on the IDE's Tools menu.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsToolboxDataProvider2.GetDisplayName(System.String@)">
      <summary>Retrieves the localized name of the data provider.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrName">[out] The localized name of the data provider.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsToolboxDataProvider2.GetItemID(Microsoft.VisualStudio.OLE.Interop.IDataObject,System.String@)">
      <summary>Used by the environment to retrieve and saves the canonical ID for the given Toolbox tab when a user selects the export option from the Import/Export Settings feature available on the IDE’s Tools menu.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pDO">[in] The data object corresponding to the Toolbox item.</param>
      <param name="pbstrID">[out] The locale-invariant canonical ID of the Toolbox tab.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsToolboxDataProvider2.GetItemTipInfo(Microsoft.VisualStudio.OLE.Interop.IDataObject,System.String,Microsoft.VisualStudio.OLE.Interop.IPropertyBag)">
      <summary>Supplies ToolTip data for a Toolbox item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pDO">[in] The data object corresponding to the Toolbox item.</param>
      <param name="lpszCurrentName">[in] The name of the Toolbox item as it is currently displayed on the Toolbox.</param>
      <param name="pStrings">[in] The COM object <see cref="T:Microsoft.VisualStudio.OLE.Interop.IPropertyBag" /> object containing the values that the ToolTip should display.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsToolboxDataProvider2.GetPackageGUID(System.Guid@)">
      <summary>Retrieves the GUID of the VSPackage to which this data provider belongs.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pguidPkg">[out] The GUID of the VSPackage to which this data provider belongs.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsToolboxDataProvider2.GetProfileData(Microsoft.VisualStudio.OLE.Interop.IDataObject,System.String@)">
      <summary>Obtains any extra information, if needed, about a Toolbox item which can be saved through the settings mechanism using the Import/Export Settings feature available on the IDE’ Tools menu.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pDO">[in] The data object corresponding to the Toolbox item.</param>
      <param name="pbstrData">[out] A string containing all the extra information that would be needed to reconstitute the item when imported from Settings.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsToolboxDataProvider2.GetUniqueID(System.Guid@)">
      <summary>Retrieves the unique ID for the given Toolbox tab.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pguidID">[out] The unique ID of the Toolbox tab.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsToolboxDataProvider2.ReconstituteItem(System.String,System.String,System.String,Microsoft.VisualStudio.OLE.Interop.IDataObject@,Microsoft.VisualStudio.Shell.Interop.TBXITEMINFO[])">
      <summary>Recreates a Toolbox item from data stored using the settings mechanism when a user chooses to retrieve settings using the Import/Export Settings feature available on the IDE’s Tools menu.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="lpszCurrentName">[in] The current (localized) name of the Toolbox item.</param>
      <param name="lpszID">[in] The canonical ID of the Toolbox item.</param>
      <param name="lpszData">[in] A string containing any extra information needed to reconstitute the item.</param>
      <param name="ppDO">[out] A data object corresponding to the Toolbox item.</param>
      <param name="ptif">[out] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.TBXITEMINFO" /> structure containing additional information about the Toolbox item.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsToolboxDataProviderRegistry">
      <summary>Registers a Toolbox data provider. </summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsToolboxDataProviderRegistry.RegisterDataProvider(Microsoft.VisualStudio.Shell.Interop.IVsToolboxDataProvider,System.UInt32@)">
      <summary>Registers a Toolbox data provider.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pDP">[in] Pointer to the Toolbox data provider to register.</param>
      <param name="pdwProvider">[out, retval] Cookie identifying the data provider.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsToolboxDataProviderRegistry.UnregisterDataProvider(System.UInt32)">
      <summary>Unregisters the Toolbox data provider.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwProvider">[in] Cookie identifying the Toolbox data provider to unregister. </param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsToolsOptions">
      <summary>Manages a Tools Options dialog box. The environment implements this interface.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsToolsOptions.IsToolsOptionsOpen(System.Int32@)">
      <summary>Determines if the Tools Options dialog box is open.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfOpen">[out] If true, the Tools Options dialog box is currently open.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsToolsOptions.RefreshPageVisibility">
      <summary>Refreshes the visibility of the Tools Options dialog box.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsTrackProjectDocuments3">
      <summary>This interface allows for batch processing, coordination of locks on files, and an advanced <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsTrackProjectDocuments2.OnQueryAddFiles(Microsoft.VisualStudio.Shell.Interop.IVsProject,System.Int32,System.String[],Microsoft.VisualStudio.Shell.Interop.VSQUERYADDFILEFLAGS[],Microsoft.VisualStudio.Shell.Interop.VSQUERYADDFILERESULTS[],Microsoft.VisualStudio.Shell.Interop.VSQUERYADDFILERESULTS[])" /> method.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTrackProjectDocuments3.BeginQueryBatch">
      <summary>Starts a batch query process in which a single dialog box asking the user for an okay is presented instead of multiple dialog boxes, one for each file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTrackProjectDocuments3.CancelQueryBatch">
      <summary>Cancels a batched series of queries. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTrackProjectDocuments3.EndQueryBatch(System.Int32@)">
      <summary>Indicates that a batched query process has been completed and determines whether or not the batched operations should be allowed to proceed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfActionOK">[out] Returns nonzero if it is okay to proceed with the batched operations. Returns 0 if the batched operations should not occur.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTrackProjectDocuments3.HandsOffFiles(System.UInt32,System.Int32,System.String[])">
      <summary>This method is called when a project wants to affect a number of files and wants any locks on those files released.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="grfRequiredAccess">[in] One of the values from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__HANDSOFFMODE" /> enumeration.</param>
      <param name="cFiles">[in] The number of filenames specified in the <paramref name="rgpszMkDocuments" /> array.</param>
      <param name="rgpszMkDocuments">[in] An array of file names that the project wants to affect.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTrackProjectDocuments3.HandsOnFiles(System.Int32,System.String[])">
      <summary>Indicates that a project is done manipulating the specified files.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="cFiles">[in] Number of file names given in the <paramref name="rgpszMkDocuments" /> array.</param>
      <param name="rgpszMkDocuments">[in] An array of file names.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTrackProjectDocuments3.OnQueryAddFilesEx(Microsoft.VisualStudio.Shell.Interop.IVsProject,System.Int32,System.String[],System.String[],Microsoft.VisualStudio.Shell.Interop.VSQUERYADDFILEFLAGS[],Microsoft.VisualStudio.Shell.Interop.VSQUERYADDFILERESULTS[],Microsoft.VisualStudio.Shell.Interop.VSQUERYADDFILERESULTS[])">
      <summary>This method is an extended version of the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsTrackProjectDocuments2.OnQueryAddFiles(Microsoft.VisualStudio.Shell.Interop.IVsProject,System.Int32,System.String[],Microsoft.VisualStudio.Shell.Interop.VSQUERYADDFILEFLAGS[],Microsoft.VisualStudio.Shell.Interop.VSQUERYADDFILERESULTS[],Microsoft.VisualStudio.Shell.Interop.VSQUERYADDFILERESULTS[])" /> method and is used when a project will be moving files to a new location in the project directory.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pProject">[in] Project making the request about adding files.</param>
      <param name="cFiles">[in] The number of files represented in the <paramref name="rgpszNewMkDocuments" />, <paramref name="rgpszSrcMkDocuments" />, <paramref name="rgFlags" />, and <paramref name="rgResults" /> arrays.</param>
      <param name="rgpszNewMkDocuments">[in] An array of file names that indicate the files' final destination.</param>
      <param name="rgpszSrcMkDocuments">[in] An array of file names specifying the source location of the files.</param>
      <param name="rgFlags">[in] An array of values, one element for each file, from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSQUERYADDFILEFLAGS" /> enumeration.</param>
      <param name="pSummaryResult">[out] Returns an overall status for all files as a value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSQUERYADDFILERESULTS" /> enumeration.</param>
      <param name="rgResults">[in, out] An array that is filled in with the status of each file. Each status is a value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSQUERYADDFILERESULTS" /> enumeration.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsTrackProjectDocumentsEvents3">
      <summary>Receives calls made to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsTrackProjectDocuments3" /> interface. It provides support for batch-processing queries and for coordination of file access.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTrackProjectDocumentsEvents3.HandsOffFiles(System.UInt32,System.Int32,System.String[])">
      <summary>Accesses a specified set of files and asks all implementers of this method to release any locks that may exist on those files.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="grfRequiredAccess">[in] A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__HANDSOFFMODE" /> enumeration, indicating the type of access requested. This can be used to optimize the locks that actually need to be released.</param>
      <param name="cFiles">[in] The number of files in the <paramref name="rgpszMkDocuments" /> array.</param>
      <param name="rgpszMkDocuments">[in] If there are any locks on this array of file names, the caller wants them to be released.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTrackProjectDocumentsEvents3.HandsOnFiles(System.Int32,System.String[])">
      <summary>Called when a project has completed operations on a set of files.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="cFiles">[in] Number of file names given in the <paramref name="rgpszMkDocuments" /> array.</param>
      <param name="rgpszMkDocuments">[in] An array of file names.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTrackProjectDocumentsEvents3.OnBeginQueryBatch">
      <summary>Indicates that a project is about start a batch query process.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTrackProjectDocumentsEvents3.OnCancelQueryBatch">
      <summary>This method is called to indicate that a batch query process has been canceled.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTrackProjectDocumentsEvents3.OnEndQueryBatch(System.Int32@)">
      <summary>Determines whether it is okay to proceed with the actual batch operation after successful completion of a batch query process. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfActionOK">[out] Returns nonzero if it is okay to continue with the proposed batch process. Returns zero if the proposed batch process should not proceed.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTrackProjectDocumentsEvents3.OnQueryAddFilesEx(Microsoft.VisualStudio.Shell.Interop.IVsProject,System.Int32,System.String[],System.String[],Microsoft.VisualStudio.Shell.Interop.VSQUERYADDFILEFLAGS[],Microsoft.VisualStudio.Shell.Interop.VSQUERYADDFILERESULTS[],Microsoft.VisualStudio.Shell.Interop.VSQUERYADDFILERESULTS[])">
      <summary>Determines if it is okay to add a collection of files (possibly from source control) whose final destination may be different from a source location.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pProject">[in] Project making the request about adding files.</param>
      <param name="cFiles">[in] The number of files represented in the <paramref name="rgpszNewMkDocuments" />, <paramref name="rgpszSrcMkDocuments" />, <paramref name="rgFlags" />, and <paramref name="rgResults" /> arrays.</param>
      <param name="rgpszNewMkDocuments">[in] An array of file names that indicate the files' final destination.</param>
      <param name="rgpszSrcMkDocuments">[in] An array of file names specifying the source location of the files.</param>
      <param name="rgFlags">[in] An array of values, one element for each file, from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSQUERYADDFILEFLAGS" /> enumeration.</param>
      <param name="pSummaryResult">[out] Returns an overall status for all files as a value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSQUERYADDFILERESULTS" /> enumeration.</param>
      <param name="rgResults">[out] An array that is to be filled in with the status of each file. Each status is a value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSQUERYADDFILERESULTS" /> enumeration.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsTypeLibraryWrapperBatchSupport">
      <summary>Wraps types in batch mode and processes them for a specific application domain.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTypeLibraryWrapperBatchSupport.StartBatch">
      <summary>Creates an application domain to work in and starts the batch processing of types. Unloads the application domain when finished. Creates an exception if the batch processing failed to perform as expected.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsTypeLibraryWrapperBatchSupport.StopBatch">
      <summary>Unloads the application domain after batch processing is complete. Creates an exception if the batch processing failed to perform as expected.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchyWindow2">
      <summary>Implemented by the environment to display the hierarchies that VSPackages write.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchyWindow2.AddUIHierarchy(Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchy,System.UInt32)">
      <summary>Adds an additional root UI hierarchy node to the list managed by the UI hierarchy window.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pUIH">[in] <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchy" /> to add.</param>
      <param name="grfAddOptions">[in] Sets selection behavior in the hierarchy window when a new hierarchy is added. For a list of <paramref name="grfAddOptions" /> values, see <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSADDHIEROPTIONS" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchyWindow2.ExpandItem(Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchy,System.UInt32,Microsoft.VisualStudio.Shell.Interop.EXPANDFLAGS)">
      <summary>Controls the state or appearance of items in the hierarchy.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pUIH">[in] <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchy" /> to modify the appearance.</param>
      <param name="itemid">[in] Identifier of the item in the hierarchy. To change the appearance of the hierarchy itself, set <paramref name="itemid" /> to <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_ROOT" />. For a list of <paramref name="itemid" /> values, see VSITEMID.</param>
      <param name="expf">[in] Specifies the state or appearance of the hierarchy or items within the hierarchy, such as whether the hierarchy or item is expanded, highlighted, or shown in bold font. For a list of <paramref name="expf" /> values, see <see cref="T:Microsoft.VisualStudio.Shell.Interop.EXPANDFLAGS" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchyWindow2.FindCommonSelectedHierarchy(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchy@)">
      <summary>Finds the lowermost hierarchy that is the nearest ancestor to every selected node.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="grfOpt">[in] Controls whether this method returns the Solution as the common hierarchy. For a list of <paramref name="grfOpt" /> values, see <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSCOMHIEROPTIONS" />.</param>
      <param name="lppCommonUIH">[out, retval] Common <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchy" /> interface for the selected hierarchy.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchyWindow2.GetCurrentSelection(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy@,System.UInt32@,Microsoft.VisualStudio.Shell.Interop.IVsMultiItemSelect@)">
      <summary>Gets the alternate itemID of the current selection when an alternate UIHierarchy is used.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppHier">[out] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface of the current project hierarchy.</param>
      <param name="pitemid">[out] Pointer to the identifier for the current project item. If <paramref name="pitemid" /> is set to <see cref="F:Microsoft.VisualStudio.VSConstants.VSITEMID_SELECTION" />, the current selection involves multiple items. These items can be accessed using the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsMultiItemSelect" /> interface pointed to by <paramref name="ppMIS" />.</param>
      <param name="ppMIS">[out] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsMultiItemSelect" /> interface to be used to access a multiple selection.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchyWindow2.GetItemState(Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchy,System.UInt32,System.UInt32,System.UInt32@)">
      <summary>Returns the state or appearance of the hierarchy.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHier">[in] <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface to determine the state or appearance of.</param>
      <param name="itemid">[in] Identifier of the item in the hierarchy. For a list of <paramref name="itemid" /> values, see VSITEMID.</param>
      <param name="dwStateMask">[in] Mask values used to determine which <paramref name="pdwState" /> values are provided. For a list of <paramref name="dwStateMask" /> values, see <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSHIERARCHYITEMSTATE" />.</param>
      <param name="pdwState">[out, retval] Values taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSHIERARCHYITEMSTATE" /> enumeration, which were passed in with <paramref name="expf" /> in <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchyWindow2.ExpandItem(Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchy,System.UInt32,Microsoft.VisualStudio.Shell.Interop.EXPANDFLAGS)" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchyWindow2.Init(Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchy,System.UInt32,System.Object@)">
      <summary>Initializes a custom use of a UI hierarchy window.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pUIH">[in] <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchy" /> to initialize.</param>
      <param name="grfUIHWF">[in] Characteristics of the UI hierarchy window. For a list of values, see the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__UIHWINFLAGS" /> enumeration.</param>
      <param name="ppunkOut">[out] Pointer to the IUnknown interface of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame2" /> object containing the UI hierarchy window.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchyWindow2.RemoveUIHierarchy(Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchy)">
      <summary>Removes a root UI hierarchy node from the UI hierarchy window.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pUIH">[in] <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchy" /> interface representing the UI hierarchy node to remove.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchyWindow2.SetCursor(System.IntPtr,System.IntPtr@)">
      <summary>Sets a new cursor for the UI hierarchy window. </summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="hNewCursor">[in] New cursor to display in the hierarchy window.</param>
      <param name="phOldCursor">[out, retval] Cursor replaced by the new cursor.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchyWindow2.SetItemAttribute(Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchy,System.UInt32,System.UInt32,System.Object)">
      <summary>Sets an item attribute in the specified hierarchy.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pUIH">[in] <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchy" /> interface representing the UI hierarchy node to which the item attribute is to be set.</param>
      <param name="itemid">[in] The item identifier of the item whose attribute is to be set.</param>
      <param name="attribute">[in] <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSHIERITEMATTRIBUTE" /> enumeration containing the attribute to be set.</param>
      <param name="value">[in] The value of the attribute to be set.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIHierarchyWindow2.SetWindowHelpTopic(System.String,System.UInt32)">
      <summary>Sets the Help topic for the hierarchy window.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="lpszHelpFile">[in] Help file name.</param>
      <param name="dwContext">[in] Context for the Help topic.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsUIShell2">
      <summary>Extends the functionality of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUIShell" /> interface by providing access to additional window functionalities.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIShell2.CreateGlyphImageButton(System.IntPtr,System.UInt16,System.Int32,System.Int32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsImageButton@)">
      <summary>Creates a mixed image/text button using the specified glyph as the image.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="hwnd">[in] Handle to the window that is to own the created button. Currently, Visual Studio ignores this value.</param>
      <param name="chGlyph">[in] The character representing the glyph to use.</param>
      <param name="xShift">[in] How far to the right, in logical units, to shift the glyph.</param>
      <param name="yShift">[in] How far down, in logical units, to shift the glyph.</param>
      <param name="bwiPos">[in] A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__BWI_IMAGE_POS" /> enumeration specifying how the glyph should be positioned in relation to any text in the button.</param>
      <param name="ppImageButton">[out] Returns an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsImageButton" /> object representing the new button.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIShell2.CreateGradient(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsGradient@)">
      <summary>Returns an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsGradient" /> object on which to draw a gradient of a specified type.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="GRADIENTTYPE">[in] The type of gradient to be painted, specified by a value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__GRADIENTTYPE" /> enumeration.</param>
      <param name="pGradient">[out] An <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsGradient" /> object whose member functions can draw the specified gradient type.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIShell2.CreateIconImageButton(System.IntPtr,System.IntPtr,System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsImageButton@)">
      <summary>Creates a mixed image/text button using the specified icon as the image.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="hwnd">[in] Handle to the window that is to own the created button. Currently, Visual Studio ignores this value.</param>
      <param name="hicon">[in] Handle to the icon to be used as the image for the new button.</param>
      <param name="bwiPos">[in] A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__BWI_IMAGE_POS" /> enumeration specifying how the icon should be positioned in relation to any text in the button.</param>
      <param name="ppImageButton">[out] Returns an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsImageButton" /> object representing the new button.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIShell2.GetDirectoryViaBrowseDlgEx(Microsoft.VisualStudio.Shell.Interop.VSBROWSEINFOW[],System.String,System.String,System.String,Microsoft.VisualStudio.Shell.Interop.VSNSEBROWSEINFOW[])">
      <summary>Brings up the Browse dialog box to obtain a directory name (possibly in a namespace extension).</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pBrowse">[in, out] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSBROWSEINFOW" /> structure that contains information used to initialize the dialog box. When this method returns, this structure contains information about the directory location selected by the user. These values are defined in <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSBROWSEINFOW" /> structure.</param>
      <param name="pszHelpTopic">[in] A string containing the help topic. This overrides the <paramref name="dwHelpTopic" /> parameter in <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSBROWSEINFOW" /> structure.</param>
      <param name="pszOpenButtonLabel">[in] Caption text for the Open button. </param>
      <param name="pszCeilingDir">[in] Limit browsing to below this location.</param>
      <param name="pNSEBrowseInfo">[in] Optional. Namespace extension information .For a listing of the structure parameters, see the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSNSEBROWSEINFOW" /> structure.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIShell2.GetOpenFileNameViaDlgEx(Microsoft.VisualStudio.Shell.Interop.VSOPENFILENAMEW[],System.String)">
      <summary>Brings up the File Open dialog box to obtain a specified open file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pOpenFileName">[in, out] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOPENFILENAMEW" /> structure that contains information used to initialize the File Open dialog box. When this method returns, this structure contains information about the user's file selection.</param>
      <param name="pszHelpTopic">[in] A string containing the help topic.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIShell2.GetSaveFileNameViaDlgEx(Microsoft.VisualStudio.Shell.Interop.VSSAVEFILENAMEW[],System.String)">
      <summary>Brings up the Save As dialog box to obtain a save file name.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pSaveFileName">[in, out] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSSAVEFILENAMEW" /> structure that contains information used to initialize the Save As dialog box. When this method returns, this structure contains information about the file name selected by the user.</param>
      <param name="pszHelpTopic">[in] A string containing the help topic. This parameter overrides the <paramref name="dwHelpTopic" /> parameter in the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSSAVEFILENAMEW" /> structure.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIShell2.GetVSCursor(System.UInt32,System.IntPtr@)">
      <summary>Returns a handle to a cursor of a specified cursor type.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="cursor">[in] A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSCURSORTYPE" /> enumeration specifying the type of cursor to be returned.</param>
      <param name="phIcon">[out] The 32-bit integer handle (HCURSOR) to the appropriate cursor.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIShell2.GetVSSysColorEx(System.Int32,System.UInt32@)">
      <summary>Returns the RGB settings for the specified system color used by the environment.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
      <param name="dwSysColIndex">[in] A value from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSSYSCOLOREX" /> enumeration specifying the system color to retrieve.</param>
      <param name="pdwRGBval">[out] A 32-bit word containing the RGB value.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIShell2.IsAutoRecoverSavingCheckpoints(System.Int32@)">
      <summary>Indicates whether unsaved documents are currently being auto-saved.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pfARSaving">[out] Returns nonzero (TRUE) if Visual Studio is in the process of auto-saving all open documents that need to be saved; otherwise, returns zero (FALSE).</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIShell2.SaveItemsViaDlg(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSSAVETREEITEM[])">
      <summary>Handles the saving of one or more documents through the Save changes to following items dialog box.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="cItems">[in] Count of items.</param>
      <param name="rgSaveItems">[in] Array of <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSSAVETREEITEM" /> structures representing the items to be saved.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIShell2.VsDialogBoxParam(System.UInt32,System.UInt32,System.UInt32,System.Int32)">
      <summary>Loads and displays the specified dialog template using the specified dialog callback procedure.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="hinst">[in] 32-bit handle to the module that contains the dialog template as a resource. Cannot be a null value.</param>
      <param name="dwId">[in] The resource ID of the dialog template to load.</param>
      <param name="lpDialogFunc">[in] The dialog procedure to use for the dialog box. Cannot be a null value.</param>
      <param name="lp">[in] The LPARAM value to pass with the WM_INITDIALOG message (which is sent to the dialog procedure).</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsUIShellOpenDocument2">
      <summary>Provides the list of default document previewers. Implemented by the Environment. Extends, but does not inherit from <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUIShellOpenDocument" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUIShellOpenDocument2.GetDefaultPreviewers(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSDEFAULTPREVIEWER[],System.UInt32@)">
      <summary>Provides a list of Default Previewers. This is the list of previewers that would be launched if IVsUIShellOpenDocument::OpenStandardPreviewer(NULL) is called.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="rgDefaultPreviewers">[Out] An array of objects of type VSDEFAULTPREVIEWER. </param>
      <param name="pcActual">[Out] A pointer to an unsigned long value. </param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsUpdateSolutionEvents3">
      <summary>Defines events for changes in the solution configuration. Extends, but does not inherit from, <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUpdateSolutionEvents2" /> and <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUpdateSolutionEvents" />. To monitor these events, implement the interface and use it as an argument of the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsSolutionBuildManager3.AdviseUpdateSolutionEvents3(Microsoft.VisualStudio.Shell.Interop.IVsUpdateSolutionEvents3,System.UInt32@)" /> method of <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSolutionBuildManager3" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUpdateSolutionEvents3.OnAfterActiveSolutionCfgChange(Microsoft.VisualStudio.Shell.Interop.IVsCfg,Microsoft.VisualStudio.Shell.Interop.IVsCfg)">
      <summary>Fired after the active solution configuration is changed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pOldActiveSlnCfg">[in] The active solution configuration that is to be changed. This parameter can be null.</param>
      <param name="pNewActiveSlnCfg">[in] The new active solution configuration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUpdateSolutionEvents3.OnBeforeActiveSolutionCfgChange(Microsoft.VisualStudio.Shell.Interop.IVsCfg,Microsoft.VisualStudio.Shell.Interop.IVsCfg)">
      <summary>Fired before the active solution configuration is changed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pOldActiveSlnCfg">[in] The active solution configuration that is to be changed. This parameter can be null.</param>
      <param name="pNewActiveSlnCfg">[in] The new active solution configuration.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsUpgradeLogger">
      <summary>Reports errors and informational messages.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUpgradeLogger.Flush">
      <summary>Clears or empties the upgrade log buffer.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUpgradeLogger.LogMessage(System.UInt32,System.String,System.String,System.String)">
      <summary>Logs a message in the project upgrade log file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ErrorLevel">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSUL_ERRORLEVEL" /> enumeration that indicates the error level.</param>
      <param name="bstrProject">[in] The name of the project being upgraded.</param>
      <param name="bstrSource">[in] The source of the error.</param>
      <param name="bstrDescription">[in ] The message to be entered into the log file.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsUserSettings">
      <summary>Interface implemented by VSPackages needing their state information persisted by the Visual Studio settings mechanism.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUserSettings.ExportSettings(System.String,Microsoft.VisualStudio.Shell.Interop.IVsSettingsWriter)">
      <summary>Saves a VSPackage's configuration using the Visual Studio settings mechanism when the export option of the Import/Export Settings feature available on the IDE’s Tools menu is selected by a user.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszCategoryGUID">[in] GUID identifying the group of settings to be exported. This is the identifying GUID for the Custom Settings Point. For more information on Custom Settings Points, see Registering Settings Persistence Support</param>
      <param name="pSettings">[in] An <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSettingsWriter" /> interface provided by the environment to the VSPackage providing write access to the Visual Studio settings file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUserSettings.ImportSettings(System.String,Microsoft.VisualStudio.Shell.Interop.IVsSettingsReader,System.UInt32,System.Int32@)">
      <summary>Retrieves a VSPackage's configuration using the Visual Studio settings mechanism when a user selects the import option of the Import/Export Settings feature on the IDE’s Tools menu.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszCategoryGUID">[in] GUID identifying the group of settings to be imported. This is the identify GUID of the Custom Settings Point. For more information on Custom Settings Points see Registering Settings Persistence Support.</param>
      <param name="pSettings">[in]An <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSettingsWriter" /> interface provided by the environment to the VSPackage providing read access to the Visual Studio settings file.</param>
      <param name="flags">[in] Flag from the system indicating how an implementation of <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsUserSettings.ImportSettings(System.String,Microsoft.VisualStudio.Shell.Interop.IVsSettingsReader,System.UInt32,System.Int32@)" /> is supposed to process retrieved settings.The supported values of that are members of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__UserSettingsFlags" /> enumeration. </param>
      <param name="pfRestartRequired">[out] Flag returned to the environment indicating if a restart of the IDE is required to complete environment reconfiguration based on retrieved data. If the value returned by <paramref name="pfRestartRequired" /> is true, the environment should be restarted. </param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsUserSettingsQuery">
      <summary>Allows a VSPackage to indicate if its settings need to be saved or not.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsUserSettingsQuery.NeedExport(System.String,System.Int32@)">
      <summary>Indicates whether the specified category requires an export of its settings.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="szCategoryGUID">[in] GUID identifying the particular settings category (defined by a Custom Settings Point) being queried.</param>
      <param name="pfNeedExport">[out] Boolean value returned to indicate if the IDE should call the VSPackage's export settings implementation.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsWebBrowserUser2">
      <summary>Enables a client of <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWebBrowsingService" /> to proffer services to the hosted browser control. Extends, but does not inherit from, <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWebBrowserUser" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWebBrowserUser2.GetWebBrowserContext(Microsoft.VisualStudio.OLE.Interop.IServiceProvider@)">
      <summary>Get an instance of a service provider to offer services to the browser.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code. </returns>
      <param name="ppServiceProvider">[out] Pointer to the <see cref="T:Microsoft.VisualStudio.OLE.Interop.IServiceProvider" /> interface providing access to the service.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsWebProject">
      <summary>Implemented by web project objects that want to use the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsAddNewWebProjectItemDlg" /> interface.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWebProject.AddNewWebItem(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSADDITEMOPERATION,System.String,System.String,System.UInt32,System.String,System.IntPtr,Microsoft.VisualStudio.Shell.Interop.VSADDRESULT[])">
      <summary>Adds a new Web item to the project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="itemidLoc">[in] Folder to which the item is to be added. </param>
      <param name="dwAddItemOperation">[in] Add item operation. Only <see cref="F:Microsoft.VisualStudio.Shell.Interop.VSADDITEMOPERATION.VSADDITEMOP_CLONEFILE" /> and <see cref="F:Microsoft.VisualStudio.Shell.Interop.VSADDITEMOPERATION.VSADDITEMOP_RUNWIZARD" /> are valid</param>
      <param name="pszItemName">[in] Name of the item.</param>
      <param name="pszFileTemplate">[in] Path to the template the user selected.</param>
      <param name="options">[in] The options checked on the dialog for the item.</param>
      <param name="pszSelectedLanguage">[in] String selected from the languages dropdown (can be null).</param>
      <param name="hwndDlgOwner">[in] Handle to the Add New Web Item dialog.</param>
      <param name="pResult">[out] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSADDRESULT" /> enumeration indicating whether the item was successfully added to the project.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsWebService">
      <summary>Represents a single Web service proffered by a project. Managed as part of a collection of Web services held by <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWebServiceProvider" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWebService.AdviseWebServiceEvents(Microsoft.VisualStudio.Shell.Interop.IVsWebServiceEvents,System.UInt32@)">
      <summary>Register callbacks for the Web service.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pEvents">[in] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWebServiceEvents" /> interface implementing the callback functions.</param>
      <param name="pdwCookie">[out] Pointer to an integer, a VSCOOKIE value uniquely identifying the registered interface. Used in the call to <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsWebService.UnadviseWebServiceEvents(System.UInt32)" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWebService.AppRelativeUrl(System.String@)">
      <summary>Gets the application-relative path to the Web service.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrAppUrl">[out] String containing the application-relative path to the Web service.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWebService.GetProvider(Microsoft.VisualStudio.Shell.Interop.IVsWebServiceProvider@)">
      <summary>Gets the provider of a service.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppIVsWebServiceProvider">[out] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWebServiceProvider" /> interface that is the provider of the Web service.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWebService.UnadviseWebServiceEvents(System.UInt32)">
      <summary>Unregisters callbacks for this Web service.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwCookie">[in] Integer, a VSCOOKIE value uniquely identifying the registered interface to unregister. Cookie generated by the call to <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsWebService.AdviseWebServiceEvents(Microsoft.VisualStudio.Shell.Interop.IVsWebServiceEvents,System.UInt32@)" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWebService.Url(System.String@)">
      <summary>Specifies the URL for the service.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="bstrUrl">[out] String containing the URL for the service. This URL may be different from the URL used to discover the service.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsWebServiceEvents">
      <summary>Defines events called when a Web service is removed, renamed, or changed. Used as an argument to the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsWebService.AdviseWebServiceEvents(Microsoft.VisualStudio.Shell.Interop.IVsWebServiceEvents,System.UInt32@)" /> method of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWebService" /> interface.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWebServiceEvents.OnChanged(Microsoft.VisualStudio.Shell.Interop.IVsWebService)">
      <summary>Method called when the Web service changes because of an edit. Your code should refresh references to the Web service after this event.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pIVsWebReference">[in] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWebService" /> interface describing the Web service.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWebServiceEvents.OnRemoved(System.String)">
      <summary>Method called when a Web service is removed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszOldURL">[in] Pointer to a string containing the URL to the now removed Web service.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWebServiceEvents.OnRenamed(System.String,System.String)">
      <summary>Method called when a Web service is renamed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszOldURL">[in] Pointer to a string containing the URL of the old name of the service.</param>
      <param name="pszNewURL">[in] Pointer to a string containing the URL of the new name of the service.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsWebServiceProvider">
      <summary>Maintains a collection of Web services (<see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWebService" />) and calls appropriate methods on events.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWebServiceProvider.AdviseWebServiceProviderEvents(Microsoft.VisualStudio.Shell.Interop.IVsWebServiceProviderEvents,System.UInt32@)">
      <summary>Registers callbacks for Web service provider events.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pEvents">[in] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWebServiceProviderEvents" /> interface implementation containing the callback functions.</param>
      <param name="pdwCookie">[out] Pointer to an integer uniquely identifying the registered interface. A VSCOOKIE value. Used when unregistering the interface by calling <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsWebServiceProvider.UnadviseWebServiceProviderEvents(System.UInt32)" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWebServiceProvider.ApplicationUrl(System.String@)">
      <summary>Retrieves the URL of the Web service.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrUrl">[out] Pointer to a string containing the URL of the Web service.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWebServiceProvider.EnsureServerRunning(System.String@)">
      <summary>Ensures the server is running and retrieves the URL of the server implementing the Web service.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrUrl">[out] Pointer to a string containing the URL of the server.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWebServiceProvider.GetWebService(System.String,Microsoft.VisualStudio.Shell.Interop.IVsWebService@)">
      <summary>Retrieves an interface to a Web service.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszUrl">[in] Pointer to a string containing the URL of the Web service.</param>
      <param name="ppIVsWebService">[out] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWebService" /> interface defining the Web service.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWebServiceProvider.StartServer">
      <summary>Starts the server for the Web service.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWebServiceProvider.UnadviseWebServiceProviderEvents(System.UInt32)">
      <summary>Unregisters callbacks for Web service provider events.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwCookie">[in] Integer. A VSCOOKIE value identifying the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWebServiceProviderEvents" /> interface to unregister. Value comes from the call to <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsWebServiceProvider.AdviseWebServiceProviderEvents(Microsoft.VisualStudio.Shell.Interop.IVsWebServiceProviderEvents,System.UInt32@)" />.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWebServiceProvider.WebServices(Microsoft.VisualStudio.Shell.Interop.IEnumWebServices@)">
      <summary>Provides an enumerator for the services implemented by the Web service provider.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="ppIEnumWebServices">[out] Pointer to an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IEnumWebServices" /> enumerator for the Web services.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsWebServiceProviderEvents">
      <summary>Defines methods called when Web services are added or removed from the Web service provider collection. Used as an argument in the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsWebServiceProvider.AdviseWebServiceProviderEvents(Microsoft.VisualStudio.Shell.Interop.IVsWebServiceProviderEvents,System.UInt32@)" /> method of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWebServiceProvider" /> interface.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWebServiceProviderEvents.OnAdded(Microsoft.VisualStudio.Shell.Interop.IVsWebService)">
      <summary>Method called when a Web service is added.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pIVsWebReference">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWebService" /> interface of the service added.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWebServiceProviderEvents.OnRemoved(System.String)">
      <summary>Method called when a service is removed.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszUrl">[in] Pointer to a string containing the URL of the service removed.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame2">
      <summary>Enables a window frame to send notifications to anyone who wants to be notified of <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrameNotify" /> events.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame2.ActivateOwnerDockedWindow">
      <summary>Gives focus to a child IVsWindowFrame.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame2.Advise(Microsoft.VisualStudio.Shell.Interop.IVsWindowFrameNotify,System.UInt32@)">
      <summary>Enables a client to be notified of window frame events.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pNotify">[in] A <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrameNotify" /> interface to an entity to be called for window frame events.</param>
      <param name="pdwCookie">[out] A cookie associated with the given <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrameNotify" /> interface.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame2.Unadvise(System.UInt32)">
      <summary>Stops a client from being notified of window frame events.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="dwCookie">[in] The unique value that was returned from the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame2.Advise(Microsoft.VisualStudio.Shell.Interop.IVsWindowFrameNotify,System.UInt32@)" /> method.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrameNotify3">
      <summary>Notifies a VSPackage when changes are made to one of its window frames.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrameNotify3.OnClose(System.UInt32@)">
      <summary>Notifies the VSPackage that a window frame is closing and tells the environment what action to take.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pgrfSaveOptions">[in, out] Specifies options for saving window content. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__FRAMECLOSE" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrameNotify3.OnDockableChange(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Notifies the VSPackage that a window's docked state is being altered.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="fDockable">[in] true if the window frame is being docked.</param>
      <param name="x">[in] Horizontal position of undocked window.</param>
      <param name="y">[in] Vertical position of undocked window.</param>
      <param name="w">[in] Width of undocked window.</param>
      <param name="h">[in] Height of undocked window.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrameNotify3.OnMove(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Notifies the VSPackage that a window is being moved.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="x">[in] New horizontal position.</param>
      <param name="y">[in] New vertical position.</param>
      <param name="w">[in] New window width.</param>
      <param name="h">[in] New window height.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrameNotify3.OnShow(System.Int32)">
      <summary>Notifies the VSPackage of a change in the window's display state.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="fShow">[in] Specifies the reason for the display state change. Value taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.__FRAMESHOW" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrameNotify3.OnSize(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Notifies the VSPackage that a window is being resized.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="x">[in] New horizontal position.</param>
      <param name="y">[in] New vertical position.</param>
      <param name="w">[in] New window width.</param>
      <param name="h">[in] New window height.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsWindowPaneCommitFilter">
      <summary>Enables interception of a command that would commit changes before committing the changes.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsWindowPaneCommitFilter.IsCommitCommand(System.Guid@,System.UInt32,System.Int32@)">
      <summary>Indicates whether a command can commit changes.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pguidCmdGroup">[in] The command group that identifies the command.</param>
      <param name="dwCmdID">[in] The command identifier.</param>
      <param name="pfCommitCommand">[out] Indicates whether this is a commit command. If true, it is a commit command.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsXMLMemberData3">
      <summary>Extracts information about a member from an XML representation. Extends, but does not inherit from, <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsXMLMemberData" />. Query an object returning <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsXMLMemberData" /> to see if it supports <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsXMLMemberData3" />.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsXMLMemberData3.GetCompletionListText(System.String@)">
      <summary>Gets the text of a completion list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrCompletionList">[out] The completion list.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsXMLMemberData3.GetCompletionListTextAt(System.Int32,System.String@)">
      <summary>Gets a value from a completion list.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="iParam">[in] The position of the list element.</param>
      <param name="pbstrCompletionList">[out] The value of the list element.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsXMLMemberData3.GetExceptionCount(System.Int32@)">
      <summary>Gets the number of exceptions.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="piExceptions">[out] The number of exceptions.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsXMLMemberData3.GetExceptionTextAt(System.Int32,System.String@,System.String@)">
      <summary>Gets the exception text from the specified location.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="iException">[in] The position of the exception in the collection.</param>
      <param name="pbstrType">[out] The type of the exception.</param>
      <param name="pbstrText">[out] The text of the exception.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsXMLMemberData3.GetFilterPriority(System.Int32@)">
      <summary>Gets the priority of a filter.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="piFilterPriority">[out] The filter priority.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsXMLMemberData3.GetParamCount(System.Int32@)">
      <summary>Gets the number of parameters.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="piParams">[out] The number of parameters.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsXMLMemberData3.GetParamTextAt(System.Int32,System.String@,System.String@)">
      <summary>Gets the text describing a specific parameter.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="iParam">[in] The position of the parameter in the signature.</param>
      <param name="pbstrName">[out] The name of the parameter.</param>
      <param name="pbstrText">[out] The text describing the parameter.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsXMLMemberData3.GetPermissionSet(System.String@)">
      <summary>Gets the permission set.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrPermissionSetXML">[out] The permission set.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsXMLMemberData3.GetRemarksText(System.String@)">
      <summary>Gets remarks for an item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrRemarks">[out] The remarks.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsXMLMemberData3.GetReturnsText(System.String@)">
      <summary>Gets the description of return values for a method.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrReturns">[out] The return value description.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsXMLMemberData3.GetSummaryText(System.String@)">
      <summary>Gets the summary text for an item.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrSummary">[in] The summary text.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsXMLMemberData3.GetTypeParamCount(System.Int32@)">
      <summary>Gets the number of parameters for a type.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="piTypeParams">[out] The number of parameters.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsXMLMemberData3.GetTypeParamTextAt(System.Int32,System.String@,System.String@)">
      <summary>Gets the type of a specific parameter.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="iTypeParam">[in] The position of the parameter in the collection.</param>
      <param name="pbstrName">[out] The name of the parameter.</param>
      <param name="pbstrText">[out] The type name of the parameter.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsXMLMemberData3.SetOptions(System.UInt32)">
      <summary>Sets the specified options for XML member data elements.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="options">[in] An <see cref="T:Microsoft.VisualStudio.Shell.Interop.__XMLMEMBERDATA_OPTIONS" /> enumeration that specifies the options.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsXMLMemberDataCallBack">
      <summary>Provides the display name for a member in XML documentation representing metadata.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsXMLMemberDataCallBack.GetDisplayNameForTag(System.UInt32,System.String,System.String@)">
      <summary>Gets the display name.</summary>
      <param name="nTagType">
        <see cref="T:Microsoft.VisualStudio.Shell.Interop.__XMLMEMBERDATA_TAGTYPE" /> value specifying the tag type</param>
      <param name="wszBufferIn">The tag name</param>
      <param name="pbstrBufferOut">The display name for the tag</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IVsXMLMemberDataRegisterCallBack">
      <summary>Registers an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsXMLMemberDataCallBack" /> interface.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsXMLMemberDataRegisterCallBack.RegisterCallBack(Microsoft.VisualStudio.Shell.Interop.IVsXMLMemberDataCallBack)">
      <summary>Registers the callback for the XML member data.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pIVsXMLMemberDataCallBack">[in] The <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsXMLMemberDataCallBack" /> callback to register.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IVsXMLMemberDataRegisterCallBack.UnregisterCallBack">
      <summary>Unregisters the XML member data callback.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IWebApplicationCtxSvc">
      <summary>Sets up the IntelliSense infrastructure for a file by returning an <see cref="T:Microsoft.VisualStudio.OLE.Interop.IServiceProvider" /> interface you can use with the file. You can get an instance of the interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SWebApplicationCtxSvc" /> (SID_SWebApplicationCtxSvc) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IWebApplicationCtxSvc.GetItemContext(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.UInt32,Microsoft.VisualStudio.OLE.Interop.IServiceProvider@)">
      <summary>Retrieve the <see cref="T:Microsoft.VisualStudio.OLE.Interop.IServiceProvider" /> interface for a file.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pHier">[in] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> interface for the item.</param>
      <param name="itemid">[in] Integer. The identifier (VSITEMID) for the item.</param>
      <param name="ppServiceProvider">[out] Pointer to an <see cref="T:Microsoft.VisualStudio.OLE.Interop.IServiceProvider" /> interface for the item's file.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IWebClassLibProject">
      <summary>Provides methods for web class library projects.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IWebClassLibProject.CloseProject">
      <summary>Closes the project.</summary>
      <returns>The HRESULT.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IWebClassLibProject.UnloadAppDomain(System.Int32)">
      <summary>Unloads the app domain.</summary>
      <returns>The HRESULT.</returns>
      <param name="bWaitForReset">true to wait for reset, otherwise false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IWebClassLibProject.UpdateAnchoredPath(System.String,System.String)">
      <summary>Updates the anchored path.</summary>
      <returns>The HRESULT.</returns>
      <param name="pszNewRootPath">The new path.</param>
      <param name="pszOptionalVDir">The optional directory.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IWebClassLibProjectEvents">
      <summary>Provides web class library events.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IWebClassLibProjectEvents.OnFileAdded(System.String,System.Boolean)">
      <summary>Occurs when a file is added.</summary>
      <returns>The HRESULT.</returns>
      <param name="pszFilePath">The path of the file.</param>
      <param name="foldersMustBeInProject">true if the folders must be included in the project, otherwise false.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IWebClassLibProjectEvents.OnReferenceAdded(System.String)">
      <summary>Occurs when a reference is added to the project.</summary>
      <returns>The HRESULT.</returns>
      <param name="pszReferencePath">The path of the reference.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IWebClassLibProjectEvents.StartWebAdminTool">
      <summary>Starts the web admin tool.</summary>
      <returns>The HRESULT.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IWebClassLibProjectSvc">
      <summary>Provides methods to create web class libraries.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IWebClassLibProjectSvc.CreateClassLibProject(Microsoft.VisualStudio.Shell.Interop.IVsHierarchy,System.String,System.UInt32,System.String,Microsoft.VisualStudio.Shell.Interop.IWebClassLibProject@)">
      <summary>Creates a class library project.</summary>
      <returns>The HRESULT.</returns>
      <param name="pHier">The project hierarachy.</param>
      <param name="pszRootPathOrUrl">The root path of the project.</param>
      <param name="dwFlags">The flags.</param>
      <param name="pszOptionalVDir">The optional directory.</param>
      <param name="ppClassLibProject">The web class library project.</param>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.IWebFileCtxService">
      <summary>Prepares the IntelliSense infrastructure for a given assembly file. You can get an instance of the interface from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.SWebFileCtxService" /> (SID_SWebFileCtxService) service.</summary>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IWebFileCtxService.AddDependentAssemblyFile(System.String)">
      <summary>Add a dependent assembly to the service.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszFilePath">[in] Pointer to a string containing the assembly file name. May be relative to the current directory (.).</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IWebFileCtxService.AddFileToIntellisense(System.String,System.UInt32@)">
      <summary>Add a file to the Intellisense coverage.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszFilePath">[in] Pointer to a string containing the file name. May be relative to the current directory (.).</param>
      <param name="pItemid">[out] Pointer to the item identifier assigned to the file, a VSITEMID.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IWebFileCtxService.CBMCallbackActive">
      <summary>Indicates whether or not a client build manager (CBM) callback is active.</summary>
      <returns>Returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" /> if a CBM callback is active. Otherwise, returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_FALSE" />.</returns>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IWebFileCtxService.ConvertToAppRelPath(System.String,System.String@)">
      <summary>Converts a path to an application-relative path.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszFilePath">[in] Pointer to a string containing the path to convert.</param>
      <param name="pbstrAppRelPath">[out] Pointer to a string containing the calculated application-relative path.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IWebFileCtxService.EnsureFileOpened(System.UInt32,Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame@)">
      <summary>Opens a file by item identifier.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="itemid">[in] Integer. The item identifier (VSITEMID) of the file to open.</param>
      <param name="ppFrame">[out] Pointer to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsWindowFrame" /> interface of the opened file.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IWebFileCtxService.GetIntellisenseProjectName(System.String@)">
      <summary>Retrieves the project name for this Intellisense project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrProjectName">[out] Pointer to a string containing the name of the Intellisense project.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IWebFileCtxService.GetWebRootPath(System.String@)">
      <summary>Retrieves the path to the root of the Web site.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pbstrWebRootPath">[out] Pointer to a string containing the path to the root of the Web site.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IWebFileCtxService.IsDocumentInProject(System.String,System.UInt32@)">
      <summary>Adds a file, if it exists, to the project.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszFilePath">[in] Pointer to a string containing the file name. May be relative to the current directory (.).</param>
      <param name="pItemid">[out] Pointer to the item identifier assigned to the item, a VSITEMID. Set to VSITEMID_NIL if there is an error.</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IWebFileCtxService.RemoveDependentAssemblyFile(System.String)">
      <summary>Removes a dependent assembly from the project. The inverse of the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IWebFileCtxService.AddDependentAssemblyFile(System.String)" /> method.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszFilePath">[in] Pointer to a string containing the file name. May be relative to the current directory (.).</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IWebFileCtxService.RemoveFileFromIntellisense(System.String)">
      <summary>Removes a file from the Intellisense project. The inverse of the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IWebFileCtxService.AddFileToIntellisense(System.String,System.UInt32@)" /> method.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
      <param name="pszFilePath">[in] Pointer to a string containing the file name. May be relative to the current directory (.).</param>
    </member>
    <member name="M:Microsoft.VisualStudio.Shell.Interop.IWebFileCtxService.WaitForIntellisenseReady">
      <summary>Wait until the Intellisense project is ready to use.</summary>
      <returns>If the method succeeds, it returns <see cref="F:Microsoft.VisualStudio.VSConstants.S_OK" />. If it fails, it returns an error code.</returns>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.LogicalViewID">
      <summary>Provides a list of GUIDs that are used to identify views of files or processes.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.LogicalViewID.Any">
      <summary>Specifies any view.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.LogicalViewID.Code">
      <summary>Specifies a view displaying source code.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.LogicalViewID.Debugging">
      <summary>Specifies a view displaying debugging information.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.LogicalViewID.Designer">
      <summary>Specifies a view showing a component designer.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.LogicalViewID.Primary">
      <summary>Specifies the primary view.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.LogicalViewID.ProjectSpecificEditor">
      <summary>Specifies a view showing a project specific editor.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.LogicalViewID.TextView">
      <summary>Specifies a view displaying text.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.LogicalViewID.UserChooseView">
      <summary>Specifies a user-chosen view.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.REFERENCECHANGETYPE">
      <summary>Specifies the type of reference change that occurred in the project.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.REFERENCECHANGETYPE.REFERENCE_Added">
      <summary>The reference was added to the project.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.REFERENCECHANGETYPE.REFERENCE_Changed">
      <summary>The reference was changed in the project.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.REFERENCECHANGETYPE.REFERENCE_Removed">
      <summary>The reference was removed from the project.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SBuilderWizardManager">
      <summary>Passed to <see cref="M:System.IServiceProvider.GetService(System.Type)" /> to return a reference to <see cref="T:Microsoft.VisualStudio.Shell.Interop.IBuilderWizardManager" />.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SccToolsOptionsEnum">
      <summary>Options that can be viewed or updated for source control tools. Used exclusively by the methods on the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSccToolsOptions" /> interface.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.SccToolsOptionsEnum.ksctoAllowReadOnlyFilesNotUnderSccToBeEdited">
      <summary>Nonzero to allow files marked as read-only (but which are not under source control) to be edited.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.SccToolsOptionsEnum.ksctoBad">
      <summary>This value indicates an unrecognized option.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.SccToolsOptionsEnum.ksctoLast">
      <summary>This value is set to the last option in the enumeration. Do not use as an option.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SDirList">
      <summary>This service does not return <see cref="T:Microsoft.VisualStudio.Shell.Interop.IDirList" />. See the documentation for that interface for an explanation of how it can be obtained.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SDTE">
      <summary>Passed to <see cref="M:Microsoft.VisualStudio.Shell.Package.GetGlobalService(System.Type)" /> to return a reference to the Visual Studio integrated development environment (IDE).</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SExtensionManager">
      <summary>Used to query for a reference to the Visual Studio Extension Manager.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.ShellGuids80">
      <summary>Provides a list of GUIDs that are used to identify shell components.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ShellGuids80.SolutionFolderProject">
      <summary>Specifies a project containing a solution folder.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsActivityLog">
      <summary>Passed to <see cref="M:System.IServiceProvider.GetService(System.Type)" /> to return a reference to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsActivityLog" /> interface.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsAssemblyNameUnification">
      <summary>Passed to <see cref="M:System.IServiceProvider.GetService(System.Type)" /> to return a reference to <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsAssemblyNameUnification" />.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsCallBrowser">
      <summary>Passed to <see cref="M:System.IServiceProvider.GetService(System.Type)" /> to return a reference to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsCallBrowser" /> interface.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsCodeDefView">
      <summary>Passed to <see cref="M:System.IServiceProvider.GetService(System.Type)" /> to return a reference to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsCodeDefView" /> interface.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsCommandWindowsCollection">
      <summary>Passed to <see cref="M:System.IServiceProvider.GetService(System.Type)" /> to return a reference to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsCommandWindowsCollection" /> interface.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsComponentSelectorDlg2">
      <summary>Passed to <see cref="M:System.IServiceProvider.GetService(System.Type)" /> to return a reference to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsComponentSelectorDlg2" /> interface.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsConfigurationManagerDlg">
      <summary>Passed to <see cref="M:System.IServiceProvider.GetService(System.Type)" /> to return a reference to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsConfigurationManagerDlg" /> interface.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsCreateAggregateProject">
      <summary>Passed to <see cref="M:System.IServiceProvider.GetService(System.Type)" /> to return a reference to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsCreateAggregateProject" /> interface.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsDetermineWizardTrust">
      <summary>Passed to <see cref="M:System.IServiceProvider.GetService(System.Type)" /> to return a reference to <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsDetermineWizardTrust" />.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsErrorList">
      <summary>Passed to <see cref="M:System.IServiceProvider.GetService(System.Type)" /> to return a reference to <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsErrorList" />.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsFontAndColorCacheManager">
      <summary>Object providing access to the Visual Studio SDK implementation of the Font and Color cache manager service.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsIntegratedHelp">
      <summary>Passed to the <see cref="M:Microsoft.VisualStudio.OLE.Interop.IServiceProvider.QueryService(System.Guid@,System.Guid@,System.IntPtr@)" /> method to return a reference to the <see cref="T:Microsoft.VisualStudio.VSHelp.SVsHelp" /> interface.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsIntellisenseEngine">
      <summary>Passed to <see cref="M:System.IServiceProvider.GetService(System.Type)" /> to return a reference to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseEngine" /> interface.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsIntellisenseProjectHost">
      <summary>Passed to <see cref="M:System.IServiceProvider.GetService(System.Type)" /> to return a reference to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectHost" /> interface.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsIntellisenseProjectManager">
      <summary>Passed to <see cref="M:System.IServiceProvider.GetService(System.Type)" /> to return a reference to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsIntellisenseProjectManager" /> interface.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsMainWindowDropTarget">
      <summary>This service implements the IDropTarget interface. It is the drag/drop handler for the main window of the IDE. This drag/drop handler handles the CF_HDROP format that is used to drag files from the file system (Windows Explorer) and other sources that offer files. All windows that do not otherwise register for drag/drop (::RegisterDragDrop) will inherit this handler for free. Those that register for drag/drop itself will not inherit this file opening.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVSMDCodeDomProvider">
      <summary>Passed to the <see cref="M:Microsoft.VisualStudio.OLE.Interop.IServiceProvider.QueryService(System.Guid@,System.Guid@,System.IntPtr@)" /> method to return a reference to the IVSMDCodeDomProvider interface.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVSMDDesignerService">
      <summary>Passed to the <see cref="M:Microsoft.VisualStudio.OLE.Interop.IServiceProvider.QueryService(System.Guid@,System.Guid@,System.IntPtr@)" /> method to return a reference to the IVSMDCodeDomCreator and IVSMDDesignerService interfaces.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVSMDPropertyBrowser">
      <summary>Passed to the <see cref="M:Microsoft.VisualStudio.OLE.Interop.IServiceProvider.QueryService(System.Guid@,System.Guid@,System.IntPtr@)" /> method to return a reference to the IVSMDPropertyBrowser interface.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVSMDTypeResolutionService">
      <summary>Passed to the <see cref="M:Microsoft.VisualStudio.OLE.Interop.IServiceProvider.QueryService(System.Guid@,System.Guid@,System.IntPtr@)" /> method to return a reference to the IVSMDTypeResolutionService interface.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsOpenProjectOrSolutionDlg">
      <summary>Passed to <see cref="M:System.IServiceProvider.GetService(System.Type)" /> to return a reference to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsOpenProjectOrSolutionDlg" /> interface.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsPathVariableResolver">
      <summary>Passed to <see cref="M:System.IServiceProvider.GetService(System.Type)" /> to return a reference to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsPathVariableResolver" /> interface.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsPreviewChangesService">
      <summary>Passed to <see cref="M:System.IServiceProvider.GetService(System.Type)" /> to return a reference to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsPreviewChangesService" /> interface.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsProfileDataManager">
      <summary>Passed to <see cref="M:System.IServiceProvider.GetService(System.Type)" /> to return a reference to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProfileDataManager" /> interface.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsProfilesManagerUI">
      <summary>Passed to <see cref="M:System.IServiceProvider.GetService(System.Type)" /> to return a reference to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsProfilesManagerUI" /> interface.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsRegisterDebugTargetProvider">
      <summary>Passed to <see cref="M:System.IServiceProvider.GetService(System.Type)" /> to return a reference to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsRegisterProjectDebugTargetProvider" /> interface.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsRegisterNewDialogFilters">
      <summary>Passed to <see cref="M:System.IServiceProvider.GetService(System.Type)" /> to return a reference to <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsRegisterNewDialogFilters" />.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsResourceManager">
      <summary>Passed to <see cref="M:System.IServiceProvider.GetService(System.Type)" /> to return a reference to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsResourceManager" /> interface.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsSccToolsOptions">
      <summary>Passed to <see cref="M:System.IServiceProvider.GetService(System.Type)" /> to return a reference to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSccToolsOptions" /> interface.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsSettingsReader">
      <summary>Passed to <see cref="M:System.IServiceProvider.GetService(System.Type)" /> to return a reference to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSettingsReader" /> interface.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsSmartOpenScope">
      <summary>Passed to the <see cref="M:Microsoft.VisualStudio.OLE.Interop.IServiceProvider.QueryService(System.Guid@,System.Guid@,System.IntPtr@)" /> method to return a reference to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSmartOpenScope" /> interface.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsSourceControl">
      <summary>Used to query for a reference to Visual Studio Source Control.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsSQLCLRReferences">
      <summary>Passed to the <see cref="M:Microsoft.VisualStudio.OLE.Interop.IServiceProvider.QueryService(System.Guid@,System.Guid@,System.IntPtr@)" /> method to return a reference to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSQLCLRReferences" /> interface.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsStartPageDownload">
      <summary>Passed to the <see cref="M:Microsoft.VisualStudio.OLE.Interop.IServiceProvider.QueryService(System.Guid@,System.Guid@,System.IntPtr@)" /> method to return a reference to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsStartPageDownload" /> interface.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsStrongNameKeys">
      <summary>Passed to the <see cref="M:Microsoft.VisualStudio.OLE.Interop.IServiceProvider.QueryService(System.Guid@,System.Guid@,System.IntPtr@)" /> method to return a reference to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsStrongNameKeys" /> interface.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsThreadedWaitDialog">
      <summary>Passed to <see cref="M:System.IServiceProvider.GetService(System.Type)" /> to return a reference to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsThreadedWaitDialog" /> interface.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsThreadPool">
      <summary>Passed to <see cref="M:System.IServiceProvider.GetService(System.Type)" /> to return a reference to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsThreadPool" /> interface.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsToolboxDataProviderRegistry">
      <summary>Passed to <see cref="M:System.IServiceProvider.GetService(System.Type)" /> to return a reference to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsToolboxDataProviderRegistry" /> interface.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsToolsOptions">
      <summary>Passed to <see cref="M:System.IServiceProvider.GetService(System.Type)" /> to return a reference to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsToolsOptions" /> interface.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SVsUpgradeLogger">
      <summary>Passed to <see cref="M:Microsoft.VisualStudio.Shell.ServiceProvider.GetService(System.Guid)" /> to return a reference to the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsUpgradeLogger" /> interface.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SWebApplicationCtxSvc">
      <summary>The service that provides. <see cref="T:Microsoft.VisualStudio.Shell.Interop.IWebApplicationCtxSvc" />.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SWebFileCtxService">
      <summary>Provides <see cref="T:Microsoft.VisualStudio.Shell.Interop.IWebFileCtxService" />.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SYMBOL_DESCRIPTION_NODE">
      <summary>Specifies name and type of a symbol which is a navigation node.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.SYMBOL_DESCRIPTION_NODE.dwType">
      <summary>The type of the symbol.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.SYMBOL_DESCRIPTION_NODE.pszName">
      <summary>The name of the symbol.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SymbolScopeGuids80">
      <summary>Defines GUIDs associated with symbol scope.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.SymbolScopeGuids80.All">
      <summary>All symbol scopes.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.SymbolScopeGuids80.Frameworks">
      <summary>Framework symbol scope</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.SymbolScopeGuids80.FSSelectedComponents">
      <summary>File system selected component symbol scope.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.SymbolScopeGuids80.OBSelectedComponents">
      <summary>Object browser selected components symbol scope.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.SymbolScopeGuids80.Solution">
      <summary>Solution scope.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.SYSTEMTIME">
      <summary>Represents a date and time using individual members for the month, day, year, weekday, hour, minute, second, and millisecond.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.SYSTEMTIME.wDay">
      <summary>Specifies the current day of the month.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.SYSTEMTIME.wDayOfWeek">
      <summary>Specifies the current day of the week; Sunday = 0, Monday = 1, and so on. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.SYSTEMTIME.wHour">
      <summary>Specifies the current hour.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.SYSTEMTIME.wMilliseconds">
      <summary>Specifies the current millisecond.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.SYSTEMTIME.wMinute">
      <summary>Specifies the current minute. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.SYSTEMTIME.wMonth">
      <summary>Specifies the current month.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.SYSTEMTIME.wSecond">
      <summary>Specifies the current second.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.SYSTEMTIME.wYear">
      <summary>Specifies the current year. The year must be greater than 1601.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.tagCreateClassLibFlags">
      <summary>Represents options for creating class libraries.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.tagCreateClassLibFlags.CCL_CreateP2PReference">
      <summary>Option is to create a project-to-project reference for the class library.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.tagCreateClassLibFlags.CCL_UseAnchorWebConfig">
      <summary>Use the anchor web configuration for the class library.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.tagVSQueryEditResultFlags2">
      <summary>This enumeration specifies bitflags, returned from the <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsQueryEditQuerySave2.QueryEditFiles(System.UInt32,System.Int32,System.String[],System.UInt32[],Microsoft.VisualStudio.Shell.Interop.VSQEQS_FILE_ATTRIBUTE_DATA[],System.UInt32@,System.UInt32@)" /> method, that tell whether a file was checked out and/or changed.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.tagVSQueryEditResultFlags2.QER_Changed">
      <summary>The QueryEditFiles operation caused check out from source control and a new version was retrieved. If the file is opened in the IDE, QER_Reloaded will also be retuned.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.tagVSQueryEditResultFlags2.QER_Reloaded">
      <summary>The QueryEditFiles operation caused check out from source control, a new version was retrieved from the source control database, and the file was reloaded in memory (editor buffer or project/solution file). The caller may need to abort the initial operation that caused the edit if it cannot tolerate the newly reloaded content of the file—for example, if calculations made based on the content before the QueryEditFiles call may not apply to the new content).</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.TaskListViews">
      <summary>Specifies views used to display the task list.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.TaskListViews.All">
      <summary>Indicates all tasks are shown.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.TaskListViews.CheckedTasks">
      <summary>Indicates only checked tasks are shown.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.TaskListViews.CommentTasks">
      <summary>Indicates only comment tasks are shown.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.TaskListViews.CompilerTasks">
      <summary>Indicates only tasks created by the compiler are shown.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.TaskListViews.CurrentFileTasks">
      <summary>Indicates only tasks in the current file are shown.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.TaskListViews.HTMLTasks">
      <summary>Indicates only HTML tasks are shown.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.TaskListViews.ShortcutTasks">
      <summary>Indicates only shortcut tasks are shown.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.TaskListViews.UncheckedTasks">
      <summary>Indicates only unchecked tasks are shown.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.TaskListViews.UserTasks">
      <summary>Indicates only manually entered tasks are shown.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.TaskProviderGuids">
      <summary>Provides a list of GUIDs that are used to identify task providers.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.TaskProviderGuids.Comments">
      <summary>Specifies a comment.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids">
      <summary>Provides GUIDs that are used to identify Visual Studio tool windows.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids.BrowserDoc">
      <summary>For internal use only.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids.ClassView">
      <summary>This tool window provides a list of all classes in a solution.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids.CommandWindow">
      <summary>This tool window provides a way to execute commands directly in the Visual Studio shell.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids.ContextWindow">
      <summary>This tool window provides links to help topics based on the current context.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids.DocOutline">
      <summary>This tool window provides an outline of an HTML file.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids.FindAdvanced">
      <summary>This tool window provides the ability to search files for a string.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids.FindReplace">
      <summary>This tool window provides the ability to search and replace on the currently opened file.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids.FindResults1">
      <summary>This tool window provides a list of the search results.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids.FindResults2">
      <summary>This tool window provides a second list of search results.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids.MacroExplorer">
      <summary>This tool window provides a list of macros available for use in the Visual Studio shell.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids.ObjectBrowser">
      <summary>This tool window provides a list of components installed on the system.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids.ObjectSearchResultsWindow">
      <summary>This tool window provides the results of searching for a symbol.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids.ObjectSearchWindow">
      <summary>This tool window provides the ability to search for a symbol.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids.Outputwindow">
      <summary>This tool window displays any output generated by a build process or a program being debugged.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids.PropertyBrowser">
      <summary>This tool window provides a list of properties associated with the currently selected file or project in Solution Explorer.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids.ResourceView">
      <summary>This tool window provides a list of resources available in a project.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids.ServerExplorer">
      <summary>This tool window provides a list of servers used for connecting to databases.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids.SolutionExplorer">
      <summary>This tool window provides a list of projects and their files in a solution.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids.TaskList">
      <summary>This tool window provides a list of user-specified tasks to be accomplished for a project.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids.Toolbox">
      <summary>This tool window provides a list of components that can be added to a project, typically through the Windows Forms designer.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80">
      <summary>Provides additional GUIDs that are used to identify Visual Studio tool windows.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.Autos">
      <summary>This tool window provides a list of recently changed variables and parameters at the current point of execution during debugging.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.BookmarkWindow">
      <summary>This tool window provides a list of bookmarks placed in all files in a solution.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.Breakpoints">
      <summary>This tool window provides a list of breakpoints in a solution.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.BrowserDoc">
      <summary>For internal use only.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.CallBrowserSecondaryWindow">
      <summary>This tool window is a second Call Browser window (see <see cref="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.CallBrowserWindow" />).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.CallBrowserWindow">
      <summary>This tool window provides a list of functions or methods in the source file, organized by caller or callee.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.CallStack">
      <summary>This tool window displays the current call stack while debugging.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.ClassDetails">
      <summary>This tool window displays the details of a class selected in a class diagram view.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.ClassView">
      <summary>This tool window provides a list of all classes in a solution.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.CodedefinitionWindow">
      <summary>This tool window provides a read-only view of the source where the symbol under the cursor is defined.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.CommandWindow">
      <summary>This tool window provides a way to execute commands directly in the Visual Studio shell.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.ConsoleIO">
      <summary>Do not use.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.ContextWindow">
      <summary>This tool window provides links to help topics based on the current context.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.DataSourceWindow">
      <summary>This tool window displays a list of data sources such as databases for a program.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.DefinitionWindow">
      <summary>For internal use only.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.Disassembly">
      <summary>This tool window displays a disassembly of the source code while debugging.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.DocumentOutline">
      <summary>This tool window provides an outline of an HTML file.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.ErrorList">
      <summary>This tool window provides a list of warnings and errors generated during a build process.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.Find1">
      <summary>This tool window provides a list of the search results.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.Find2">
      <summary>This tool window provides a second list of search results.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.FindAdvanced">
      <summary>This tool window provides the ability to search files for a string.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.FindInFiles">
      <summary>This tool window provides the ability to search files for a string.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.FindReplace">
      <summary>This tool window provides the ability to search and replace on the currently opened file.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.HelpFavorites">
      <summary>Displays a list of links to favorite topics in the help documentation. This window is deprecated.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.HelpHowDoI">
      <summary>Displays a list of help topics that help answer the question "How do I?" This window is deprecated.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.Helpindex">
      <summary>This tool window displays the help documentation index. This window is deprecated.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.HelpIndexResults">
      <summary>This tool window displays all entries of a selected help index keyword. This window is deprecated.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.HelpSearch">
      <summary>This tool window displays a search form for searching the help documentation. This window is deprecated.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.ImmediateWindow">
      <summary>This tool window provides a way to enter debugging commands for expression evaluation while debugging.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.IVSMDPropertyBrowser">
      <summary>For internal use only.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.LocalChanges">
      <summary>This tool window displays files that have been changed and that are under source control.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.Locals">
      <summary>This tool window displays a list of all local variables and parameters while debugging.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.MacroExplorer">
      <summary>This tool window provides a list of macros available for use in the Visual Studio shell.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.Memory">
      <summary>This tool window displays the values in a region of memory while debugging.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.Modules">
      <summary>This tool window displays a list of all modules that are loaded during debugging.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.ObjectBrowser">
      <summary>This tool window provides a list of components installed on the system.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.ObjectSearchResultsWindow">
      <summary>This tool window provides the results of searching for a symbol.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.ObjectSearchWindow">
      <summary>This tool window provides the ability to search for a symbol.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.ObjectTestBench">
      <summary>This tool window provides a way to instantiate classes and then interact with them.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.Outputwindow">
      <summary>This tool window displays any output generated by a build process or a program being debugged.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.PortDetails">
      <summary>This tool window displays information about Web services.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.Processes">
      <summary>This tool window displays a list of processes that are running while debugging.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.PropertiesWindow">
      <summary>This tool window provides a list of properties associated with the currently selected file or project in Solution Explorer.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.PropertySheetManager">
      <summary>This tool window provides a list of Visual C++ project configurations.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.Registers">
      <summary>This tool window displays a list of CPU registers while debugging.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.ResourceView">
      <summary>This tool window provides a list of resources available in a project.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.RunningDocuments">
      <summary>This tool window displays a list of HTML pages that have script running in them.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.SdmDesignerTransactions">
      <summary>For internal debugging use only.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.ServerExplorer">
      <summary>This tool window provides a list of servers used for connecting to databases.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.SettingsandConstraints">
      <summary>This tool window displays settings for an item in a distributed system diagram.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.SolutionExplorer">
      <summary>This tool window provides a list of projects and their files in a solution.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.StartPage">
      <summary>This tool window contains the Start Page that can be the first thing shown when Visual Studio starts.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.StyleOrganizerToolWindow">
      <summary>For internal use only.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.SystemView">
      <summary>This tool window provides a list of elements in a distributed system.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.Tableofcontents">
      <summary>This tool window displays the table of contents for the help documentation.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.TaskList">
      <summary>This tool window provides a list of user-specified tasks to be accomplished for a project.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.Threads">
      <summary>This tool window displays a list of all threads active while debugging.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.Toolbox">
      <summary>This tool window provides a list of components that can be added to a project, typically through the Windows Forms designer.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.TrinityDataWindow">
      <summary>For internal use only.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.UAMSynchronizations">
      <summary>For internal debugging use only.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.VCColorPalette">
      <summary>This tool window displays a list of colors that can be used when editing an image.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.VCPropertyManager">
      <summary>This tool window displays configuration properties for Visual C++ projects.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.Watch">
      <summary>This tool window displays user-selected expressions while debugging.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.WebBrowserPreviewWindow">
      <summary>This tool window displays the ASP.NET configuration pages for a Web site project.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.ToolWindowGuids80.WebBrowserWindow">
      <summary>This tool window displays a browser in the Visual Studio shell.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.UIContextGuids">
      <summary>Provides a list of GUIDs that are used to identify command contexts.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.UIContextGuids.CodeWindow">
      <summary>Specifies a context in which a code window currently has focus.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.UIContextGuids.Debugging">
      <summary>Specifies a context in which debugging is active.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.UIContextGuids.DesignMode">
      <summary>Specifies a context where the editor is in design mode.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.UIContextGuids.Dragging">
      <summary>Specifies a context that occurs while dragging items in Solution Explorer.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.UIContextGuids.EmptySolution">
      <summary>Specifies a context in which an empty solution has been loaded.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.UIContextGuids.FullScreenMode">
      <summary>Specifies a context that is active when Visual Studio is in full screen mode.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.UIContextGuids.NoSolution">
      <summary>Specifies a context in which no solution is loaded.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.UIContextGuids.SolutionBuilding">
      <summary>Specifies a context in which a project or solution is currently being built.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.UIContextGuids.SolutionExists">
      <summary>Specifies a context in which a solution has been loaded.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.UIContextGuids.SolutionHasMultipleProjects">
      <summary>Specifies a context in which a loaded solution contains more than one project.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.UIContextGuids.SolutionHasSingleProject">
      <summary>Specifies a context in which a loaded solution contains a single project.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.UIContextGuids80">
      <summary>Provides more GUIDs that are used to identify command contexts.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.UIContextGuids80.CodeWindow">
      <summary>Specifies a context in which a code window currently has focus.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.UIContextGuids80.DataSourceWindowAutoVisible">
      <summary>Specifies a context in which a data source window is auto visible.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.UIContextGuids80.DataSourceWindowSupported">
      <summary>Specifies a context in which a data source window is supported by the project.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.UIContextGuids80.Debugging">
      <summary>Specifies a context in which debugging is active.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.UIContextGuids80.DesignMode">
      <summary>Specifies a context where the editor is in design mode.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.UIContextGuids80.Dragging">
      <summary>Specifies a context that occurs while dragging items in Solution Explorer.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.UIContextGuids80.EmptySolution">
      <summary>Specifies a context in which an empty solution has been loaded.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.UIContextGuids80.FullScreenMode">
      <summary>Specifies a context that is active when Visual Studio is in full screen mode.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.UIContextGuids80.NoSolution">
      <summary>Specifies a context in which no solution is loaded.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.UIContextGuids80.NotBuildingAndNotDebugging">
      <summary>Specifies a context in which the solution is not being built or debugged.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.UIContextGuids80.SolutionBuilding">
      <summary>Specifies a context in which a project or solution is currently being built.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.UIContextGuids80.SolutionExists">
      <summary>Specifies a context in which a solution has been loaded.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.UIContextGuids80.SolutionExistsAndNotBuildingAndNotDebugging">
      <summary>Specifies a context in which a solution is loaded and is not being built or debugged.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.UIContextGuids80.SolutionHasMultipleProjects">
      <summary>Specifies a context in which a loaded solution contains more than one project.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.UIContextGuids80.SolutionHasSingleProject">
      <summary>Specifies a context in which a loaded solution contains a single project.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.UIContextGuids80.SolutionOrProjectUpgrading">
      <summary>Specifies a context in which a solution or project is being upgraded.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.UIContextGuids80.ToolboxInitialized">
      <summary>Specifies a context in which the Toolbox is being initialized.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.UIContextGuids80.WindowsFormsDesigner">
      <summary>Specifies a context in which the Windows Forms designer has focus.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo2">
      <summary>Provides information about a debug target. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo2.bstrArg">
      <summary>BSTR containing the command line arguments to the exe (<see cref="F:Microsoft.VisualStudio.Shell.Interop.DEBUG_LAUNCH_OPERATION.DLO_CreateProcess" />).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo2.bstrCurDir">
      <summary>BSTR containing the current directory (<see cref="F:Microsoft.VisualStudio.Shell.Interop.DEBUG_LAUNCH_OPERATION.DLO_CreateProcess" />).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo2.bstrEnv">
      <summary>BSTR containing the environment settings (<see cref="F:Microsoft.VisualStudio.Shell.Interop.DEBUG_LAUNCH_OPERATION.DLO_CreateProcess" />).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo2.bstrExe">
      <summary>BSTR containing the name of the executable.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo2.bstrOptions">
      <summary>BSTR containing custom options specific to each debugger (null is recommended).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo2.bstrPortName">
      <summary>BSTR containing the name of the port from the supplier specified in <see cref="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo2.guidPortSupplier" />. (Can be null).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo2.bstrRemoteMachine">
      <summary>BSTR containing the machine name for a remote machine. Use null for the local machine.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo2.cbSize">
      <summary>Specifies the size of the VsDebugTargetInfo2 struct.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo2.dlo">
      <summary>Specifies how this process should be launched or attached.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo2.dwDebugEngineCount">
      <summary>Specifies the number of debug engine GUIDs in the <see cref="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo2.guidLaunchDebugEngine" /> array.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo2.dwProcessId">
      <summary>Specifies the process id (<see cref="F:Microsoft.VisualStudio.Shell.Interop.DEBUG_LAUNCH_OPERATION.DLO_AlreadyRunning" />).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo2.dwReserved">
      <summary>Reserved for future use - specify null.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo2.fSendToOutputWindow">
      <summary>BOOL - if true, stdout and stderr are to be routed to the output window.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo2.guidLaunchDebugEngine">
      <summary>Specifies the guid of the debug engine used for launch (<see cref="F:Microsoft.VisualStudio.Shell.Interop.DEBUG_LAUNCH_OPERATION.DLO_CreateProcess" />)</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo2.guidPortSupplier">
      <summary>Specifies the GUID of the port supplier.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo2.guidProcessLanguage">
      <summary>Specifies the language of the hosting process. Used to preload expression evaluators.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo2.hStdError">
      <summary>The stderr handle.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo2.hStdInput">
      <summary>The stdin handle.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo2.hStdOutput">
      <summary>The stdout handle.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo2.LaunchFlags">
      <summary>Specifies the launch flags that were passed to <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsDebuggableProjectCfg.DebugLaunch(System.UInt32)" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo2.pDebugEngines">
      <summary>Specifies an array of debug engine guids, or null if <see cref="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo2.dwDebugEngineCount" /> is zero.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsDebugTargetInfo2.pUnknown">
      <summary>Specifies an interface pointer - usage depends on <see cref="T:Microsoft.VisualStudio.Shell.Interop.DEBUG_LAUNCH_OPERATION" />.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.VSDEFAULTPREVIEWER">
      <summary>Contains information about the default previewer.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSDEFAULTPREVIEWER.bstrDefBrowserDisplayName">
      <summary>The display name of the default previewer.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSDEFAULTPREVIEWER.bstrDefBrowserPath">
      <summary>The browser path to the default previewer.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSDEFAULTPREVIEWER.defRes">
      <summary>The resolution of the default previewer.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSDEFAULTPREVIEWER.fIsInternalBrowser">
      <summary>Indicates whether the default previewer is an internal browser. If true, the default previewer is an internal browser.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSDEFAULTPREVIEWER.fIsSystemBrowser">
      <summary>Indicates whether the default previewer is a system browser. If true, the default previewer is a system browser.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.VSDRAWITEMSTRUCT">
      <summary>Represents information used by <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsImageButton" /> to draw an owner-drawn control.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSDRAWITEMSTRUCT.CtlID">
      <summary>Represents the identifier of the control.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSDRAWITEMSTRUCT.CtlType">
      <summary>Represents the control type.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSDRAWITEMSTRUCT.hdc">
      <summary>A handle to a device context; this device context must be used when performing drawing operations on the control.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSDRAWITEMSTRUCT.hwndItem">
      <summary>A handle to the control for the button.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSDRAWITEMSTRUCT.itemAction">
      <summary>Represents the required drawing action.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSDRAWITEMSTRUCT.itemData">
      <summary>This is zero for a button control type.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSDRAWITEMSTRUCT.itemid">
      <summary>The identifier for the item, not used for buttons.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSDRAWITEMSTRUCT.itemState">
      <summary>The visual state of the item after the current drawing action takes place.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSDRAWITEMSTRUCT.rcItem">
      <summary>A rectangle that defines the boundaries of the control to be drawn. This rectangle is in the device context specified by the hdc member. The system automatically clips anything that the owner window draws in the device context buttons.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.VSErrorCodes80">
      <summary>Visual Studio error codes.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSErrorCodes80.VS_E_DOCUMENTOPENNOTTRUSTED">
      <summary>Returned by editor invocation if the document cannot be opened safely (template, editor or logical view is untrusted).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSErrorCodes80.VS_E_MIGRATIONREQUIRESRELOAD">
      <summary>Migration requires a reload.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSErrorCodes80.VS_E_SYNCHRONOUSOPENREQUIRED">
      <summary>A solution or project file cannot be opened asynchronously.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSErrorCodes80.VS_E_VSSETTINGS_INVALIDVERSION">
      <summary>Returned by <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsFileCollection.AddBrowseFile(System.String,Microsoft.VisualStudio.Shell.Interop.IVsProfileSettingsFileInfo@)" /> if the selected file is of the wrong version.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.VSFRAMEMODE2">
      <summary>Specifies additional members for the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSFRAMEMODE" /> enumeration.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSFRAMEMODE2.VSFM_AutoHide">
      <summary>Frame mode is autohide, May be combined with other VSFM_ flags.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.VSNSEBROWSEINFOW">
      <summary>Specifies the namespace extension information for the Browse dialog box.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSNSEBROWSEINFOW.fOnlyShowNSEInTray">
      <summary>Specifies whether the namespace extension icon only is shown in the dialog tray. If set, only the namespace extension icon is shown in the Browse dialog box.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSNSEBROWSEINFOW.lStructSize">
      <summary>DWORD containing the size of the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSNSEBROWSEINFOW" /> struct.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSNSEBROWSEINFOW.pszNamespaceGUID">
      <summary>Specifies the namespace extension GUID as a string</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSNSEBROWSEINFOW.pszProtocolPrefix">
      <summary>Prefix for namespace extension URLs. For example: "msss://".</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSNSEBROWSEINFOW.pszTrayDisplayName">
      <summary>Specifies the display name for the namespace extension in dialog tray.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.VSOBNAVIGATIONINFO3">
      <summary>Specifies information for navigation to an object. Sued in <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.LocateNavigationInfo2(Microsoft.VisualStudio.Shell.Interop.VSOBNAVIGATIONINFO3[],Microsoft.VisualStudio.Shell.Interop.VSOBNAVNAMEINFONODE2[],System.Int32,System.Int32@,System.UInt32@)" /> calls.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSOBNAVIGATIONINFO3.dwCustom">
      <summary>DWORD containing custom information.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSOBNAVIGATIONINFO3.pguidLib">
      <summary>GUID of the library.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSOBNAVIGATIONINFO3.pName">
      <summary>Name of the item of interest. The name is in the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBNAVNAMEINFONODE2" /> struct.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSOBNAVIGATIONINFO3.pszLibName">
      <summary>String containing the library name.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.VSOBNAVNAMEINFONODE2">
      <summary>Specifies information for navigation to an object. (passed to <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetNavigationInfo2(System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSOBNAVIGATIONINFO3[])" /> and <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.LocateNavigationInfo2(Microsoft.VisualStudio.Shell.Interop.VSOBNAVIGATIONINFO3[],Microsoft.VisualStudio.Shell.Interop.VSOBNAVNAMEINFONODE2[],System.Int32,System.Int32@,System.UInt32@)" />) </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSOBNAVNAMEINFONODE2.lltName">
      <summary>Specifies the type of the object to navigate to. Values are taken from the LIB_LISTTYPE2 enumeration.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSOBNAVNAMEINFONODE2.pNext">
      <summary>Pointer to the next <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBNAVNAMEINFONODE2" /> structure.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSOBNAVNAMEINFONODE2.pszName">
      <summary>Pointer to a null terminated string containing the name of the object to navigate to. </summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2">
      <summary>Specifies search options. Used with methods such as <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsObjectList2.GetList2(System.UInt32,System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2[],Microsoft.VisualStudio.Shell.Interop.IVsObjectList2@)" /> and <see cref="M:Microsoft.VisualStudio.Shell.Interop.IVsLibrary2.GetList2(System.UInt32,System.UInt32,Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2[],Microsoft.VisualStudio.Shell.Interop.IVsObjectList2@)" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2.dwCustom">
      <summary>DWORD specifying a custom search criteria.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2.eSrchType">
      <summary>Specifies the type of search to perform. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHTYPE" /> enumeration.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2.grfOptions">
      <summary>Specifies search options. Values are taken from the <see cref="T:Microsoft.VisualStudio.Shell.Interop._VSOBSEARCHOPTIONS2" /> enumeration.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2.pIVsNavInfo">
      <summary>Specifies an <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsNavInfo" /> object to search.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSOBSEARCHCRITERIA2.szName">
      <summary>String containing the object name.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.VSSAVETREEITEM">
      <summary>Specifies save options for a tree-view item. </summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSSAVETREEITEM.docCookie">
      <summary>Handle of the document in the Running Document Table.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSSAVETREEITEM.grfSave">
      <summary>Specifies save options for a document in the running document table (RDT). For a list of values, see <see cref="T:Microsoft.VisualStudio.Shell.Interop.__VSRDTSAVEOPTIONS" />.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSSAVETREEITEM.itemid">
      <summary>Identifier of the hierarchy item. For a list of <paramref name="itemid" /> values, see VSITEMID.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSSAVETREEITEM.pHier">
      <summary>An <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsHierarchy" /> object.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.VSSCCENLISTMENTCHOICE">
      <summary>These values indicate a project's willingness to work with choosing an enlistment (a local working copy of a project or solution that is under source control). Being able to choose an enlistment allows the user to change the location of a stored project when it is pulled from source control.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSSCCENLISTMENTCHOICE.VSSCC_EC_COMPULSORY">
      <summary>This project requires the user to pick an enlistment.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSSCCENLISTMENTCHOICE.VSSCC_EC_NEVER">
      <summary>This project does not support enlistment choice. This is the same as if the project didn't implement the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSccProjectEnlistmentChoice" /> interface.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSSCCENLISTMENTCHOICE.VSSCC_EC_OPTIONAL">
      <summary>This project allows enlistment choice but does not require it.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.VSSCCPROVIDERBINDING">
      <summary>These are the options a project can return indicating its willingness to work with a custom source control package.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSSCCPROVIDERBINDING.VSSCC_PB_CUSTOM">
      <summary>This project not only has a custom source control package, it also can be used immediately.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSSCCPROVIDERBINDING.VSSCC_PB_CUSTOM_DISABLED">
      <summary>This project cannot be put under source control because the required custom source control package is not installed.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSSCCPROVIDERBINDING.VSSCC_PB_STANDARD">
      <summary>This project does not have a custom source control package (this value is the same as not implementing the <see cref="T:Microsoft.VisualStudio.Shell.Interop.IVsSccProjectProviderBinding" /> interface at all).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSSCCPROVIDERBINDING.VSSCC_PB_STANDARD_DISABLED">
      <summary>This project is offline and therefore cannot be added to source control at this time.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.VSSOLNBUILDUPDATEFLAGS2">
      <summary>Provides additional members for the <see cref="T:Microsoft.VisualStudio.Shell.Interop.VSSOLNBUILDUPDATEFLAGS" /> enumeration.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSSOLNBUILDUPDATEFLAGS2.SBF_OPERATION_PUBLISH">
      <summary>Publish the solution (can OR with other flags)</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSSOLNBUILDUPDATEFLAGS2.SBF_OPERATION_PUBLISHUI">
      <summary>Publish solution (can OR with other flags)</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.VSTASKCOLUMN">
      <summary>Column definitions for tasks.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSTASKCOLUMN.bstrCanonicalName">
      <summary>String containing the non-localized name of the column header. It must be unique within this provider's column list.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSTASKCOLUMN.bstrHeading">
      <summary>String containing the text in header. bstrHeading may be null to indicate an image.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSTASKCOLUMN.bstrLocalizedName">
      <summary>String containing the localized name for the column header.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSTASKCOLUMN.bstrTip">
      <summary>String containing the tooltip for the column header.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSTASKCOLUMN.cxDefaultWidth">
      <summary>The default column width in pixels.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSTASKCOLUMN.cxMinWidth">
      <summary>The minimum column width in pixels.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSTASKCOLUMN.fAllowHide">
      <summary>Flag indicating whether the user is allowed to change the column's visibility.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSTASKCOLUMN.fAllowUserSort">
      <summary>Flag indicating whether the user is allowed to sort by clicking on the column's header.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSTASKCOLUMN.fDescendingSort">
      <summary>Flag indicating the column is sorted in descending order (default is ascending).</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSTASKCOLUMN.fDynamicSize">
      <summary>Flag indicating whether the task list is allowed to resize the column automatically to make content fit better.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSTASKCOLUMN.fFitContent">
      <summary>Column will be automatically resized to fit whenever its content changes.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSTASKCOLUMN.fMoveable">
      <summary>Flag indicating whether the column may be dragged to another position by the user.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSTASKCOLUMN.fShowSortArrow">
      <summary>Flag indicating whether a sort arrow is shown in the header when the list is sorted by this column.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSTASKCOLUMN.fSizeable">
      <summary>Flag indicating whether the column may be resized by the user.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSTASKCOLUMN.fVisibleByDefault">
      <summary>Flag indicating whether this column is visible by default.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSTASKCOLUMN.iDefaultSortPriority">
      <summary>Specifies if a column is sorted by default.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSTASKCOLUMN.iField">
      <summary>The field index designated by the task provider.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VSTASKCOLUMN.iImage">
      <summary>Index into the provider's image list.</summary>
    </member>
    <member name="T:Microsoft.VisualStudio.Shell.Interop.VsUpToDateCheckFlags">
      <summary>Specifies the reason for checking flags.</summary>
    </member>
    <member name="F:Microsoft.VisualStudio.Shell.Interop.VsUpToDateCheckFlags.VSUTDCF_DTEEONLY">
      <summary>Design time expression evaluation only</summary>
    </member>
  </members>
</doc>