<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADG
        CgAAAk1TRnQBSQFMAgEBAgEAAQQBAAEEAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEP8AIwABEAEBAc8B7AIBAfEB/wIBAfEB/wIBAfEB/wIBAe8B/wIBAe8B/wIB
        Ae0B/wEPAQEBzQHtIAABGgEDAQIBIwE8AR8BCAF9AS4BWwEYAdsBIgFpAR0B8wEiAWcBHQHzAS4BVAEY
        AdsBPAEcAQgBfQEaAQMBAgEjnAABEAEBAdIB7AEbASEB9QH/AT0BTQH5Af8BOwFKAfgB/wE5AUgB+AH/
        ATYBRgH4Af8BNQFEAfcB/wEzAUMB9wH/ARUBHAHxAf8BEgEBAcUB6BgAATIBEAEFAVMBKQFrARoB5gFD
        AaABUwH/AYcBygGaAf8BmwHTAasB/wGbAdIBqwH/AYMBxwGWAf8BPgGXAU0B/wEpAVoBGQHmATIBDQEE
        AVOUAAEQAQEB1AHsAR4BJAH5Af8BRQFUAfoB/wElASoB+QH/AhMB9wH/AhAB9gH/Ag0B9QH/AgoB9QH/
        ARcBHAH1Af8BNAFEAfcB/wEVARwB8QH/ARIBAQHFAegQAAEyARABBgFTASIBfwEfAfQBbgG+AYMB/wGo
        AdsBtQH/AYcBzAGYAf8BZwG8AX4B/wFlAboBfQH/AYYBywGYAf8BpQHZAbQB/wFnAbcBfgH/ASEBYwEc
        AfQBMgENAQQBU4wAARABAQHVAewBIAEmAfoB/wFLAVkB+wH/AUMBSAH7Af8CyQH9Af8CPAH5Af8CFAH3
        Af8CEQH2Af8CNAH3Af8CxQH9Af8BMQE2AfcB/wE1AUUB9wH/ARUBHAHyAf8BEgEBAcUB6AgAARoBBAEC
        ASIBKwF6AScB5QFzAcIBhwH/AagB2wGyAf8BYQG8AXgB/wFdAboBdAH/AVoBuAFxAf8BWgG1AXAB/wFZ
        AbUBcAH/AVwBtwF1Af8BpQHZAbMB/wFqAbgBgAH/ASkBWwEZAeUBGgEDAQIBIogAAgEB+wH/AVABXgH9
        Af8BMwE4AfsB/wLLAf4B/wLyAv8C6wH+Af8CPAH5Af8COgH4Af8C6gH+Af8C8QH+Af8CxQH9Af8BGQEe
        AfYB/wE0AUQB9wH/AgEB7wH/CAABPQEpARABfgFNAbABZQH/AaoB3QG0Af8BZQHBAXoB/wFgAb4BcgH/
        AXYBxQGFAf8B1AHsAdkB/wGKAc0BmQH/AVcBtgFtAf8BWQG1AW8B/wFdAbcBdQH/AaYB2gG0Af8BQgGb
        AU8B/wE8AR4BCAF+iAACAQH9Af8BUwFgAf0B/wIpAfwB/wJIAfwB/wLsAv8C8gL/AuwC/wLsAf4B/wLx
        Av8C6gH+Af8CNQH3Af8CDAH1Af8BNgFGAfgB/wIBAe8B/wgAATIBfQEyAdsBkQHSAZ8B/wGNAdQBmgH/
        AWUBwwF1Af8BegHJAYcB/wHyAfoB9AX/Af0B/gH9Af8BhgHLAZYB/wFYAbcBbgH/AVwBuQFzAf8BhQHM
        AZcB/wGHAccBmgH/AS4BWQEYAduIAAIBAf0B/wFWAWMB/gH/Ai0B/QH/AioB/AH/AkkB/AH/Au0C/wLy
        Av8C8gL/AuwB/gH/AjsB+QH/AhMB9wH/AhAB9gH/ATkBSQH4Af8CAQHxAf8IAAElAaEBPwH2AaYB3AGv
        Af8BcQHKAYAB/wF0AcoBgQH/AfAB+QHxBf8B6wH3Ae0F/wH7Af0B/AH/AYgBzQGWAf8BXAG5AXIB/wFo
        Ab4BfgH/AaAB1wGvAf8BIQFyAR0B9ogAAgEB/QH/AVgBZQH+Af8CMQH9Af8CLgH9Af8CTAH8Af8C7QL/
        AvIC/wLyAv8C7AL/Aj4B+QH/AhcB+AH/AhQB9wH/AT0BTAH4Af8CAQHxAf8IAAErAagBRgH2AacB3QGx
        Af8BcwHMAYEB/wFnAccBdAH/AbAB4QG3Af8B0gHuAdYB/wFkAcEBcQH/AbgB4wG/Bf8B+wH9AfwB/wGM
        AdABmQH/AWoBwQF/Af8BoQHXAa4B/wEhAXcBHQH2iAACAQL/AVsBaAH+Af8CNAH+Af8CUQH9Af8C7QL/
        AvMC/wLtAv8C7QL/AvIC/wLsAf4B/wI/AfoB/wIYAfgB/wFAAU8B+QH/AgEB8QH/CAABPAGLAT8B2wGV
        AdcBoQH/AZEB1wGbAf8BagHJAXcB/wFlAcYBcAH/AWIBxAFvAf8BYgHDAXAB/wFiAcIBcAH/AbkB5AHA
        Bf8B4wH0AeYB/wGLAdEBmQH/AYsBzgGdAf8BLwFlARgB24gAAgEC/wFcAWkC/wFEAUgB/gH/As8C/wLz
        Av8C7QL/Ak0B/AH/AksB/AH/AuwC/wLyAv8CygH+Af8BKwEwAfoB/wFDAVIB+gH/AgEB8wH/CAABQgEv
        ARcBfgFYAb8BcQH/Aa8B4QG3Af8BbgHMAXsB/wFpAcgBcwH/AWYBxwFxAf8BZAHFAW8B/wFjAcQBbwH/
        AWQBxAFyAf8BtgHjAb4B/wFwAccBfwH/AawB3wG1Af8BSQGpAV8B/wE9ASQBCgF+iAABEQEBAdkB6wEn
        ASwC/wFeAWsC/wFZAVwC/wLPAv8CUwH+Af8CMAH9Af8CLQH9Af8CTAH8Af8CzAH+Af8BSQFNAfsB/wFK
        AVgB+wH/AR4BJAH5Af8BEQEBAdAB6wgAARoBBAEDASIBPwGaAUUB5QGAAc4BkAH/Aa4B4QG1Af8BbgHM
        AXsB/wFrAcoBdwH/AWkByAFzAf8BaQHIAXUB/wFpAcgBdgH/AWwByQF6Af8BrAHfAbQB/wF3AcQBiQH/
        ASsBegElAeUBGgEEAQIBIowAAREBAQHZAesBJwEsAv8BXgFrAv8BRAFIAv8CNQH+Af8CMwH+Af8CMQH9
        Af8CLgH9Af8BOQE9AfwB/wFQAV4B/AH/ASABJgH6Af8BEQEBAdIB6xAAATUBFgELAVMBOQGwAU4B9AGA
        Ac4BkAH/Aa8B4QG3Af8BkgHYAZ0B/wF4Ac4BgwH/AXgBzgGDAf8BkgHYAZ0B/wGuAeEBtQH/AXkByAGL
        Af8BJAGQAS8B9AEyARIBBwFTlAABEQEBAdkB6wEnASwC/wFdAWoC/wFcAWkC/wFbAWgB/gH/AVkBZgH+
        Af8BVwFkAf4B/wFVAWIB/gH/ASMBKAH8Af8BCwEBAeIB8hgAATYBFgELAVMBQAGeAUkB5gFaAcIBdQH/
        AZYB1wGjAf8BpQHcAa4B/wGlAdwBrgH/AZUB1gGhAf8BUQG5AWsB/wEtAYsBNwHmATIBEwEIAVOcAAEQ
        AQEB2wHsAgEC/wIBAv8CAQL/AgEB/QH/AgEB/QH/AgEB/QH/ARABAQHZAewgAAEbAQUBAwEjAUQBMAEX
        AX0BRQGQAUQB2wE3AawBTQHzATMBqgFLAfMBOgGJAT0B2wFAAS0BFQF9ARsBBAEDASP/AJEAAUIBTQE+
        BwABPgMAASgDAAFAAwABEAMAAQEBAAEBBQABgBcAA/8BAAT/BAAB8AEPAfABDwQAAeABBwHgAQcEAAHA
        AQMBwAEDBAABgAEBAYABAQQAAYABAQGAAQEEAAGAAQEBgAEBBAABgAEBAYABAQQAAYABAQGAAQEEAAGA
        AQEBgAEBBAABgAEBAYABAQQAAYABAQGAAQEEAAHAAQMBwAEDBAAB4AEHAeABBwQAAfABDwHwAQ8EAAT/
        BAAL
</value>
  </data>
</root>