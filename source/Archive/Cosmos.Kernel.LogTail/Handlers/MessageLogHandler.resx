<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACG
        DQAAAk1TRnQBSQFMAgEBAwEAAQQBAAEEAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEP8AIwABMQECAQMBTAFTASQBZQHSAU8BPwGsAfABTgE2AZYB6QFMATQBlgHp
        AUYBOAGqAfABTAEeAWMB0gE1AQIBBAFUAQYCAQEGIAABCQIBAQoBBwIBAQckAAJFAVwBogEuAacB4AH/
        ASwBpAHfAf8BKgGhAd0B/wEoAZ4B3AH/ASYBmwHaAf8BJAGYAdkB/wEhAZMB1gH/ARwBjAHTAf8BFwGF
        Ac8B/wESAX8BzAH/AQ4BeAHJAf8BCgFyAcYB/wEHAW0BwwH/AQQBaQHBAf8BMgEqAU4BokwAATEBAgED
        AUwBZAFGAZMB5AGJAZcB+gH/AYQBlQL/AYEBkAH8Af8BfwGOAfoB/wF/AY0B9wH/AX8BiwHyAf8BUwFb
        Ad0B/wFBAQMBCgFzHAABCQIBAQoBOAGDAT4B/wEzAXgBNgH7AQcCAQEHIAABPAGKAbQB4wG+AeMB9QH/
        AfQB/AH+Af8B7wH7Af4B/wHuAfsB/gH/Ae4B+wH+Af8B7wH8Af4B/wHvAfwB/gH/Ae8B+wH+Af8B7gH7
        Af4B/wHtAfsB/gH/Ae0B+wH+Af8B7AH7Af4B/wHyAfwB/gH/AasBzgHrAf8BHwFLAYsB2EgAATIBAgED
        AU0BaQFGAYUB3wGWAaUB+gH/AVwBdgL/ATQBUgL/ATIBUQL/AS4BSwH+Af8BJwFEAfoB/wFKAWIB+QH/
        AYYBlAH0Af8BWQEzAXoB3AEyAQIBAwFNFAABCQIBAQoBQQGOAUgB/wFVAaMBXQH/AVABnwFYAf8BNAF8
        ATkB/gEHAgEBCBwAATEBEAEVAUsBYwG/AegB/wH0AfwB/gH/AbUB7wH6Af8BWQHaAfUB/wFZAdoB9QH/
        AVgB2AHzAf8BWQHXAfIB/wFZAdYB8gH/AVgB2QH0Af8BUgHYAfUB/wFPAdcB9AH/AWMB2gH2Af8B6gH7
        Af4B/wFFAZMB0gH/AS0BCgESAUtEAAExAQIBAwFLAXQBVAGVAeUBnwGtAfsB/wFpAYEC/wFCAWAC/wFC
        AWAC/wE+AVsC/wE5AVcC/wE1AVIC/wEqAUgB/QH/AUwBZwH9Af8BiQGWAfYB/wFaAT0BkQHlATEBAQED
        AUsMAAEJAgEBCgFKAZoBUgH/AVwBrAFlAf8BeAHKAYIB/wF1AcgBfwH/AVIBoAFaAf8BNQF9AToB/gEH
        AgEBCBwAAUQBbwGQAcoBnQHXAfEB/wHnAfkB/QH/AYsB5QH4Af8BWwHbAfYB/wFcAdoB9AH/AT4BoQHV
        Af8BPgGhAdUB/wFVAdYB8gH/AVMB2AH1Af8BUQHWAfQB/wHYAfYB/AH/AYgBvwHlAf8BNAE9AWUBtEgA
        AWgBOgFwAdUBogGyAfwB/wF1AY8C/wFRAXIC/wFRAXAC/wFNAWsC/wFIAWYC/wFDAWAC/wE+AVwC/wE5
        AVcC/wEuAU0C/wFQAWkC/wGEAZMB+gH/AVIBJQFpAdUIAAEJAgEBCgFSAaYBWwH/AWQBtQFuAf8BfwHO
        AYkB/wF8AcwBhwH/AXcBygGBAf8BdwHJAYEB/wFTAaIBWwH/ATYBfgE7Af4BBwIBAQgYAAEcAQUBBgEk
        ATYBrAHeAfsB8wH7Af4B/wHDAfIB+wH/AV0B3AH2Af8BXQHaAfQB/wFlAd8B9gH/AVgBywHrAf8BVgHW
        AfIB/wFVAdkB9QH/AZQB5wH4Af8B4wH0AfsB/wEbAYEBxgH5ARsBBAEFASRIAAF7AWwBuQHyAaYBuwL/
        AWEBgQL/AWEBgAL/AVwBewL/AVcBdQL/AVIBcAL/AU0BawL/AUgBZgL/AUMBYAL/AT0BWwL/ATMBUQL/
        AYcBmQL/AVMBRgGzAfIEAAEIAgEBCQFaAbABZAH/AWwBvQF3Af8BhAHSAZAB/wF7AckBhQH/AWEBsgFr
        Af8BZAG0AW4B/wF5AckBgwH/AXkBywGCAf8BVAGjAV0B/wE2AX4BOgH9AQcCAQEIGAABRwFQAWcBqgGM
        AdIB8AH/AeoB+wH+Af8BlAHmAfgB/wFdAdoB9AH/AUgBsQHdAf8BPgGhAdUB/wFXAdcB8gH/AV0B2wH1
        Af8B3gH4Af0B/wF+AcAB5wH/AT0BKQE8AYdMAAF8AWEBoAHpAasBvgL/AW8BjQL/AWsBiQL/AWcBgwL/
        AWEBgAL/AVwBewL/AVcBdgL/AVIBcQL/AU0BawL/AUgBZQL/AUEBXgL/AYoBmwL/AVkBQAGZAekEAAEy
        AQ8BCQFGAV0BkQFSAeQBegHJAYYB/wGBAc4BjQH/AVIBogFZAfwBQwEfAREBbwFLAS8BGQGLAV0BrQFo
        Af8BfQHMAYYB/wF6AcsBhQH/AVUBpAFeAf8BNgF9AToB/AEHAgEBCBQAAQsBAQECAQwBPgGbAcUB7AHI
        AeoB9wH/AeYB+gH9Af8BXgHaAfQB/wE+AaEB1QH/AT4BoQHVAf8BWAHXAfIB/wHHAfMB/AH/AcAB4wH0
        Af8BMQF7Aa4B5AELAgEBDEwAAYEBaAGlAeoBsQHEAv8BeAGYAv8BdQGTAv8BcAGOAv8BawGJAv8BZwGD
        Av8BYQGAAv8BXAF7Av8BVwF1Av8BUQFwAv8BSgFpAv8BkAGhAv8BXQFGAZ4B6ggAASwBCwEHATwBXgGU
        AVQB5gFuAcABegH/AUUBIgETAW8IAAFMATMBHAGRAV8BrgFpAf8BfgHNAYkB/wF9Ac0BhwH/AVcBpQFg
        Af8BNwF+ATsB/AEHAgEBCBQAATgBGAEeAVoBcgHIAe0B/wH5Af4C/wFfAdwB9AH/AT8BogHVAf8BPwGi
        AdUB/wFdAdkB9AH/Ae0B+wH+Af8BaQG7AeUB/wE2ARQBHAFaUAABjAF7AbwB8gG4Ac0C/wF/AaAC/wF+
        AZ0C/wF6AZkC/wF1AZMC/wFwAY4C/wFrAYkC/wFnAYMC/wFiAYAC/wFbAXoC/wFRAXIC/wGYAaoC/wFl
        AVYBtwHyDAABMAEOAQgBQwFBAR0BEQFlEAABTQE0ARwBkQFgAa8BagH/AYABzgGKAf8BfwHOAYkB/wFY
        AaYBYQH/ATgBfwE8AfwBBwIBAQgUAAFGAX8BoQHUAakB3wH0Af8B7QH5Af0B/wE/AaMB1gH/AT8BowHW
        Af8B1AH1AfwB/wGiAdcB8QH/AUABYAGCAcNUAAF7AUsBcQHUAbwBzQH8Af8BnAG7Av8BgQGlAv8BgQGi
        Av8BfgGeAv8BegGZAv8BdgGTAv8BcQGOAv8BawGJAv8BYgGBAv8BegGTAv8BngGtAfsB/wFjATQBbAHU
        KAABTQE0ARwBkQFhAbABawH/AYEBzwGNAf8BgAHPAYsB/wFZAacBYgH/AToBhQFBAf8BBwIBAQgQAAEj
        AQgBCQEwAToBtQHkAf0B+QH9Av8BlAHpAfkB/wGeAesB+gH/AewB+gH+Af8BMAGlAdwB/AEjAQcBCQEw
        VAABMQECAQMBSgGOAW4BmgHkAcEB0QH8Af8BoAG/Av8BhgGqAv8BhQGnAv8BgQGiAv8BfgGdAv8BegGY
        Av8BcQGQAv8BhQGhAv8BrAG6AfsB/wF4AVgBlAHkATEBAgEDAUosAAFNATUBHAGRAWMBsgFtAf8BggHR
        AY8B/wF7AcgBhQH/AVgBpgFhAf8BQgEgAQ8BexQAAUkBXQF0AbQBlAHYAfIB/wHzAfwB/gH/AecB+gH+
        Af8BjwHTAfAB/wFFATwBUAGWXAABMQECAQMBSQGJAWUBiwHfAcQB1AH8Af8BowHCAv8BiwGvAv8BiQGr
        Av8BhAGnAv8BgAGgAv8BkQGuAv8BtAHDAfsB/wF6AVEBgAHbATEBAgEDAUo0AAFNATUBHQGRAWQBswFu
        Af8BYAGvAWoB/wFEASIBEgF5GAABDwICARIBPwGoAdIB8gHxAfoB/QH/AdUB7wH6Af8BPAGaAccB7QEP
        AgIBEmAAATEBAgEDAUoBkAFyAZoB5AHCAdMB/AH/AcEB1gL/Ab0B0QL/AbsBzwL/AbkBzgL/AbcByAH8
        Af8BmAGfAe0B/wFEAQYBCgFyPAABTQE1AR0BkQFIASgBFQF/IAABSQFBAVEBlQGFAdQB8QH/AYIB0QHw
        Af8BPQEgASgBaWgAATIBAgEDAUsBfQFMAW0B0gGUAYEBugHwAYsBcQGkAekBigFwAaQB6QGMAX4BuAHw
        AXYBRwFsAdIBNgEDAQQBUwEGAgEBBmQAAQMCAQEDAUgBggGiAdQBSQFtAYkBwwEDAgEBA/8AWQABQgFN
        AT4HAAE+AwABKAMAAUADAAEQAwABAQEAAQEFAAGAFwAD/wEABv8CAAHwAQcB+QH/BAAB4AEHAfAB/wQA
        AcABAwHgAX8EAAGAAQEBwAE/AYABAQIAAYABAQGAAR8BgAEBAgABgAEBAQABDwHAAQMCAAGAAQEBAAEH
        AcABAwIAAYABAQGGAQMB4AEHAgABgAEBAc8BAQHwAQ8CAAGAAQEB/wGAAfABDwIAAYABAQH/AcAB+AEf
        AgABwAEDAf8B4QH4AR8CAAHgAQcB/wHzAfwBPwIAAfABBwL/AfwBPwIABv8CAAs=
</value>
  </data>
</root>